; 6502bench SourceGen v1.7.3
KBD             .eq     $c000             ;R last key pressed + 128
SETSTDZP        .eq     $c008             ;W use main stack and zero page
KBDSTRB         .eq     $c010             ;RW keyboard strobe
SPKR            .eq     $c030             ;RW toggle speaker
TXTCLR          .eq     $c050             ;RW display graphics
MIXCLR          .eq     $c052             ;RW display full screen
TXTPAGE1        .eq     $c054             ;RW display page 1
HIRES           .eq     $c057             ;RW display hi-res graphics
BUTN0           .eq     $c061             ;R switch input 0 / open-apple
BUTN1           .eq     $c062             ;R switch input 1 / closed-apple
MON_PREAD       .eq     $fb1e             ;read paddle specifed by X-reg, return in Y-reg
MON_WAIT        .eq     $fca8             ;delay for (26 + 27*Acc + 5*(Acc*Acc))/2 cycles

                .org    $0000
DstHGR          tay
                .dd1    $27
PageNum         .dd1    $20
                .dd1    $82
                .dd1    $7d
                .dd1    $ff
                .dd1    $1f
SrcP            .dd2    $90ce
Src_2           .dd2    $8b80
XLocDiv7        .dd1    $00
YLoc            .dd1    $9e
XLocation       .dd1    $e8
YLocation       .dd1    $78
                .dd1    $00
div7_1          .dd1    $21
div7_2          .dd1    $21
bltHeight       .dd1    $00
                .dd1    $00
dstPtr          .dd2    $3dd0
enmXPtr         .dd2    $0000
enmYptr         .dd2    $ffff
XLocDiv7Ptr     .dd2    $7054
YLocPtr         .dd1    $ff
YLocPtrHi       .dd1    $ff
v1e             .dd1    $00
v1f             .dd1    $00
v20             .dd1    $00
v21             .dd1    $28
v22             .dd1    $00
v23             .dd1    $18
v24             .dd1    $00
v25             .dd1    $17
v26             .dd1    $42
v27             .dd1    $42
v28             .dd1    $80
v29             .dd1    $19
                .junk   1
v2b             .dd1    $60
v2c             .dd1    $e3
                .junk   1
v2e             .dd1    $1d
                .junk   1
v30             .dd1    $ff
v31             .dd1    $ff
v32             .dd1    $ff
v33             .dd1    $00
v34             .dd1    $f0
v35             .dd1    $fd
v36             .dd1    $f0
                .dd1    $fd
Count38         .dd1    $13
L39             .dd1    $fd
                .dd1    $00
                .dd1    $00
                .dd1    $ff
                .dd1    $10
                .dd1    $00
                .dd1    $00
                .dd1    $50
                .dd1    $00
                .dd1    $44
                .dd1    $b0
                .dd1    $00
                .dd1    $3a
v46             .dd1    $00
v47             .dd1    $00
v48             .dd1    $00
v49             .dd1    $ff
v4a             .dd1    $00
v4b             .dd1    $00
PointerToMusic  .dd2    $ffff
ptr4e           .dd1    $75
ptr4eHi         .dd1    $ef
pointer5L       .dd1    $ff
pointer5Hi      .dd1    $ff
                .dd1    $7d
                .dd1    $ad
                .dd1    $ad
                .dd1    $ad
                .dd1    $00
                .dd1    $00
                .dd1    $ff
                .dd1    $ff
                .dd1    $00
                .dd1    $00
                .dd1    $ff
                .dd1    $ff
                .dd1    $00
                .dd1    $00
                .junk   160
                .junk   256
                .junk   256
                .junk   256
L0400           .junk   256
protectionJunk  .junk   768               ;if zero'd will reboot
                .dd1    $20
                .dd1    $04
                .dd1    $22
                .dd1    $20
                .dd1    $00
                .dd1    $33
                .dd1    $20
                .dd1    $bf
                .dd1    $71
                .dd1    $4c
                .dd1    $2d
                .dd1    $08
PlayerX         .dd1    $00
InputType       .dd1    $00
v80e            .dd1    $00
s1HoleIndex     .dd1    $00
YregSave        .dd1    $00
PlayerY         .dd1    $00
PlayerXsav      .dd1    $00
PlayerYSav      .dd1    $00
AddrNotUsed?    .dd1    $00
AddrHi          .dd1    $00
                .dd1    $00
PreshiftAddrHi  .dd1    $00
isJump          .dd1    $00
s3BoxFaceDirection? .dd1 $00
MackJumpStep    .dd1    $00
                .dd1    $00
SavedKBDDD      .dd1    $00
isNoSound2      .dd1    $00
Var2            .dd1    $01
PlayerGoUpFlag  .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
pdlX            .dd1    $00
pdlY            .dd1    $00
l825            .dd1    $00
ZeroIfStandStill .dd1   $00
S2L2            .dd1    $00
fixS2PlayerY    .dd1    $00
generalCounter  .dd1    $00
lifeRelated     .dd1    $00
isSkipStartMusic .dd1   $00
EnmCount        .dd1    $01

L082D           lda     #$21              ;Set to Stage1
                sta     goStage+1
                lda     #$09
                sta     goStage+2
                sta     KBDSTRB
                lda     #$00
                sta     NextStage
                jsr     InitLIFE
                jsr     HGRdo
                lda     isNoSound2
                sta     isNoSound1
L084B           jsr     setInGameLoop
                jsr     Key1
                lda     v80e
                beq     L084B
L0856           lda     #$00
                sta     EnmCount
                sta     isInGameLoop      ;No in game loop, need some setup
                lda     isNoSound1
                sta     isNoSound2
                jsr     encryptJmp
                sta     KeyRIGHT
                jsr     InitLIFE
goStage         jmp     St1_1

St3_1           jsr     s3initB
St3_2           jsr     s3DrawBoard
                jsr     PrtScore
                jsr     PrtHisScore
                lda     isInGameLoop
                bne     St3Loop
                lda     isSkipStartMusic
                bne     St3_3
                ldy     #>TitleMusic
                ldx     #<TitleMusic
                jsr     playMusic
                jmp     St3Loop

St3_3           jsr     Wait3
St3Loop         jsr     testPlayerYXat18
                jsr     TstPlayerYatB0
                jsr     tstKey
                jsr     s3PlayerOnBelt    ;if Player On Belt then pull to left
                lda     PlayerX
                jsr     s3CheckPlayerX    ;test Player X >= 7F, ret 1 else 0
                sta     s3PlayerXover7F
                jsr     s3UpDownBelt
                jsr     tstS2Flg
                jsr     testPlayerXNearBelt
                jsr     s3TstPlayerXXXX
                jsr     s3PlayLeftPlatform
                jsr     s3doMackFalling   ;Player at falling area?
                jsr     s3TestPickBox     ;?? Player picked box
                jsr     s3TestDropMaterial
                jsr     KeyThing
                jsr     s2_787d
                jsr     s3TestPlayerFallInHole
                jsr     setMackMusic
                jsr     doSound
                ldx     #$00
                jsr     MON_PREAD
                sty     pdlX
                jsr     UptEnemies
                jsr     s3AnimeHBelt
                jsr     s3AnimeTallRollingPoint
                jsr     s3AnimeINpoint
                jsr     getSt1TopGift     ;Stage 3
                jsr     tstEnm
                jsr     s3TestDropBox
                jsr     s3UptNailToPot
                jsr     s2CheckRIghtPressor ;?st3 bonus piece subtract 8
                jsr     isHitEletric      ;check Playery $28to$8, X?
                jsr     s3drawSpike
                jsr     s3CheckCompleted
                jsr     s3OffTallBelt
                jsr     tstAddLIFE
                lda     #$01
                sta     PointsToAdd+2
                jsr     BonusUpdatePrint
                ldx     #$01
                jsr     MON_PREAD
                sty     pdlY
                lda     isNoSound2
                bne     St3_4
                lda     #$30
                jsr     MON_WAIT
St3_4           jsr     checkStart
                jmp     St3Loop

St1_1           jsr     s1_InitBlockHole
St1_2           jsr     drawS1InitObj
                jsr     PrtScore
                jsr     PrtHisScore
                lda     isInGameLoop
                bne     Stage1Loop
                lda     isSkipStartMusic
                bne     St1_3
                ldy     #>TitleMusic      ;TitleMusic
                ldx     #<TitleMusic
                jsr     playMusic
                jmp     Stage1Loop

St1_3           jsr     Wait3
Stage1Loop      jsr     testPlayerYXat18
                jsr     tstKey
                jsr     checkJump
                jsr     s1_650e
                jsr     S1checkPickedBlock
                jsr     s1DrawHoldIngBlock
                jsr     TestS1DropBlock
                jsr     s1TestFixedAllHole
                jsr     s1_fall_into_Hole
                jsr     UptEnemies
                jsr     tstEnm
                jsr     tstEhammer        ;Bonus Item
                jsr     S1TstWelding
                jsr     setMackMusic
                jsr     doSound
                ldx     #$00
                jsr     MON_PREAD
                sty     pdlX
                jsr     doNail
                jsr     collideNail
                jsr     KeyThing
                jsr     getSt1TopGift
                jsr     TestS1Bell        ;did Player Ring the bell
                jsr     doEHammer
                jsr     tstLIFT
                jsr     s1_6432
                jsr     s1_TestLift
                jsr     tstAddLIFE        ;check 7?
                lda     #$01
                sta     PointsToAdd+2
                jsr     BonusUpdatePrint
                ldx     #$01
                jsr     MON_PREAD
                sty     pdlY
                lda     isNoSound2
                beq     St1_4
                lda     #$30
                jsr     MON_WAIT
St1_4           jsr     checkStart
                jmp     Stage1Loop

St2_1           jsr     s2_initArray
St2_2           jsr     s2PutInitialObj
                jsr     PrtScore
                jsr     PrtHisScore
                lda     isInGameLoop
                bne     St2Loop
                lda     isSkipStartMusic
                bne     St2_3
                ldy     #>TitleMusic
                ldx     #<TitleMusic
                jsr     playMusic
                jmp     St2Loop

St2_3           jsr     Wait3
St2Loop         jsr     doS2Lift
                jsr     testPlayerYXat18
                jsr     tS2onLift
                jsr     testPlayerSomething
                jsr     TstPlayerYatB0    ;S2 ground is BC
                jsr     tstKey
                jsr     S2TestPlayerY2
                jsr     tstEnm
                jsr     tstS2Flg
                jsr     tstS2_8
                jsr     s2UpdateMackGoUpRail
                jsr     doSt2StoveFire
                jsr     doSt2Dropping
                jsr     doSt2DropToPot
                jsr     testS2UpperBelt
                jsr     TstS2OnBelt2
                ldx     #$00
                jsr     MON_PREAD
                sty     pdlX
                jsr     s2_787d
                jsr     setMackMusic
                jsr     doSound
                jsr     s2LiftMotor
                jsr     KeyThing
                jsr     s2_5af8
                jsr     UptEnemies
                jsr     getSt1TopGift
                jsr     s2CheckRIghtPressor
                jsr     s2_HitTNT
                jsr     s2CheckLowerLeftClapper
                jsr     s2_Hitdump
                jsr     s2_L5ACC
                jsr     s2MagnetUpd
                jsr     S2MagnetPickMack?
                jsr     S2_SpinRollerPoint ;draw st2 belt roller
                jsr     s2UpdateTNT
                jsr     s2UpdClamper
                jsr     s2TestToolboxTaken
                jsr     tstEnm
                jsr     tstAddLIFE
                lda     #$01
                sta     PointsToAdd+2
                jsr     BonusUpdatePrint
                ldx     #$01
                jsr     MON_PREAD
                sty     pdlY
                lda     isNoSound2
                beq     St2Skip
                lda     #$30
                jsr     MON_WAIT
St2Skip         jsr     checkStart
                jmp     St2Loop

InitLIFE        lda     #$02
                sta     LIFE
                lda     #$20
                sta     PageNum
                lda     #$01
                sta     L7000
                lda     #$00
                sta     v80e
                sta     drawLevelDigit-1
                sta     generalCounter
                sta     flag7193
                ldx     #$04
InitLIFE_loop   sta     Bonus,x
                sta     Score,x
                dex
                bpl     InitLIFE_loop
                lda     #$ff
                rts

init0A9B        lda     #$00
                sta     s3BoxFaceDirection?
                sta     v80e
                sta     isJump
                sta     MackJumpStep
                sta     L75AE
                sta     s1nailVarLfdc
                sta     StagePlay-1
                sta     L6D69
                sta     s3TblBelt-1
                sta     isPicked
                sta     L77AE
                sta     tbls2dumpX-1
                sta     L76CB
                sta     L77BB
                sta     L77BC
                sta     L7A7A
                sta     S2StoveVar2
                sta     isS3SpikeInit
                sta     L6BA7
                sta     EHammerSRC2+1
                sta     liftPoleVar
                sta     gotEHammer
                sta     L6376
                sta     L6377
                sta     v6505
                sta     v6503
                sta     Var2
                sta     SpinningMackType
                sta     Bonus             ;Init Bonus
                sta     Bonus+1
                sta     Bonus+2
                sta     Bonus+3
                sta     BonusHPos-1
                sta     KBDSTRB
                sta     vDoneFlag
                sta     vFlagCountBon
                sta     isMackOnS2Rail?
                sta     S2_RailCountDown
                sta     s2_RailVar
                sta     S23ThingB
                sta     l825
                sta     fixS2PlayerY
                sta     s2s3JumpFlag
                sta     S2Thing
                sta     s2OnUppeerBelt
                sta     sdbelt22
                sta     tbls2dumpX
                sta     tbls2dumpX+1
                sta     tbls2dumpY
                sta     tbls2dumpY+1
                sta     PlayerS3AboutToFallVar
                sta     s3v5FD6
                sta     S2LiftY
                sta     s3vPlayerBeltVar
                sta     Vars3TestDropBox
                sta     lifeRelated
                sta     vSmall
                sta     s3NailToPotPoint
                sta     s2s3JumpFlag+1
                lda     #$01
                sta     S2PressVar1
                sta     L7A7F
                sta     spinMackWait
                sta     doS2Lift-1
                lda     #$04
                sta     YregSave
                ldy     generalCounter
                lda     tblBonus,y
                sta     Bonus+3           ;store initial bonus, thousand digit e.g 5000
                lda     #$0f
                sta     S2L2
                lda     #$7d
                sta     v6507
                lda     #$80
                sta     v6506
                lda     #$70
                sta     LIFE-1
                lda     #$bc
                sta     onLF0
                lda     #$b4
                sta     liftY?
                jsr     HGRdo
                lda     #$1a
                sta     v4b
                sta     SNDstrangeA1
                lda     #$f4
                sta     v4a
                sta     SNDstrangeA0
                rts

HGRdo           lda     #$20
                sta     selfMod+2
HGR_2           ldx     #$00
HGR_3           lda     #$00
selfMod         sta     YTableL,x
                inx
                bne     HGR_3
                cmp     #$eb
                beq     Key1_2
                cmp     #$ea
                beq     Key1_4
                inc     selfMod+2
                lda     selfMod+2
                cmp     #$40
                bne     HGR_2
                bit     TXTCLR
                bit     TXTPAGE1
                bit     MIXCLR
                bit     HIRES
                rts

Key1            lda     KBD               ;from demo loop
                bmi     Key1_1            ;Key Pressed
                jmp     Key1_3

Key1_1          sta     $081c
                jsr     L1BBD
                lda     SavedKBDDD
                jsr     tesrKeyStageSelect
                lda     SavedKBDDD
                cmp     #$b0
                beq     Key1_4
                cmp     #$ca
                beq     Key1_4
                cmp     #$a0
                beq     Key1_2
                cmp     #$cb
                bne     Key1_3
Key1_2          lda     #$00
                sta     InputType
                jmp     L0C15

Key1_3          lda     KBD
                cmp     SETSTDZP          ;key differ from prevuous?
                bne     L0C1A
                ldx     #$00
                jsr     MON_PREAD
                cpy     #$ff
                beq     L0C1A
                lda     BUTN0
                cmp     #$80
                bcs     Key1_4
                rts                       ;No key, paddle nor button push

Key1_4          lda     #$01
                sta     InputType
L0C15           lda     #$01
                sta     v80e
L0C1A           rts

TblmacWalkRight2 .dd1   $00
                .dd1    $94
                .dd1    $00
                .dd1    $96
                .dd1    $00
                .dd1    $98
                .dd1    $00
                .dd1    $96
TblmackRightSprite .dd1 $00
                .dd1    $9a
                .dd1    $00
                .dd1    $9c
                .dd1    $00
                .dd1    $9e
                .dd1    $00
                .dd1    $9c
TblmackFrontSprite .dd1 $00
                .dd1    $a4
                .dd1    $00
                .dd1    $a6
TblJumpForX     .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
TbljumpUp       .dd1    $fe
                .dd1    $fe
                .dd1    $fe
                .dd1    $fe
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02

tstKey          lda     Var2
                beq     @_1
                rts

@_1             lda     isJump
                beq     @_2
                jmp     KeyIsSpace

@_2             lda     InputType
                beq     @_3
                jmp     CheckBTN

@_3             lda     KBD
                bmi     @_4
                lda     #$00
                sta     ZeroIfStandStill
                rts

@_4             ldx     l825
                bne     isSpace
isKeyA          cmp     #$c1
                bne     isKeyZ
                jmp     KeyIsA

isKeyZ          cmp     #$da
                bne     isKeyRIght
                jmp     KeyIsZ

isKeyRIght      cmp     #$95
                bne     isKeyLEFT
KeyRIGHT        jmp     KeyIsRight

isKeyLEFT       cmp     #$88
                bne     isSpace
                jmp     KeyIsLeft

isSpace         cmp     #$a0
                bne     @_1
                jmp     KeyIsSpace

@_1             lda     #$00
                sta     ZeroIfStandStill
                rts

KeyIsA          jsr     TestPlayerUp
                lda     PlayerGoUpFlag
                bne     TryUp
                rts

TryUp           lda     #$00
                sta     s3BoxFaceDirection?
                dec     PlayerY
                dec     PlayerY
                lda     PlayerY
                and     #$02
                tay
                iny
                lda     TblmackFrontSprite,y ;mack updown bitmap tbl point to $a400 $a600
                sta     AddrHi
                sta     SrcP+1
                jmp     xDrawPlayer

KeyIsZ          jsr     TestPlayerDown
                lda     PlayerGoUpFlag
                bne     TryDown
                rts

TryDown         lda     #$02
                sta     s3BoxFaceDirection?
                inc     PlayerY
                inc     PlayerY
DrawDownMackFixed lda   #>mackFrontSprite ;mack updown bitmap at $a400
                sta     AddrHi
                sta     SrcP+1
                jsr     checkMackFaceDirection
                jmp     xDrawPlayer

KeyIsRight      lda     S23ThingB
                bne     L0D05
                jsr     tstFloor
                lda     PlayerGoUpFlag
                bne     L0D05
                rts

L0D05           inc     PlayerX
                inc     PlayerX
                lda     PlayerX
                and     #$06
                tay
                iny
L0D12           lda     TblmacWalkRight2,y ;mack tbl at $9400 walk right, 9600 stand right
                sta     AddrHi
                sta     SrcP+1
                jsr     checkMackFaceDirection
                lda     #$01
                sta     s3BoxFaceDirection?
                jmp     xDrawPlayer

KeyIsLeft       lda     S23ThingB
                bne     MovePlayerUp
                jsr     tstFloor
                lda     PlayerGoUpFlag
                bne     MovePlayerUp
                rts

MovePlayerUp    dec     PlayerX
                dec     PlayerX
                lda     #$03
                sta     s3BoxFaceDirection?
                lda     PlayerX
                and     #$06
                tay
                iny
                lda     TblmackRightSprite,y ;point to 9a00,9c00 (walk left, stand left)
                sta     AddrHi
                sta     SrcP+1
                jsr     checkMackFaceDirection
                jmp     xDrawPlayer

KeyIsSpace      lda     s2s3JumpFlag
                beq     @_1
                lda     #$00
                sta     ZeroIfStandStill
                rts

@_1             lda     isJump
                bne     @_2
                sta     KBDSTRB
                lda     #$00
                sta     MackJumpStep
                sta     S23ThingB
                sta     isMackOnS2Rail?
                lda     #$01
                sta     isJump
                ldy     #$1b
                ldx     #$04
                jsr     SNDRoutine?
@_2             lda     s3BoxFaceDirection?
                cmp     #$01
                bne     @_3
                lda     #>macJumpRightSprite ;point to jump right bitmap at a000
                sta     AddrHi
                sta     SrcP+1
                lda     #$18              ;set Self Modify code to adding
                sta     @_selfModCarry
                lda     #$79
                sta     @_selfModAddSub
                jmp     @_5

@_3             lda     s3BoxFaceDirection?
                cmp     #$03
                beq     @_4
                lda     #$00
                sta     isJump
                rts

@_4             lda     #>macJumpLeftSprite ;point to jump left bitmap at a200
                sta     AddrHi
                sta     SrcP+1
                lda     #$38              ;set Self Modify code to  SEC. SBC
                sta     @_selfModCarry
                lda     #$f9
                sta     @_selfModAddSub
@_5             ldy     MackJumpStep
@_selfModCarry  clc
                lda     PlayerX
@_selfModAddSub adc     TblJumpForX,y     ;point to go right, central and left (2,0,-2)
                sta     PlayerX
                clc
                lda     PlayerY
                adc     TbljumpUp,y
                ora     fixS2PlayerY
                sta     PlayerY
                iny
                sty     MackJumpStep
                jsr     checkBelt2
                jsr     xDrawPlayer
                jsr     testStage23Jump
                lda     MackJumpStep
                cmp     S2L2
                bcs     ErazsMack
                rts

ErazsMack       lda     #$00
                sta     isJump
                sta     S2Thing
                sta     l825
                lda     s2s3JumpFlag+1
                beq     @_1
                lda     #92
                sta     PlayerX
                lda     #0
                sta     s2s3JumpFlag+1
@_1             lda     s3BoxFaceDirection?
                cmp     #1
                beq     @_2
                jmp     removeMackStandLeftSprite

@_2             jmp     removeMacStandRightSprite

xDrawPlayer     lda     PlayerX
                and     #$fe
                sta     PlayerX
                sta     XLocDiv7
                lda     PlayerY
                sta     YLoc
                lda     PlayerXsav
                sta     XLocation
                lda     PlayerYSav
                sta     YLocation
                lda     PreshiftAddrHi
                sta     Src_2+1
                jsr     XorPreshiftShape
                lda     PlayerX
                sta     PlayerXsav
                lda     PlayerY
                sta     PlayerYSav
                lda     AddrHi
                sta     PreshiftAddrHi
                lda     #$01
                sta     ZeroIfStandStill
                rts

                .dd1    $68
                .dd1    $68
                .dd1    $28
                .dd1    $28
                .dd1    $88
                .dd1    $88
                .dd1    $48
                .dd1    $48
                .dd1    $88
                .dd1    $68
                .dd1    $48
                .dd1    $28
                .dd1    $a8
                .dd1    $88
                .dd1    $68
                .dd1    $48
                .dd1    $88
                .dd1    $bd
                .dd1    $31
                .dd1    $e7
                .dd1    $bd
                .dd1    $07
                .dd1    $15
                .dd1    $cb
                .dd1    $15
                .dd1    $93
                .dd1    $e7
L0E61           .dd1    $00
                .dd1    $03
                .dd1    $03
                .dd1    $00
L0E65           .dd1    $00
                .dd1    $00
Xpoint2         .dd1    $00

TestPlayerUp    lda     PlayerY
                cmp     #188
                bcs     L0E74
                ora     #$01
                sta     PlayerY
L0E74           ldy     StagePlay
                lda     L0E61,y           ;0, 3 ,3 ?
                tay
L0E7B           lda     (v22),y           ;look up S1 $e5c
                beq     L0E85
                clc
                adc     #14               ;add offset
                jmp     L0E88

L0E85           clc
                adc     #$08
L0E88           sta     Xpoint2           ;targetX?
                lda     PlayerY
                cmp     (v20),y           ;s1 = $e52
                bcc     L0E95
                jmp     @_next

L0E95           cmp     (v1e),y           ;? Ypoint 2
                bcs     L0E9C
                jmp     @_next

L0E9C           lda     PlayerX
                cmp     (v22),y           ;;s1 e5c
                bcs     L0EA6
                jmp     @_next

L0EA6           cmp     Xpoint2
                bcc     @matchXY
                jmp     @_next

@matchXY        jmp     L0F18

@_next          dey                       ;next point
                bpl     L0E7B
                lda     #$00
                sta     PlayerGoUpFlag
                sta     ZeroIfStandStill
                rts

TestPlayerDown  ldy     StagePlay
                lda     L0E61,y
                tay
L0EC4           lda     (v22),y
                beq     L0ECE
                clc
                adc     #$0e
                jmp     L0ED1

L0ECE           clc
                adc     #$08
L0ED1           sta     Xpoint2
                lda     (v1e),y
                sec
                sbc     #$01
                sta     L0E65
                lda     (v20),y
                sec
                sbc     #$01
                sta     Xpoint2-1
                lda     PlayerY
                cmp     L0E65
                bcs     L0EEF
                jmp     @next

L0EEF           cmp     Xpoint2-1
                bcc     L0EF7
                jmp     @next

L0EF7           lda     PlayerX
                cmp     (v22),y
                bcs     L0F01
                jmp     @next

L0F01           cmp     Xpoint2
                bcc     L0F09
                jmp     @next

L0F09           jmp     L0F18

@next           dey
                bpl     L0EC4
                lda     #$00
                sta     PlayerGoUpFlag
                sta     ZeroIfStandStill
                rts

L0F18           lda     #$01
                sta     PlayerGoUpFlag
                rts

St1FloorsHeight .dd1    $27
                .dd1    $47
                .dd1    $67
                .dd1    $87
                .dd1    $a7
                .dd1    $bc

tstFloor        ldy     #$05
L0F26           lda     PlayerY
                cmp     St1FloorsHeight,y
                beq     L0F37
                dey
                bpl     L0F26
                lda     #$00
                sta     PlayerGoUpFlag
                rts

L0F37           cmp     #$a7
                beq     L0F41
                lda     #$01
                sta     PlayerGoUpFlag
                rts

L0F41           lda     StagePlay
                cmp     #$03
                beq     L0F4E
                lda     #$01
                sta     PlayerGoUpFlag
                rts

L0F4E           lda     #$00
                sta     PlayerGoUpFlag
                rts

checkMackFaceDirection lda s3BoxFaceDirection?
                cmp     #$01
                beq     @_1
                cmp     #$02
                beq     @_type2
                cmp     #$03
                beq     @_type3
                rts

@_1             jsr     @_type3
                lda     PlayerX
                ldx     StagePlay
                cmp     TbltargetXpos,x   ;check Player X
                bne     exitBeltCheck     ;not yet
                lda     tblNextXpos,x     ;get Next Player X position?
                sta     PlayerX
                rts

@_type3         lda     PlayerX
                cmp     #251
                bcc     exitBeltCheck     ;Player X < 251
                lda     #$00              ;why set player X to 0 ?
                sta     PlayerX
                rts

@_type2         lda     PlayerY
                cmp     #189
                bne     exitBeltCheck
                lda     #188              ;restrict Player Y to 188
                sta     PlayerY
exitBeltCheck   rts

TbltargetXpos   .dd1    0
                .dd1    240
                .dd1    0
                .dd1    240
tblNextXpos     .dd1    0
                .dd1    238
                .dd1    254
                .dd1    238

checkBelt2      lda     s3BoxFaceDirection?
                cmp     #1
                beq     @_1
                cmp     #3
                beq     @_3
                rts

@_1             lda     PlayerX
                ldx     StagePlay
                cmp     TbltargetXpos,x
                bne     exitBeltCheck
                lda     tblNextXpos,x
                sta     PlayerX
                lda     #3
                sta     s3BoxFaceDirection?
                rts

@_3             lda     PlayerX
                cmp     #254
                bne     exitBeltCheck
                lda     #0
                sta     PlayerX           ;why zero?
                lda     #1
                sta     s3BoxFaceDirection?
                rts

StartLineByte   .dd1    $00
EndLineByte     .dd1    $00
Yline           .dd1    $00
Ything2         .dd1    $00
OrByte          .dd1    $00
XorByte         .dd1    $00
NailX           .dd1    $00
NailY           .dd1    $00
NailPosSav      .dd1    $00
NailPosSavB     .dd1    $00
NailSubtract    .dd1    $00
NailAddB        .dd1    $00
s1nailVarLfdc   .dd1    $00
NailSavedAddB   .dd1    $00
s1NailStepY     .dd1    $00
                .dd1    $00
                .dd1    $00
drawGroundLineVar .dd1  $00
Lfe2            .dd1    $00
sFloorsY        .dd1    $27
                .dd1    $47
                .dd1    $67
                .dd1    $87
                .dd1    $a7
                .dd1    $bc
L0FE9           .dd1    $2f
                .dd1    $4f
                .dd1    $6f
                .dd1    $8f
                .dd1    $af
                .dd1    $bc
L0FEF           .dd1    $04
                .dd1    $06
                .dd1    $08
                .dd1    $0a
                .dd1    $0c
                .dd1    $0e
                .dd1    $10
                .dd1    $12
                .dd1    $14
                .dd1    $16
                .dd1    $18
                .dd1    $1a
                .dd1    $1c
                .dd1    $1e
tblSt1Floor2    .dd1    $60
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $40
L100B           .dd1    $47
                .dd1    $67
                .dd1    $87
                .dd1    $a7
L100F           .dd1    $08
L1010           .dd1    $1a
L1011           .dd1    $bf
L1012           .dd1    $06
                .dd1    $0e
                .dd1    $14
                .dd1    $1c

s3DrawBoard     jsr     init0A9B
                lda     #$01
                sta     L45FF
                sta     StagePlay
                jsr     s3_DrawPlatform
                jsr     s3DrawJumpad
                jsr     drawS13Ground
                jsr     s3DrawStorage
                jsr     s3DrawLowRoller
                jsr     s3LeftBelt
                jsr     s3drawRightside   ;upper platform, create hole, 2 bottom nail maker
                lda     #$05
                sta     SavYReg
                jsr     s3PutPickitem
                lda     #$09
                jsr     s3NailCollectPot
                lda     #$19
                jsr     s3NailCollectPot
                lda     #>TBLChainXdiv7
                sta     XLocDiv7Ptr+1
                lda     #<TBLChainXdiv7
                sta     XLocDiv7Ptr
                lda     #>TBLChainY
                sta     YLocPtrHi
                lda     #<TBLChainY
                sta     YLocPtr
                jsr     PutClimbingChains
                lda     #$0e
                sta     v1f
                lda     #$46
                sta     v1e
                lda     #$0e
                sta     v21
                lda     #$4a
                sta     v20
                lda     #$0e
                sta     v23
                lda     #$58
                sta     v22
                jsr     s3TopPlatform
                jsr     drawTopAndRightStatus
                jsr     drawLevelTenthDigit ;put real Level 2digit
                jsr     PrtLIFE
                jsr     PrintBonus
                jsr     putBonusPiece
                lda     #$01
                sta     IdxcmpIdxToEnmXPtr?
                jsr     callShiftBytes
                ldy     IdxcmpIdxToEnmXPtr?
L1090           lda     L4D65,y
                sta     cmpIdxToEnmXPtr?,y
                tya
                asl     A
                tax
                lda     tEX,x
                sta     TblEnmXPtr,y
                sta     enmXPtr
                lda     tEy,x
                sta     TblEnmYPtr,y
                sta     enmYptr
                inx
                lda     tEX,x
                sta     TblEnmXPtrHi,y
                sta     enmXPtr+1
                lda     tEy,x
                sta     TblEnmYPtrHi,y
                sta     enmYptr+1
                lda     tEUnknpwn,y
                sta     IdxToEnmXPtr,y
                sta     Count38
                sty     L39
                ldx     L39
                ldy     Count38
                lda     (enmXPtr),y
                sta     enmX,x
                lda     (enmYptr),y
                sta     enmY,x
                ldy     L39
                dey
                bpl     L1090
                lda     #$e0
                sta     PlayerX
                lda     #$47
                sta     PlayerY
                lda     #>mac2WalkLeftSprite
                sta     SrcP+1
                sta     PreshiftAddrHi
                jsr     DrawInitMack
                lda     #$03
                sta     s3BoxFaceDirection?
                lda     #$36
                sta     S2PressVar4
                lda     #$46
                sta     S2PressV6
                lda     #$07
                sta     S2Presser_XByte
                lda     #$36
                sta     S2Presser_XByte+1
                lda     #$38
                sta     S2Presser_XByte+2
                lda     #$30
                sta     S2Presser_XByte+3
                jsr     PutPresser
                jsr     s3SetVar
                jsr     encryptJmp
                sta     L6525+1
                rts

s2PutInitialObj jsr     init0A9B
                lda     #$03
                sta     StagePlay
                lda     #$00
                sta     L45FF
                jsr     s3_DrawPlatform
                jsr     drawS13Ground
                jsr     s2drawUpperRail?
                jsr     s2DrawDumpDropper
                jsr     s2drawDumpPot
                jsr     s2DrawFireStove
                jsr     s2UpperLeftRail
                jsr     putBonusPiece
                jsr     s2InitMovingPlatform
                jsr     drawTopAndRightStatus
                jsr     drawLevelTenthDigit
                jsr     PrtLIFE
                jsr     PrintBonus
                jsr     s2DrawMidLeftBlocker
                jsr     s2PlaceToolsbox
                lda     #>tblS2ChainXdiv7
                sta     XLocDiv7Ptr+1
                lda     #<tblS2ChainXdiv7
                sta     XLocDiv7Ptr
                lda     #>tblS2ChainY
                sta     YLocPtrHi
                lda     #<tblS2ChainY
                sta     YLocPtr
                jsr     PutClimbingChains
                lda     #$0e
                sta     v1f
                lda     #$56
                sta     v1e
                lda     #$0e
                sta     v21
                lda     #$57
                sta     v20
                lda     #$0e
                sta     v23
                lda     #$60
                sta     v22
                lda     #$00
                sta     IdxcmpIdxToEnmXPtr?
                jsr     callShiftBytes
                ldy     IdxcmpIdxToEnmXPtr?
L118B           lda     L4D6D,y
                sta     cmpIdxToEnmXPtr?,y
                tya
                asl     A
                tax
                lda     Tble_TblEnmXPtr,x
                sta     TblEnmXPtr,y
                sta     enmXPtr
                lda     Tbl_TblEnmYPtrHi,x
                sta     TblEnmYPtr,y
                sta     enmYptr
                inx
                lda     Tble_TblEnmXPtr,x
                sta     TblEnmXPtrHi,y
                sta     enmXPtr+1
                lda     Tbl_TblEnmYPtrHi,x
                sta     TblEnmYPtrHi,y
                sta     enmYptr+1
                lda     L4D61,y
                sta     IdxToEnmXPtr,y
                sta     Count38
                sty     L39
                ldx     L39
                ldy     Count38
                lda     (enmXPtr),y
                sta     enmX,x
                lda     (enmYptr),y
                sta     enmY,x
                ldy     L39
                dey
                bpl     L118B
                lda     #$02
                sta     PlayerX
                lda     #$bc
                sta     PlayerY
                lda     #>macStandRightSprite
                sta     SrcP+1
                sta     PreshiftAddrHi
                jsr     DrawInitMack
                lda     #$01
                sta     s3BoxFaceDirection?
                sta     l825
                lda     #$76
                sta     S2PressVar4
                lda     #$86
                sta     S2PressV6
                lda     #$1e
                sta     S2Presser_XByte
                lda     #$d7
                sta     S2Presser_XByte+1
                lda     #$d9
                sta     S2Presser_XByte+2
                lda     #$70
                sta     S2Presser_XByte+3
                jsr     PutPresser
                jsr     s3SetVar
                jsr     encryptJmp
                sta     @_2+1
                rts

drawS1InitObj   jsr     init0A9B
                lda     #$02
                sta     StagePlay
                jsr     XORst1Floor
                jsr     S1DrawVerticalsteelBar
                jsr     s1DrawBaseStand
                jsr     putBonusPiece
                jsr     s1createHole
                jsr     s1DrawBell1
                lda     #>tblS1ChainXdiv7
                sta     XLocDiv7Ptr+1
                lda     #<tblS1ChainXdiv7
                sta     XLocDiv7Ptr
                lda     #>tblS1ChainY
                sta     YLocPtrHi
                lda     #<tblS1ChainY
                sta     YLocPtr
                jsr     PutClimbingChains
                lda     #$0e
                sta     v1f
                lda     #$4e
                sta     v1e
                lda     #$0e
                sta     v21
                lda     #$52
                sta     v20
                lda     #$0e
                sta     v23
                lda     #$5c
                sta     v22
                jsr     @_3
                jsr     drawTopAndRightStatus
                jsr     drawLevelTenthDigit
                jsr     PrtLIFE
                jsr     PrintBonus
                jsr     drawS13Ground
                jsr     drawS1UpperRightthing
                jsr     drawS1Lift
                jsr     DrawS1LiftPole
                jsr     DrawS1JumpPad
                lda     generalCounter
                sta     IdxcmpIdxToEnmXPtr?
                jsr     callShiftBytes
                ldy     IdxcmpIdxToEnmXPtr?
L1288           lda     #$0b
                sta     cmpIdxToEnmXPtr?,y
                lda     L4D5D,y
                sta     IdxToEnmXPtr,y
                tax
                lda     @_1+3,x
                sta     enmX,y
                lda     L4B9C,x
                sta     enmY,y
                lda     #$4b
                sta     TblEnmXPtrHi,y
                lda     #$90
                sta     TblEnmXPtr,y
                lda     #$4b
                sta     TblEnmYPtrHi,y
                lda     #$9c
                sta     TblEnmYPtr,y
                dey
                bpl     L1288
                lda     #$d0
                sta     PlayerX
                lda     #$a7
                sta     PlayerY
                lda     #>macWalkLeftSprite
                sta     PreshiftAddrHi
                sta     SrcP+1
                jsr     DrawInitMack
                lda     #$03
                sta     s3BoxFaceDirection?
                lda     #$02
                sta     v650d
                jsr     S1InitStuff
                jsr     encryptJmp        ;after drawn static thing, go $7431
                sta     setF0             ;will skip?
                rts

drawS13Ground   lda     #$80
                sta     OrByte
                lda     #$01
                sta     drawGroundLineVar
                lda     #$bd
                sta     Yline
                sta     Ything2
                lda     #$00
                sta     StartLineByte
                lda     #$fe
                sta     EndLineByte
                jsr     drawGroundLine
                lda     #$be
                sta     Yline
                sta     Ything2
                lda     #$01
                sta     StartLineByte
                lda     #$ff
                sta     EndLineByte
                jsr     drawGroundLine
                lda     #$bf
                sta     Yline
                sta     Ything2
                lda     #$01
                sta     StartLineByte
                lda     #$ff
                sta     EndLineByte
                jsr     drawGroundLine
                rts

drawS1UpperRightthing lda #38
                sta     XLocDiv7
                lda     #39
                sta     WidthDiv7
                lda     #42
                sta     YLoc
                sec
                sbc     #16
                sta     Ycount
                lda     #>S1clockSprite
                sta     SrcP+1
                lda     #<S1clockSprite
                sta     SrcP
                jsr     BitBlt1
                rts

DrawS1JumpPad   lda     #$23
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$bc
                sta     YLoc
                sec
                sbc     #16
                sta     Ycount
                lda     #>jumpPadSprite
                sta     SrcP+1
                lda     #<jumpPadSprite
                sta     SrcP
                jsr     BitBlt1
                rts

drawS1Lift      lda     #$00
                sta     XLocDiv7
                clc
                adc     #$03
                sta     WidthDiv7
                lda     liftY?
                sta     YLoc
                sec
                sbc     #$31
                sta     Ycount
                lda     #>liftSprite
                sta     SrcP+1
                lda     #<liftSprite
                sta     SrcP
                jsr     BitBlt1
                rts

DrawS1LiftPole  lda     #$01
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #188
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>LiftPoleSprite
                sta     SrcP+1
                lda     #<LiftPoleSprite
                sta     SrcP
                jsr     BitBlt1
                rts

DrawInitMack    lda     PlayerX
                sta     PlayerXsav
                sta     XLocDiv7
                sta     XLocation
                lda     PlayerY
                sta     PlayerYSav
                sta     YLoc
                sta     YLocation
                lda     #$8b
                sta     Src_2+1
                jsr     XorPreshiftShape
                rts

drawTopAndRightStatus lda #$18
                ldx     #$8d
                jsr     PrintNumChar      ;draw 0 bonus score hiScore
                lda     #$18
                ldx     #$b8
                jsr     PrintNumChar      ;print Level 0
                lda     #$18
                ldx     #$d4
                jsr     PrintNumChar      ;Mack #
                rts

XORst1Floor     ldx     #$04
                stx     L39
XORst1Floor1    ldy     #$0d
                sty     Count38
XORst1Floor2    ldx     L39
                lda     L0FE9,x
                jsr     XORst1Floor3
                dec     Count38
                ldy     Count38
                cpy     #$ff
                bne     XORst1Floor2
                dec     L39
                ldx     L39
                cpx     #$ff
                bne     XORst1Floor1
                rts

XORst1Floor3    sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     L0FEF,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #>St1Floor2
                sta     SrcP+1
                lda     #<St1Floor2
                sta     SrcP
                clc
                adc     tblSt1Floor2,y
                sta     SrcP
                lda     SrcP+1
                adc     #$00
                sta     SrcP+1
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                rts

S1DrawVerticalsteelBar ldy #$03
                sty     Count38
L1430           lda     L100F
                sta     XLocDiv7
                jsr     L144B
                ldy     Count38
                lda     L1010
                sta     XLocDiv7
                jsr     L144B
                dec     Count38
                ldy     Count38
                cpy     #$ff
                bne     L1430
                rts

L144B           clc
                adc     #$01
                sta     WidthDiv7
                lda     L100B,y
                sta     YLoc
                sec
                sbc     #$18
                sta     Ycount
                lda     #>VerticalsteelBar
                sta     SrcP+1
                lda     #<VerticalsteelBar
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                rts

s1DrawBaseStand ldy     #$03
                sty     Count38
L1471           lda     L1011
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     L1012,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #>s1BaseStand
                sta     SrcP+1
                lda     #<s1BaseStand
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                dec     Count38
                ldy     Count38
                cpy     #$ff
                bne     L1471
                rts

Ycount          .dd1    $9e
WidthDiv7       .dd1    $0d
bltStore        .dd1    $00

bltXor          brk

bltORA          .dd1    $00

BitBlt1         ldx     YLoc              ;get Y
                lda     YTableL,x         ;look up address
                sta     dstPtr
                lda     YTableH,x
                ora     PageNum           ;this is hex 20, start of HGR1
                sta     dstPtr+1
                ldy     WidthDiv7
                ldx     #$00              ;always 0
@_do_a_line     lda     bltXor            ;is 14a3 not zero?
                bne     @_2               ;do XOR draw
                lda     bltORA
                bne     @_3               ;do OR draw
                lda     bltStore
                beq     @_4
                lda     #$00
                jmp     @_5

@_2             lda     (dstPtr),y
                eor     (SrcP,x)
                jmp     @_5

@_3             lda     (dstPtr),y
                ora     (SrcP,x)
                jmp     @_5

@_4             lda     (SrcP,x)          ;e.g 7FA0
@_5             sta     (dstPtr),y        ;store to screen
                dey                       ;move backward to next BLT location
                clc
                inc     SrcP              ;Update source Pointer to next element
                bne     @_6
                inc     SrcP+1            ;crossed low byte boundary, inc high byte
@_6             cpy     #$ff              ;done a line?
                beq     @_7
                cpy     XLocDiv7          ;simple clipping, crossed left boundary?
                bcs     @_do_a_line       ;nope, do mpre
@_7             dec     YLoc              ;dec Vertically
                lda     YLoc              ;done?
                cmp     #$01
                bne     @_8               ;Not yet
                rts

@_8             lda     Ycount            ;final height
                cmp     YLoc              ;dec current height that go up
                bne     BitBlt1           ;go up for more
                lda     #$00
                sta     bltStore
                sta     bltXor
                sta     bltORA
                rts

                .dd1    $a5
                .dd1    $0c
                .dd1    $38
                .dd1    $e9
                .dd1    $10
                .dd1    $8d
                .dd1    $a0
                .dd1    $14
                .dd1    $a5
                .dd1    $0b
                .dd1    $18
                .dd1    $69
                .dd1    $01
                .dd1    $8d
                .dd1    $a1
                .dd1    $14
                .dd1    $20
                .dd1    $a5
                .dd1    $14
                .dd1    $60

drawGroundLine  lda     StartLineByte
                cmp     EndLineByte
                beq     @_2
@loop           ldy     Yline
                lda     YTableL,y
                sta     dstPtr
                lda     YTableH,y
                ora     PageNum
                sta     dstPtr+1
                ldx     StartLineByte
                lda     tbl_0_1_2_4_8,x
                sta     XorByte
                lda     TBL_div7,x
                tay
                lda     (dstPtr),y
                eor     XorByte
                ora     OrByte
                sta     (dstPtr),y
                cpx     EndLineByte
                bcs     @exit
                inc     StartLineByte
                lda     drawGroundLineVar
                beq     @loop
                inc     StartLineByte
                jmp     @loop

@exit           rts

@_2             ldx     StartLineByte
                lda     tbl_0_1_2_4_8,x
                sta     XorByte
                lda     TBL_div7,x
                tay
                ldx     Yline
@loop2          lda     YTableL,x
                sta     dstPtr
                lda     YTableH,x
                ora     PageNum
                sta     dstPtr+1
                lda     (dstPtr),y
                eor     XorByte
                ora     OrByte
                sta     (dstPtr),y
                cpx     Ything2
                beq     @exit2
                inx
                jmp     @loop2

@exit2          rts

NailShapeTable  .dd1    $00               ;draw sequence of the nail like Apple Shape table
                .dd1    $04               ;draw 1 dpt, then up 3 time and draw
                .dd1    $04
                .dd1    $04
                .dd1    $03               ;then move left and draw
                .dd1    $04               ;then move up and draw
                .dd1    $01               ;then move right 4 time and drawa
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $02               ;then move down with draw
                .dd1    $03               ;move left with draw
                .dd1    $02               ;move down 3 time with draw
                .dd1    $02
                .dd1    $02
                .dd1    $03               ;then move left and draw
                .dd1    $04               ;move up 3 time with draw
                .dd1    $04
                .dd1    $04
                .dd1    $0f               ;unknown condition, exit

drawNail        ldy     #$00
                sty     Count38
L15A8           ldy     Count38
                lda     (SrcP),y          ;draw a dot if zero
                beq     @drawDot
                cmp     #$01              ;move right then draw a dot
                beq     @_1
                cmp     #$02
                beq     @_2               ;move down then draw
                cmp     #$03
                beq     @_3               ;move left then draw
                cmp     #$04
                beq     @_4               ;move up then draw
                cmp     #$05
                beq     @_5               ;move right
                cmp     #$06
                beq     @_6
                cmp     #$07
                beq     @_7
                cmp     #$08
                beq     @_8
                rts

@drawDot        jsr     drawRod
                jmp     L163C

@_1             inc     XLocDiv7
                jsr     drawRod
                jmp     L163C

@_2             inc     YLoc
                jsr     drawRod
                jmp     L163C

@_3             dec     XLocDiv7
                jsr     drawRod
                jmp     L163C

@_4             dec     YLoc
                jsr     drawRod
                jmp     L163C

@_5             inc     XLocDiv7
                jmp     L163C

@_6             inc     YLoc
                jmp     L163C

@_7             dec     XLocDiv7
                jmp     L163C

@_8             dec     YLoc
                jmp     L163C

drawRod         ldy     YLoc
                lda     YTableL,y
                sta     dstPtr
                lda     YTableH,y
                ora     PageNum
                sta     dstPtr+1
                ldx     XLocDiv7
                lda     tbl_0_1_2_4_8,x
                sta     XorByte
                lda     TBL_div7,x
                tay
                lda     (dstPtr),y
                ldx     Lfe2
                bne     L1633
                eor     XorByte
                ora     OrByte
                sta     (dstPtr),y
                rts

L1633           ora     XorByte
                ora     OrByte
                sta     (dstPtr),y
                rts

L163C           inc     Count38
                ldy     Count38
                lda     (SrcP),y
                cmp     #$0f
                beq     L1649
                jmp     L15A8

L1649           rts

tblS1NailSub    .dd1    $03
                .dd1    $04
                .dd1    $05
                .dd1    $06
tblS1NailAdd    .dd1    $fa
                .dd1    $fa
                .dd1    $fa
                .dd1    $fe
s1tblNailCompare .dd1   $0b
                .dd1    $0b
                .dd1    $0b
                .dd1    $0c
tblS1NailY      .dd1    $23
                .dd1    $23
                .dd1    $23
                .dd1    $23
s1TblNailXCompare .dd1  $1e
                .dd1    $1e
St1NailCnt      .dd1    $00
NailWaitCnt2    .dd1    $02
L165e           .dd1    $50
                .dd1    $28

doNail          lda     St1NailCnt
                beq     s1DrawNailClock
                dec     St1NailCnt
                lda     #$14
                jsr     MON_WAIT
                rts

s1DrawNailClock dec     NailWaitCnt2
                beq     @_1
                rts

@_1             lda     #$01              ;cheat the delay of Nail
                sta     NailWaitCnt2
                lda     s1nailVarLfdc
                bne     @_2
                jsr     shiftBytes
                and     #$03
                tay
                sty     s1NailStepY
                lda     tblS1NailSub,y
                sta     NailSubtract
                lda     tblS1NailAdd,y
                sta     NailAddB
                sta     NailSavedAddB
                lda     #252
                sta     NailX
                sta     XLocDiv7
                lda     tblS1NailY,y
                sta     NailY
                sta     YLoc
                lda     #$01
                sta     s1nailVarLfdc
                lda     #$00
                sta     OrByte
                lda     #$15              ;9015 block of zero?
                sta     SrcP+1
                lda     #$90
                sta     SrcP
                jsr     drawNail
                lda     #$26
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$2a
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>S1clock2Sprite
                sta     SrcP+1
                lda     #<S1clock2Sprite
                sta     SrcP
                jsr     BitBlt1
@_2             sec
                lda     NailX
                sta     NailPosSav
                sbc     NailSubtract
                sta     NailX
                clc
                lda     NailY
                sta     NailPosSavB
                adc     NailAddB
                sta     NailY
                lda     NailPosSav
                sta     XLocDiv7
                lda     NailPosSavB
                sta     YLoc
                lda     #$00
                sta     OrByte
                lda     #$15
                sta     SrcP+1
                lda     #$90
                sta     SrcP
                jsr     drawNail
                lda     NailX
                sta     XLocDiv7
                lda     NailY
                sta     YLoc
                lda     #$00
                sta     OrByte
                lda     #$15
                sta     SrcP+1
                lda     #$90
                sta     SrcP
                jsr     drawNail
                inc     NailAddB
                lda     NailAddB
                ldy     s1NailStepY
                cmp     s1tblNailCompare,y
                bne     @_3
                ldy     #$1b
                ldx     #$3c
                jsr     SNDRoutine?
                ldy     NailSavedAddB
                sty     NailAddB
@_3             ldx     onLiftFlag
                lda     NailX
                cmp     s1TblNailXCompare,x
                bcc     @_5
                lda     NailY
                cmp     #190
                bcs     @_5               ;Nail Y over 190
                lda     NailX
                cmp     #133
                bcc     @_4               ;nail x < 133
                rts

@_4             lda     #$26
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$2a
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>S1clockSprite
                sta     SrcP+1
                lda     #<S1clockSprite
                sta     SrcP
                jsr     BitBlt1
                rts

@_5             lda     NailX
                sta     XLocDiv7
                lda     NailY
                sta     YLoc
                lda     #$00
                sta     OrByte
                lda     #$15
                sta     SrcP+1
                lda     #$90
                sta     SrcP
                jsr     drawNail
                lda     #$00
                sta     s1nailVarLfdc
                sta     NailX
                sta     NailY
                ldy     generalCounter
                lda     L165e,y
                sta     St1NailCnt
                rts

shiftBytes      sec
                lda     L17C8
                adc     L17CB
                adc     L17CC
                sta     L17C7
                ldx     #$04
L17BA           lda     L17C7,x
                sta     L17C8,x
                dex
                bpl     L17BA
                lda     L17C7
                rts

L17C7           .dd1    $00
L17C8           .dd1    $00
                .dd1    $00
                .dd1    $00
L17CB           .dd1    $00
L17CC           .dd1    $00
                .dd1    $00
                .dd1    $00
L17CF           .dd1    $54
                .dd1    $62
                .dd1    $70
                .dd1    $7e
                .dd1    $8c
                .dd1    $9a

via2s1_InitBlockHole ldy #$01
L17D7           jsr     shiftBytes
                and     #$05
                tax
                lda     L17CF,x
                sta     S1FloorsX,y
                iny
                cpy     #$05
                bne     L17D7
                rts

xArry           .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tbl1_s1_InitBlockHole .dd1 42
                .dd1    70
                .dd1    168
                .dd1    196
tbl2s1_InitBlockHole .dd1 0
                .dd1    32
                .dd1    0
                .dd1    32
tblS1Block      .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

vias1_InitBlockHole ldy #$01
@loop           jsr     shiftBytes
                and     #$03
                tax
                lda     tbl1_s1_InitBlockHole,x
                sta     xArry,y
                lda     tbl2s1_InitBlockHole,x
                sta     tblS1Block,y
                iny
                cpy     #$05
                bne     @loop
                rts

PrintNumChar    sta     v29
                stx     v28
PrintChar2      ldy     #$00
                lda     (v28),y
                sta     XLocDiv7
                iny
                lda     (v28),y
                sta     YLoc
                lda     #$02              ;Advance ptr by 2
                clc
                adc     v28
                sta     v28
                bcc     PrintChar3        ;Not cross Boundary
                inc     v29               ;in Ptr High byte
PrintChar3      ldy     #$00
                lda     (v28),y
                cmp     #$00
                beq     PrintChar5
                cmp     #$01
                bne     PrintChar6
                inc     v28
                bne     PrintChar4
                inc     v29
PrintChar4      jmp     PrintChar2

PrintChar5      rts

PrintChar6      and     #$7f
                sec
                sbc     #$20
                ldy     #$00
                sty     DstHGR+1
                asl     A
                asl     A
                asl     A
                sta     DstHGR
                rol     DstHGR+1
                lda     #$8d
                clc
                adc     DstHGR+1
                sta     DstHGR+1
                ldx     #$08
PrintChar7      ldy     YLoc
                lda     YTableL,y
                sta     SrcP
                lda     YTableH,y
                ora     PageNum
                sta     SrcP+1
                ldy     #$00
                lda     (DstHGR),y
                ldy     XLocDiv7
                sta     (SrcP),y
                inc     YLoc
                inc     DstHGR
                dex
                bne     PrintChar7
                inc     XLocDiv7
                lda     YLoc
                sec
                sbc     #$08
                sta     YLoc
                inc     v28
                bne     PrintChar3
                inc     v29
                jmp     PrintChar3

                .dd1    $00
                .dd1    $00
                .zstr   ↑“BONUS:00000  SCORE:00000  HI-SCORE:00000”
                .dd1    $27
                .dd1    $40
                .dd1    $cc
                .dd1    $01
                .dd1    $27
                .dd1    $48
                .dd1    $c5
                .dd1    $01
                .dd1    $27
                .dd1    $50
                .dd1    $d6
                .dd1    $01
                .dd1    $27
                .dd1    $58
                .dd1    $c5
                .dd1    $01
                .dd1    $27
                .dd1    $60
                .dd1    $cc
                .dd1    $01
                .dd1    $27
                .dd1    $68
                .dd1    $a0
                .dd1    $01
                .dd1    $27
                .dd1    $70
                .dd1    $b0
                .dd1    $00
                .dd1    $27
                .dd1    $90
                .dd1    $cd
                .dd1    $01
                .dd1    $27
                .dd1    $98
                .dd1    $c1
                .dd1    $01
                .dd1    $27
                .dd1    $a0
                .dd1    $c3
                .dd1    $01
                .dd1    $27
                .dd1    $a8
                .dd1    $cb
                .dd1    $01
                .dd1    $27
                .dd1    $b0
                .dd1    $a0
                .dd1    $01
                .dd1    $27
                .dd1    $b8
                .dd1    $b2
                .dd1    $00
                .dd1    $0d
                .dd1    $50
                .str    ↑“           ”
                .dd1    $01
                .dd1    $0d
                .dd1    $58
                .str    ↑“ GAME OVER ”
                .dd1    $01
                .dd1    $0d
                .dd1    $60
                .str    ↑“           ”
                .dd1    $00
                .dd1    $13
                .dd1    $30
                .dd1    $c2
                .dd1    $d9
                .dd1    $01
                .dd1    $02
                .dd1    $40
                .str    ↑“MICHAEL ABBOT AND MATTHEW ALEXANDER”
                .dd1    $01
                .dd1    $00
                .dd1    $68
                .str    ↑“    VANDAL         MACK         OSHA”
                .dd1    $01
                .dd1    $12
                .str    ↑“9(C) 1983 MICHAEL ABBOT”
                .dd1    $00
                .dd1    $0a
                .dd1    $00
                .str    ↑“MICHAEL'S DEDICATION”
                .dd1    $01
                .dd1    $0e
                .dd1    ‘ ’
                .str    ↑“HARD HAT MACK”
                .dd1    $01
                .dd1    $13
                .dd1    ‘(’
                .str    ↑“IS”
                .dd1    $01
                .dd1    $06
                .dd1    ‘0’
                .str    ↑“DEDICATED TO MY GRANDPARENTS”
                .dd1    $01
                .dd1    $0d
                .dd1    ‘@’
                .str    ↑“MYMY AND JIMDAD”
                .dd1    $00
                .dd1    $0b
                .dd1    $00
                .str    ↑“MATTHEW'S DEDICATION”
                .dd1    $01
                .dd1    $00
                .dd1    ‘@’
                .str    ↑“TO BIG AL:”
                .dd1    $01
                .dd1    $00
                .dd1    ‘P’
                .str    ↑“MAY THE OSHA NEVER DARKEN YOUR DOORWAY”
                .dd1    $00

PrtLIFE         lda     LIFE
                ora     #$30
                sta     L1A3D
                lda     #$1a
                ldx     #$3b
                jsr     PrintNumChar
                rts

                .dd1    $27
                .dd1    $b8
L1A3D           .dd1    $b0
                .dd1    $00

L1A3F           sta     SrcP+1
                stx     XLocDiv7
                stx     XLocation
                sty     YLoc
                sty     YLocation
                lda     #$8b
                sta     Src_2+1
                jsr     XorPreshiftShape
                rts

s3spikeShapeTbl .dd1    $00
                .dd1    $20
                .dd1    $40
                .dd1    $20
saveShapeAdr3   .dd1    $00
                .dd1    $00
saveShapeAdr3B  .dd1    $00
                .dd1    $00
isS3SpikeInit   .dd1    $00
S3spikeSkipCount .dd1   $01
s3spikesShapeNum .dd1   $00

s3drawSpike     dec     S3spikeSkipCount  ;no need to draw new spike everytime
                beq     s3drawSpike1
                rts

s3drawSpike1    lda     #$02
                sta     S3spikeSkipCount
                lda     isS3SpikeInit
                bne     s3drawSpike2
                lda     #>S3spike1        ;Init the pointer to bitmap
                sta     saveShapeAdr3+1
                lda     #<S3spike1        ;first shape to draw
                sta     saveShapeAdr3
                lda     #>s3spikeBlank
                sta     saveShapeAdr3B+1
                lda     #<s3spikeBlank    ;first shape to erase via XOR is blank
                sta     saveShapeAdr3B
                lda     #$01
                sta     isS3SpikeInit
                lda     #$00
                sta     s3spikesShapeNum
s3drawSpike2    lda     #$00
                sta     XLocDiv7
                sta     XLocation
                lda     #$47
                sta     YLoc
                sta     YLocation
                lda     saveShapeAdr3B+1  ;get bitmap to erase
                sta     Src_2+1
                lda     saveShapeAdr3B
                sta     Src_2
                lda     saveShapeAdr3+1   ;get bitmap to draw
                sta     SrcP+1
                lda     saveShapeAdr3
                sta     SrcP
                jsr     BltBytes
                lda     saveShapeAdr3+1   ;rememeber bitmap that just drawn
                sta     saveShapeAdr3B+1
                lda     saveShapeAdr3
                sta     saveShapeAdr3B
                inc     s3spikesShapeNum  ;next shape num counter
                ldy     s3spikesShapeNum
                cpy     #$04              ;if 4 then reset to 0
                bne     s3drawSpike3
                ldy     #$00
                sty     s3spikesShapeNum
s3drawSpike3    clc
                lda     #<S3spike1        ;calc next shape address
                adc     s3spikeShapeTbl,y ;get actual offset from look up
                sta     saveShapeAdr3
                lda     #>S3spike1
                adc     #$00
                sta     saveShapeAdr3+1
                rts

setMackMusic    lda     ZeroIfStandStill
                bne     @_1               ;Mack Moved, so go down
                lda     #$5e
                sta     SNDstrangeA1
                lda     #$df
                sta     SNDstrangeA0
                rts

@_1             lda     #$1a
                sta     SNDstrangeA1
                lda     #$f4
                sta     SNDstrangeA0
                rts

                .dd1    $08
v1af5           .dd1    $02
                .dd1    $ff
                .dd1    $01
                .dd1    $08
v1af9           .dd1    $02
                .dd1    $ff
                .dd1    $02
                .dd1    $01
L1AFD           .dd1    $03
                .dd1    $ff
L1AFF           .dd1    $02
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $06
                .dd1    $02
                .dd1    $08
L1B0B           .dd1    $02
                .dd1    $08
                .dd1    $02
                .dd1    $06
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $01
                .dd1    $02
                .dd1    $04
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $05
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $06
                .dd1    $02
                .dd1    $24
                .dd1    $02
                .dd1    $00
                .dd1    $00
                .dd1    $24
                .dd1    $02
                .dd1    $06
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $05
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $04
                .dd1    $02
                .dd1    $01
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $00
                .dd1    $02
                .dd1    $00
                .dd1    $00
                .dd1    $fd
                .dd1    $01
                .dd1    $08
                .dd1    $01
                .dd1    $fe
                .dd1    $01
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $04
                .dd1    $03
                .dd1    $03
                .dd1    $02
                .dd1    $02
                .dd1    $01
                .dd1    $00
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $04
                .dd1    $03
                .dd1    $03
                .dd1    $02
                .dd1    $02
                .dd1    $01
                .dd1    $00
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $04
                .dd1    $03
                .dd1    $03
                .dd1    $02
                .dd1    $02
                .dd1    $01
                .dd1    $00
                .dd1    $00
                .dd1    $08
                .dd1    $01
                .dd1    $07
                .dd1    $01
                .dd1    $06
                .dd1    $01
                .dd1    $06
                .dd1    $01
                .dd1    $07
                .dd1    $01
                .dd1    $08
                .dd1    $01
                .dd1    $00
                .dd1    $00
liftY?          .dd1    $00
liftPoleVar     .dd1    $00
onLF0           .dd1    $00
onLiftFlag      .dd1    $00
mackInLiftFlag  .dd1    $00

KeyThing        lda     isInGameLoop
                beq     @_1
                rts

@_1             lda     isPlayerOver219+1
                beq     @_2
                rts

@_2             lda     KBD
                cmp     #$80
                bcs     @_3
                rts

@_3             cmp     #$92
                bne     @_4
                jmp     L1BE4

@_4             cmp     #$9b
                bne     @_5
                jmp     L1BD1

@_5             cmp     #$93
                bne     @_6
                jmp     L1BC2

@_6             cmp     #$83
                bne     @_7
                jmp     configKeyobard

@_7             cmp     #$9d
                bne     @_8
                jmp     L1C11

@_8             cmp     #$9e
                bne     L1BB5
                jmp     L1BF9

L1BB5           cmp     #$8d              ;return to drop EHam
                bne     L1BBC
                jmp     Eham

L1BBC           rts

L1BBD           cmp     #$93
                beq     L1BC2
                rts

L1BC2           sta     KBDSTRB           ;Toggle Wait Var
                lda     isNoSound2
                eor     #$01
                sta     isNoSound2
                sta     isNoSound1
                rts

L1BD1           sta     KBDSTRB
L1BD4           lda     KBD
                bpl     L1BD4
                cmp     #$9b              ;Press ESC to pause
                beq     L1BE0
                jmp     L1BD1

L1BE0           sta     KBDSTRB
                rts

L1BE4           sta     KBDSTRB
                jmp     L082D

                .dd1    $60

L1BEB           lda     onLiftFlag
                eor     #$01
                sta     onLiftFlag
                lda     #$00
                sta     mackInLiftFlag
                rts

L1BF9           sta     KBDSTRB
                jsr     HGRdo
                lda     #$19
                ldx     #$81
                jsr     PrintNumChar
L1C06           lda     KBD
                bpl     L1C06
                sta     KBDSTRB
                jmp     L082D

L1C11           sta     KBDSTRB
                jsr     HGRdo
                lda     #$19
                ldx     #$de
                jsr     PrintNumChar
L1C1E           lda     KBD
                bpl     L1C1E
                sta     KBDSTRB
                jmp     L082D

                .dd1    $00
tblLIFTsprite   .dd1    $00               ;liftSprite  or MackInLift sprite
                .dd1    $c4

s1_TestLift     lda     onLiftFlag
                bne     @_1
                rts

@_1             lda     liftPoleVar
                beq     @_2
                jmp     @_6

@_2             lda     liftY?
                sec
                sbc     #$08
                cmp     #$54
                bcs     @_3
                lda     #$00
                sta     onLiftFlag
                lda     #$01
                sta     liftPoleVar
                sta     YregSave
                lda     #$54
@_3             sta     liftY?
                sta     YLoc
                sec
                sbc     #$31
                sta     Ycount
                lda     #$00
                sta     XLocDiv7
                clc
                adc     #$03
                sta     WidthDiv7
                clc
                ldy     mackInLiftFlag
                lda     #$88              ;liftSprite  or MackInLift sprite
                adc     tblLIFTsprite,y
                sta     SrcP
                lda     #$84
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                lda     onLF0
                sec
                sbc     #$08
                cmp     #$5c
                bcs     @_4
                lda     #$5c
@_4             sta     YLoc
                sta     onLF0
                sec
                sbc     #$10
                sta     Ycount
                lda     #$01
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$7e
                sta     SrcP+1
                lda     #$60
                sta     SrcP
                jsr     BitBlt1
                lda     liftPoleVar
                beq     @_5
                lda     #$01
                sta     YregSave
                lda     mackInLiftFlag
                beq     @_5
                lda     #$47
                sta     ypoint
                lda     #$06
                sta     xpoint7
                lda     #$01
                sta     L6378
@_5             rts

@_6             lda     liftY?
                clc
                adc     #$08
                cmp     #$b4
                bcc     @_7
                lda     #$00
                sta     liftPoleVar
                lda     #$00
                sta     onLiftFlag
                lda     #$04
                sta     YregSave
                lda     #$b4
@_7             sta     liftY?
                sta     YLoc
                sec
                sbc     #$31
                sta     Ycount
                lda     #$00
                sta     XLocDiv7
                clc
                adc     #$03
                sta     WidthDiv7
                clc
                ldy     mackInLiftFlag
                lda     #$88
                adc     tblLIFTsprite,y
                sta     SrcP
                lda     #$84
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                clc
                lda     onLF0
                clc
                adc     #$08
                cmp     #$bc
                bcc     @_8
                lda     #$bc
@_8             sta     YLoc
                sta     onLF0
                sec
                sbc     #$10
                sta     Ycount
                lda     #$01
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #>LiftPoleSprite  ;LiftPoleSprite
                sta     SrcP+1
                lda     #<LiftPoleSprite
                sta     SrcP
                jsr     BitBlt1
                lda     liftPoleVar
                bne     @_5
                lda     #$04
                sta     YregSave
                lda     mackInLiftFlag
                bne     @_9
                jmp     @_5

@_9             lda     #$a7
                sta     ypoint
                lda     #$06
                sta     xpoint7
                lda     #$01
                sta     L6378
                rts

PointsToAdd     .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
PointsToAdd4    .dd1    $00
                .dd1    $00
Score           .dd1    $00               ;5 digit score
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
scorePosition   .dd1    $17               ;the x div 7 position of the score digt
                .dd1    $16
                .dd1    $15
                .dd1    $14
                .dd1    $13
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
HiScore         .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
HiScorePos      .dd1    $27
                .dd1    $26
                .dd1    $25
                .dd1    $24
                .dd1    $23
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

UpdScore        ldx     #$00
                clc
@_1             lda     Score,x
                adc     PointsToAdd,x
                cmp     #$0a
                bcc     @_2
                lda     #$00
                sec
@_2             sta     Score,x
                php
                inx
                cpx     #$05
                beq     @_3
                plp
                jmp     @_1

@_3             plp
                lda     #$00
                sta     PointsToAdd
                sta     PointsToAdd+1
                sta     PointsToAdd+2
                sta     PointsToAdd+3
                sta     PointsToAdd4+1
                sta     PointsToAdd4
                jsr     PrtScore
                rts

PrtScore        ldx     #$00
                stx     Count38
@_1             lda     scorePosition,x   ;score Byte Position
                sta     toDrawXbytePos
                lda     Score,x
                ora     #$30
                sta     toDrawDigit
                lda     #$1d
                ldx     #$da
                jsr     PrintNumChar
                inc     Count38
                ldx     Count38
                cpx     #$05
                bne     @_1
                rts

toDrawXbytePos  .dd1    $00
                .dd1    $00
toDrawDigit     .dd1    $30
                .dd1    $00

testHiScore     ldx     #$04
@_1             lda     Score,x
                cmp     HiScore,x
                bcc     notHiScore
                bne     setNewHiScore
                dex
                bpl     @_1
notHiScore      rts

setNewHiScore   ldx     #$04
@_1             lda     Score,x
                sta     HiScore,x
                dex
                bpl     @_1
PrtHisScore     ldx     #$04
                stx     Count38
@Loop           lda     HiScorePos,x      ;Byte level instead of X, in reverse
                sta     toDrawXbytePos
                lda     HiScore,x
                ora     #$30
                sta     toDrawDigit
                lda     #$1d
                ldx     #$da
                jsr     PrintNumChar
                dec     Count38
                ldx     Count38
                bpl     @Loop
                rts

L1E19           .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $54
                .dd1    $58
                .dd1    $5c
                .dd1    $60
                .dd1    $64
                .dd1    $68
                .dd1    $6c
                .dd1    $70
                .dd1    $74
                .dd1    $78
                .dd1    $7c
                .dd1    $80
                .dd1    $84
                .dd1    $88
                .dd1    $8c
                .dd1    $90
                .dd1    $94
                .dd1    $96
                .dd1    $98
                .dd1    $9a
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
                .dd1    $9c
L1E6A           .dd1    $47
                .dd1    $4b
                .dd1    $4f
                .dd1    $53
                .dd1    $57
                .dd1    $5b
                .dd1    $5f
                .dd1    $63
                .dd1    $67
                .dd1    $6b
                .dd1    $6f
                .dd1    $73
                .dd1    $77
                .dd1    $7b
                .dd1    $7f
                .dd1    $83
                .dd1    $87
                .dd1    $8b
                .dd1    $8f
                .dd1    $93
                .dd1    $97
                .dd1    $9b
                .dd1    $9f
                .dd1    $a3
                .dd1    $a7
                .dd1    $ab
                .dd1    $af
                .dd1    $b3
                .dd1    $b7
                .dd1    $b3
                .dd1    $af
                .dd1    $ab
                .dd1    $a7
                .dd1    $a3
                .dd1    $a0
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $9f
                .dd1    $a1
                .dd1    $a5
                .dd1    $a9
                .dd1    $ad
                .dd1    $af
                .dd1    $b3
                .dd1    $b7
                .dd1    $b3
                .dd1    $af
                .dd1    $ab
                .dd1    $a7
                .dd1    $a3
                .dd1    $9f
                .dd1    $9b
                .dd1    $97
                .dd1    $93
                .dd1    $8f
                .dd1    $8b
                .dd1    $87
                .dd1    $83
                .dd1    $7f
                .dd1    $7b
                .dd1    $77
                .dd1    $73
                .dd1    $6f
                .dd1    $6b
                .dd1    $67
                .dd1    $63
                .dd1    $5f
                .dd1    $5b
                .dd1    $57
                .dd1    $53
                .dd1    $4f
                .dd1    $4b
                .dd1    $47
tblS3NaiLXloc   .dd1    $44
                .dd1    $42
                .dd1    $3e
                .dd1    $3a
                .dd1    $36
                .dd1    $34
tblS3NaiLYloc   .dd1    $b5
                .dd1    $b1
                .dd1    $ae
                .dd1    $ae
                .dd1    $b0
                .dd1    $b3
tblS3NaiLXloc2  .dd1    $b4
                .dd1    $b4
                .dd1    $b8
                .dd1    $bc
                .dd1    $c0
                .dd1    $c2
tblS3NaiLYloc2  .dd1    $b5
                .dd1    $b1
                .dd1    $ae
                .dd1    $ae
                .dd1    $b0
                .dd1    $b3

XorPreshiftShape lda    #$00              ;do Draw and erase by XOR
                sta     SrcP
                sta     Src_2
                lda     XLocDiv7
                and     #$fe
                tax
                lda     PreShiftBitmapTblLow,x
                clc
                adc     SrcP
                sta     SrcP
                lda     PreShiftBitmapTblHi,x
                adc     SrcP+1
                sta     SrcP+1
                lda     TBL_div7,x
                sta     div7_1
                lda     XLocation
                and     #$fe
                tax
                lda     PreShiftBitmapTblLow,x
                clc
                adc     Src_2
                sta     Src_2
                lda     PreShiftBitmapTblHi,x
                adc     Src_2+1
                sta     Src_2+1
                lda     TBL_div7,x
                sta     div7_2
                lda     #16
                sta     bltHeight
@Loop           ldx     YLocation
                lda     YTableL,x
                sta     DstHGR
                lda     YTableH,x
                ora     PageNum
                sta     DstHGR+1
                ldx     #$00
                lda     div7_2
                clc
                adc     #$03
                tay
                inc     Src_2
                dey
                lda     (Src_2,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                inc     Src_2
                dey
                lda     (Src_2,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                inc     Src_2
                dey
                lda     (Src_2,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                inc     Src_2
                dec     YLocation
                bne     @_2
                inc     YLocation
@_2             ldx     YLoc
                lda     YTableL,x
                sta     DstHGR
                lda     YTableH,x
                ora     PageNum
                sta     DstHGR+1
                ldx     #$00
                lda     div7_1
                clc
                adc     #$03
                tay
                inc     SrcP
                dey
                lda     (SrcP,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                inc     SrcP
                dey
                lda     (SrcP,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                inc     SrcP
                dey
                lda     (SrcP,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                inc     SrcP
                dec     YLoc
                bne     @NextLine
                inc     YLoc
@NextLine       dec     bltHeight
                beq     @Done
                jmp     @Loop

@Done           rts

                .dd1    $11
                .dd1    $a0
                .dd1    $05
                .dd1    $d0
                .dd1    $0c
                .dd1    $a9
                .dd1    $1c
                .dd1    $a0
                .dd1    $01
                .dd1    $d0
                .dd1    $6a
                .dd1    $a9
                .dd1    $25
                .dd1    $a0
                .dd1    $02
                .dd1    $d0
                .dd1    $64
                .dd1    $85
                .dd1    $24
                .dd1    $a9
                .dd1    $01
                .dd1    $20
                .dd1    $5b
                .dd1    $fb
                .dd1    $a9
                .dd1    $a0
                .dd1    $20
                .dd1    $ed
                .dd1    $fd
                .dd1    $20
                .dd1    $ed
                .dd1    $fd
                .dd1    $c6
                .dd1    $24
                .dd1    $c6
                .dd1    $24
                .dd1    $20
                .dd1    $b0
                .dd1    $09
                .dd1    $e0
                .dd1    $02
                .dd1    $f0
                .dd1    $47
                .dd1    $c0
                .dd1    $04
                .dd1    $d0
                .dd1    $09
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $35
                .dd1    $c9
                .dd1    $23
                .dd1    $b0
                .dd1    $31
                .dd1    $c0
                .dd1    $05
                .dd1    $d0
                .dd1    $09
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $28
                .dd1    $c9
                .dd1    $10
                .dd1    $b0
                .dd1    $24
                .dd1    $c0
                .dd1    $01
                .dd1    $d0
                .dd1    $0d
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $1b
                .dd1    $c9
                .dd1    $08
                .dd1    $b0
                .dd1    $17
                .dd1    $0a
                .dd1    $0a
                .dd1    $0a
                .dd1    $0a
                .dd1    $c0
                .dd1    $02
                .dd1    $d0
                .dd1    $0b
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $c9
                .dd1    $01
                .dd1    $f0
                .dd1    $04
                .dd1    $c9
                .dd1    $02
                .dd1    $d0
                .dd1    $04
                .dd1    $99
                .dd1    $14
                .dd1    $0c
                .dd1    $60
                .dd1    $20
                .dd1    $3a
                .dd1    $ff
                .dd1    $4c
                .dd1    $4f
                .dd1    $0b
                .dd1    $4c
                .dd1    $a3
                .dd1    $0a
                .dd1    $0a
                .dd1    $87
                .dd1    $01
                .dd1    $42
                .dd1    $41
L2000           .junk   8192
YTableL         .bulk   0000000000000000808080808080808000000000000000008080808080808080
                 +      0000000000000000808080808080808000000000000000008080808080808080
                 +      2828282828282828a8a8a8a8a8a8a8a82828282828282828a8a8a8a8a8a8a8a8
                 +      2828282828282828a8a8a8a8a8a8a8a82828282828282828a8a8a8a8a8a8a8a8
                 +      5050505050505050d0d0d0d0d0d0d0d05050505050505050d0d0d0d0d0d0d0d0
                 +      5050505050505050d0d0d0d0d0d0d0d05050505050505050d0d0d0d0d0d0d0d0
YTableH         .bulk   0004080c1014181c0004080c1014181c0105090d1115191d0105090d1115191d
                 +      02060a0e12161a1e02060a0e12161a1e03070b0f13171b1f03070b0f13171b1f
                 +      0004080c1014181c0004080c1014181c0105090d1115191d0105090d1115191d
                 +      02060a0e12161a1e02060a0e12161a1e03070b0f13171b1f03070b0f13171b1f
                 +      0004080c1014181c0004080c1014181c0105090d1115191d0105090d1115191d
                 +      02060a0e12161a1e02060a0e12161a1e03070b0f13171b1f03070b0f13171b1f
                .bulk   0004080c1014181c
                .bulk   0004080c1014181c
                .bulk   0105090d1115191d
                .bulk   0105090d1115191d
                .bulk   02060a0e12161a1e
                .bulk   02060a0e12161a1e
                .bulk   03070b0f13171b1f
                .bulk   03070b0f13171b1f
TBL_div7        .bulk   00000000000000
                .bulk   01010101010101
                .bulk   02020202020202
                .bulk   03030303030303
                .bulk   04040404040404
                .bulk   05050505050505
                .bulk   06060606060606
                .bulk   07070707070707
                .bulk   08080808080808
                .bulk   09090909090909
                .bulk   0a0a0a0a0a0a0a
                .bulk   0b0b0b0b0b0b0b
                .bulk   0c0c0c0c0c0c0c
                .bulk   0d0d0d0d0d0d0d
                .bulk   0e0e0e0e0e0e0e
                .bulk   0f0f0f0f0f0f0f
                .bulk   10101010101010
                .bulk   11111111111111
                .bulk   12121212121212
                .bulk   13131313131313
                .bulk   14141414141414
                .bulk   15151515151515
                .bulk   16161616161616
                .bulk   17171717171717
                .bulk   18181818181818
                .bulk   19191919191919
                .bulk   1a1a1a1a1a1a1a
                .bulk   1b1b1b1b1b1b1b
                .bulk   1c1c1c1c1c1c1c
                .bulk   1d1d1d1d1d1d1d
                .bulk   1e1e1e1e1e1e1e
                .bulk   1f1f1f1f1f1f1f
                .bulk   20202020202020
                .bulk   21212121212121
                .bulk   22222222222222
                .bulk   23232323232323
                .bulk   24242424
tbl_0_1_2_4_8   .bulk   0102040810204001
                .bulk   0204081020400102
                .bulk   0408102040010204
                .bulk   0810204001020408
                .bulk   1020400102040810
                .bulk   2040010204081020
                .bulk   4001020408102040
                .bulk   0102040810204001
                .bulk   0204081020400102
                .bulk   0408102040010204
                .bulk   0810204001020408
                .bulk   1020400102040810
                .bulk   2040010204081020
                .bulk   4001020408102040
                .bulk   0102040810204001
                .bulk   0204081020400102
                .bulk   0408102040010204
                .bulk   0810204001020408
                .bulk   1020400102040810
                .bulk   2040010204081020
                .bulk   4001020408102040
                .bulk   0102040810204001
                .bulk   0204081020400102
                .bulk   0408102040010204
                .bulk   0810204001020408
                .bulk   1020400102040810
                .bulk   2040010204081020
                .bulk   4001020408102040
                .bulk   0102040810204001
                .bulk   0204081020400102
                .bulk   0408102040010204
                .bulk   08102040010204
                .dd1    $08
PreShiftBitmapTblHi .bulk 00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
                .bulk   00000000010101
PreShiftBitmapTblLow .bulk 004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
                .bulk   004080c0004080
L45D4           .bulk   00020406080a0c0e
                .bulk   10121416181a1c1e
                .bulk   20222426282a2c2e
L45EC           .bulk   2000202000202000
                .bulk   2020002020002020
                .bulk   002020
L45FF           .dd1    $00
L4600           .dd1    $00
                .dd1    $60

s3_DrawPlatform lda     #$8f              ;bottom Line from 0x8f
                sta     YLoc
                lda     #$00              ;left most point div 7 (byte boundary)
                sta     XLocDiv7
                jsr     drawLeftPlatform
                lda     #$6f
                sta     YLoc
                lda     #$00
                sta     XLocDiv7
                jsr     drawLeftPlatform
                lda     #$8f
                sta     YLoc
                lda     #$18
                sta     XLocDiv7
                jsr     drawRightPlatform
                lda     #$6f
                sta     YLoc
                lda     #$18
                sta     XLocDiv7
                jsr     drawRightPlatform
                lda     #$4f
                sta     YLoc
                lda     #$18
                sta     XLocDiv7
                jsr     drawRightPlatform
                rts

drawLeftPlatform lda    YLoc              ;get bottom
                sec
                sbc     #$08
                sta     Ycount            ;draw up to 8 lines
                lda     XLocDiv7
                clc
                adc     #$0b
                sta     WidthDiv7
                ldy     L45FF
                clc
                lda     #$f0
                adc     L4600,y
                sta     SrcP
                lda     #$81
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                rts

drawRightPlatform lda   YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     XLocDiv7
                clc
                adc     #$0b
                sta     WidthDiv7
                ldy     L45FF
                clc
                lda     #$b0
                adc     L4600,y
                sta     SrcP
                lda     #$82
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                rts

s3TopPlatform   ldy     #$11
                sty     Count38
L4688           lda     #$2f
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     L45D4,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$87
                sta     SrcP+1
                lda     #$80
                clc
                adc     L45EC,y
                sta     SrcP
                lda     SrcP+1
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                dec     Count38
                ldy     Count38
                bpl     L4688
                rts

s3NailCollectPot sta    XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$bc
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>S3nailPotSprite
                sta     SrcP+1
                lda     #<S3nailPotSprite
                sta     SrcP
                jsr     BitBlt1
                rts

L46D7           lda     #$00
                sta     XLocDiv7
                clc
                adc     #$0d
                sta     WidthDiv7
                lda     #$bf
                sta     YLoc
                sec
                sbc     #$21
                sta     Ycount
                lda     #$8f
                sta     SrcP+1
                lda     #$00
                sta     SrcP
                jsr     BitBlt1
                rts

S1InitStuff     lda     #$02
                sta     v1af5
                sta     v1af9
                sta     v1af9+2
                sta     L1B0B
                sta     L1AFF
                lda     #$03
                sta     L1AFD
                rts

s3SetVar        lda     #$01
                sta     v1af5
                sta     v1af9
                sta     v1af9+2
                sta     L1B0B
                sta     L1AFF
                lda     #$02
                sta     L1AFD
                rts

TBLChainXdiv7   .dd1    $1c
                .dd1    $22
                .dd1    $08
                .dd1    $02
                .dd1    $ff
TBLChainY       .dd1    $3f
                .dd1    $7f
                .dd1    $7f
                .dd1    $3f
tblS1ChainXdiv7 .dd1    $04
                .dd1    $1e
                .dd1    $04
                .dd1    $16
                .dd1    $ff
tblS1ChainY     .dd1    $9f
                .dd1    $7f
                .dd1    $5f
                .dd1    $3f
tblS2ChainXdiv7 .dd1    $22
                .dd1    $22
                .dd1    $ff
tblS2ChainY     .dd1    $9f
                .dd1    $af

PutClimbingChains ldy   #$00
                sty     Count38
@_1             ldy     Count38
                lda     (XLocDiv7Ptr),y   ;get from 4725
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     (YLocPtr),y
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>Chain
                sta     SrcP+1
                lda     #<Chain
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                inc     Count38
                ldy     Count38
                lda     (XLocDiv7Ptr),y
                cmp     #$ff
                bne     @_1
                rts

L4771           .dd1    $02
                .dd1    $1c
L4773           .dd1    $04
                .dd1    $1e

s3drawRightside ldy     #$01
                sty     Count38
L4779           lda     #$bc
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     L4771,y
                sta     XLocDiv7
                clc
                adc     #$05
                sta     WidthDiv7
                lda     #>InBurner
                sta     SrcP+1
                lda     #<InBurner
                sta     SrcP
                jsr     BitBlt1
                lda     #$8f
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                ldy     Count38
                lda     L4773,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$01
                sta     bltStore
                jsr     BitBlt1
                dec     Count38
                ldy     Count38
                bpl     L4779
                rts

s1DrawBell1     lda     #$08
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$12
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>S1BellSprite
                sta     SrcP+1
                lda     #<S1BellSprite
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                rts

s3DrawJumpad    lda     #$0c
                sta     XLocDiv7
                jsr     @_1
                lda     #$16
                sta     XLocDiv7
@_1             clc
                adc     #$01
                sta     WidthDiv7
                lda     #$bc
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #>jumpPadSprite
                sta     SrcP+1
                lda     #<jumpPadSprite
                sta     SrcP
                jsr     BitBlt1
                rts

s2DrawMidLeftBlocker lda #$06
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$67
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$7c
                sta     SrcP+1
                lda     #$80
                sta     SrcP
                jsr     BitBlt1
                rts

                .dd1    $00

BltBytes        lda     BltBytes-1        ;Blt Bitmap that doesn't pre-shift
                bne     @_1
                lda     #$10
                sta     bltHeight
                jmp     @_2

@_1             lda     #$08
                sta     bltHeight
@_2             ldx     YLocation
                lda     YTableL,x
                sta     DstHGR
                lda     YTableH,x
                ora     PageNum
                sta     DstHGR+1
                ldx     #$00
                lda     XLocation
                clc
                adc     #$01
                tay
                lda     (Src_2,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                clc
                inc     Src_2
                bne     @_3
                inc     Src_2+1
@_3             dey
                lda     (Src_2,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                clc
                inc     Src_2
                bne     @_4
                inc     Src_2+1
@_4             dec     YLocation
                ldx     YLoc
                lda     YTableL,x
                sta     DstHGR
                lda     YTableH,x
                ora     PageNum
                sta     DstHGR+1
                ldx     #$00
                lda     XLocDiv7
                clc
                adc     #$01
                tay
                lda     (SrcP,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                clc
                inc     SrcP
                bne     @_5
                inc     SrcP+1
@_5             dey
                lda     (SrcP,x)
                eor     (DstHGR),y
                sta     (DstHGR),y
                clc
                inc     SrcP
                bne     @_6
                inc     SrcP+1
@_6             dec     YLoc
                dec     bltHeight
                beq     @_7
                jmp     @_2

@_7             lda     #$00
                sta     BltBytes-1
                rts

s3DrawStorage   lda     #$bc
                sta     YLoc
                sec
                sbc     #$1e
                sta     Ycount
                lda     #$10
                sta     XLocDiv7
                clc
                adc     #$03
                sta     WidthDiv7
                lda     #$84
                sta     SrcP+1
                lda     #$14
                sta     SrcP
                jsr     BitBlt1
                rts

s3TblLowRollerSrc .dd1  $00
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $00
s3TblRollerSrcB .dd1    $4c
                .dd1    $56
                .dd1    $66
                .dd1    $76
                .dd1    $86
                .dd1    $96

s3DrawLowRoller ldy     #$05
                sty     Count38
@_1             clc
                lda     #$70
                adc     s3TblLowRollerSrc,y
                sta     SrcP
                lda     #$83
                adc     #$00
                sta     SrcP+1
                lda     #$11
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     s3TblRollerSrcB,y
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                dec     Count38
                ldy     Count38
                bpl     @_1
                lda     #$83
                sta     L7653
                sta     L7651
                lda     #$70
                sta     L7652
                sta     L7650
                lda     #$00
                sta     L7654
                rts

s3LeftBelt      lda     #$4f
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$00
                sta     XLocDiv7
                clc
                adc     #$0b
                sta     WidthDiv7
                lda     #$81
                sta     SrcP+1
                lda     #$90
                sta     SrcP
                jsr     BitBlt1
                rts

L4946           .dd1    $00
                .dd1    $00
                .dd1    $20

s2DrawDumpDropper ldy   #$02              ;the lower left dropper
                sty     Count38
@_1             ldy     Count38
                lda     L45D4,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$a1
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$7c              ;s1_stand_sprite
                sta     SrcP+1
                lda     #$20
                clc
                adc     L4946,y           ;or 7c20/7c40  block??
                sta     SrcP
                jsr     BitBlt1
                dec     Count38
                bpl     @_1
                rts

s2drawUpperRail? lda    #$04
                sta     XLocDiv7
                lda     #$bc
                sta     YLoc
                jsr     S2drawSlantBelt
                lda     #$1c
                sta     XLocDiv7
                lda     #$47
                sta     YLoc
                jsr     S2drawSlantBelt
                lda     #$89
                sta     L6C9C
                sta     L6C9A
                lda     #$a0
                sta     L6C9B
                sta     L6C99
                lda     #$89
                sta     L6CA0
                sta     L6C9E
                lda     #$e0
                sta     L6C9F
                sta     L6C9D
                rts

S2drawSlantBelt lda     XLocDiv7
                clc
                adc     #$07
                sta     WidthDiv7
                lda     YLoc
                sec
                sbc     #$16
                sta     Ycount
                lda     #>slantBelt
                sta     SrcP+1
                lda     #<slantBelt
                sta     SrcP
                jsr     BitBlt1
                rts

s2drawDumpPot   lda     #$0c
                sta     XLocDiv7
                clc
                adc     #$03
                sta     WidthDiv7
                lda     #$bc
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$80
                sta     SrcP+1
                lda     #$a0
                sta     SrcP
                jsr     BitBlt1
                rts

PutPresser      lda     S2PressVar4
                sta     YLoc
                sta     S2Pv8
                sta     S2PressV5
                sec
                sbc     #$10
                sta     Ycount
                lda     S2Presser_XByte
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$7c
                sta     SrcP+1
                lda     #$a0
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     bltXor            ;draw the Presser 
                lda     #$00
                sta     OrByte
                lda     S2Presser_XByte+3
                sta     YLoc
                lda     S2Presser_XByte+1
                sta     XLocDiv7
                jsr     drawRod           ;drawPressRodLeft
                lda     S2Presser_XByte+3
                sta     YLoc
                lda     S2Presser_XByte+2
                sta     XLocDiv7
                jsr     drawRod           ;drawPressRodRight
                rts

s2InitMovingPlatform lda #$a8
                sta     S2LiftThing2
                sta     S2thingXXX
                sec
                sbc     #$08
                sta     S2LiftY
                lda     #$00
                sta     S2LiftDirection
                lda     #$0e
                sta     Count38
                lda     #$03
                sta     L39
@_1             ldy     L39
                lda     Count38
                sta     XLocDiv7
                sta     XLocation
                lda     S2LiftThing2
                sta     YLoc
                lda     S2thingXXX
                sta     YLocation
                lda     #$e0
                clc
                adc     S2LiftDirection+1,y
                sta     SrcP
                lda     #$7f
                adc     #$00
                sta     SrcP+1
                lda     #$8b
                sta     Src_2+1
                lda     #$00
                sta     Src_2
                jsr     BltBytes
                inc     Count38
                inc     Count38
                dec     L39
                bpl     @_1
                lda     #$00
                sta     drawGroundLineVar
                sta     OrByte
                lda     #$1b
                sta     Yline
                sta     Ything2
                lda     #$70
                sta     StartLineByte
                lda     #$7b
                sta     EndLineByte
                jsr     drawGroundLine
                lda     #$1b
                sta     Yline
                lda     #$7c
                sta     StartLineByte
                sta     EndLineByte
                lda     #$a0
                sta     Ything2
                jsr     drawGroundLine
                rts

s2UpperLeftRail lda     #$2f
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$0c
                sta     XLocDiv7
                clc
                adc     #$0b
                sta     WidthDiv7
                lda     #$81
                sta     SrcP+1
                lda     #$f0
                sta     SrcP
                jsr     BitBlt1
                lda     #$27
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$0e
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$7e
                sta     SrcP+1
                lda     #$20
                sta     SrcP
                jsr     BitBlt1
                lda     #$2f
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$11
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$01
                sta     bltStore
                jsr     BitBlt1
                lda     #$2f
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$0c
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$80
                sta     SrcP+1
                lda     #$40
                sta     SrcP
                jsr     BitBlt1
                lda     #$4f
                sta     YLoc
                lda     #$00
                sta     XLocDiv7
                jsr     drawLeftPlatform
                rts

s2DrawFireStove lda     #$38
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$26
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$80
                sta     SrcP+1
                lda     #$40
                sta     SrcP
                jsr     BitBlt1
                lda     #$2f
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$26
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$87
                sta     SrcP+1
                lda     #$20
                sta     SrcP
                jsr     BitBlt1           ;end here
                lda     #$64
                sta     pointer5L
                lda     #$08
                sta     pointer5Hi
                lda     #$07
                jsr     checksum1         ;protection checking
                cmp     #$56
                beq     @_1
                rts

@_1             jmp     $c600

                .dd1    $ce
                .dd1    $1e
                .dd1    $1e
                .dd1    $ce
                .dd1    $ce
                .dd1    $1e
                .dd1    $1e
                .dd1    $ce
                .dd1    $9a
                .dd1    $9a
                .dd1    $1e
                .dd1    $ce
L4B9C           .dd1    $a7
                .dd1    $a7
                .dd1    $87
                .dd1    $87
                .dd1    $67
                .dd1    $67
                .dd1    $47
                .dd1    $47
                .dd1    $47
                .dd1    $27
                .dd1    $27
                .dd1    $27
                .dd1    $74
                .dd1    $ec
                .dd1    $ec
                .dd1    $bc
                .dd1    $bc
                .dd1    $86
TblS2UpRailX    .dd1    $5c
                .dd1    $5c
                .dd1    $5c
                .dd1    $5c
                .dd1    $5b
                .dd1    $5a
                .dd1    $58
                .dd1    $55
                .dd1    $53
                .dd1    $51
                .dd1    $4f
                .dd1    $4d
                .dd1    $4b
                .dd1    $49
                .dd1    $47
                .dd1    $45
                .dd1    $43
                .dd1    $41
                .dd1    $3f
                .dd1    $3d
                .dd1    $3b
                .dd1    $39
                .dd1    $37
                .dd1    $35
                .dd1    $33
                .dd1    $31
                .dd1    $2f
                .dd1    $2d
                .dd1    $2b
                .dd1    $29
                .dd1    $27
                .dd1    $25
                .dd1    $23
                .dd1    $21
                .dd1    $1f
                .dd1    $1d
TblS2UpRailY    .dd1    $b4
                .dd1    $b2
                .dd1    $b0
                .dd1    $ae
                .dd1    $ac
                .dd1    $aa
                .dd1    $a8
                .dd1    $a6
                .dd1    $a6
                .dd1    $a6
                .dd1    $a6
                .dd1    $a7
                .dd1    $a7
                .dd1    $a8
                .dd1    $a9
                .dd1    $a9
                .dd1    $aa
                .dd1    $ab
                .dd1    $ab
                .dd1    $ac
                .dd1    $ad
                .dd1    $ad
                .dd1    $ae
                .dd1    $af
                .dd1    $af
                .dd1    $b0
                .dd1    $b1
                .dd1    $b1
                .dd1    $b2
                .dd1    $b3
                .dd1    $b3
                .dd1    $b4
                .dd1    $b5
                .dd1    $b5
                .dd1    $b6
                .dd1    $b6
L4BF6           .dd1    $2b
                .dd1    $2f
                .dd1    $33
                .dd1    $37
                .dd1    $3b
                .dd1    $3f
                .dd1    $43
                .dd1    $47
                .dd1    $4b
                .dd1    $4f
                .dd1    $53
                .dd1    $57
                .dd1    $5b
                .dd1    $5f
                .dd1    $63
                .dd1    $67
                .dd1    $6b
                .dd1    $6d
                .dd1    $6b
                .dd1    $69
                .dd1    $65
                .dd1    $61
                .dd1    $5d
                .dd1    $59
                .dd1    $55
                .dd1    $51
                .dd1    $4d
                .dd1    $49
                .dd1    $45
                .dd1    $41
                .dd1    $3d
                .dd1    $3b
                .dd1    $37
                .dd1    $33
                .dd1    $2f
                .dd1    $2b
                .dd1    $27
                .dd1    $23
                .dd1    $1f
                .dd1    $1d
                .dd1    $1d
                .dd1    $1f
                .dd1    $23
                .dd1    $27
L4C22           .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
                .dd1    $4e
                .dd1    $4b
                .dd1    $49
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $48
                .dd1    $49
                .dd1    $4c
                .dd1    $4f
                .dd1    $4f
                .dd1    $4f
L4C4E           .dd1    $50
                .dd1    $7c
                .dd1    $7c
                .dd1    $d0
                .dd1    $28
                .dd1    $28
                .dd1    $46
                .dd1    $46
                .dd1    $5e
                .dd1    $5e
                .dd1    $ce
                .dd1    $ce
                .dd1    $28
                .dd1    $28
                .dd1    $c4
                .dd1    $c4
                .dd1    $88
                .dd1    $88
                .dd1    $50
L4C61           .dd1    $a7
                .dd1    $a7
                .dd1    $87
                .dd1    $87
                .dd1    $87
                .dd1    $67
                .dd1    $67
                .dd1    $47
                .dd1    $47
                .dd1    $27
                .dd1    $27
                .dd1    $47
                .dd1    $47
                .dd1    $67
                .dd1    $67
                .dd1    $87
                .dd1    $87
                .dd1    $a7
                .dd1    $a7
L4C74           .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $85
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
                .dd1    $78
L4CC6           .dd1    $8f
                .dd1    $8d
                .dd1    $8b
                .dd1    $89
                .dd1    $87
                .dd1    $85
                .dd1    $83
                .dd1    $81
                .dd1    $7f
                .dd1    $7d
                .dd1    $7b
                .dd1    $79
                .dd1    $77
                .dd1    $75
                .dd1    $73
                .dd1    $71
                .dd1    $6f
                .dd1    $6d
                .dd1    $6b
                .dd1    $69
                .dd1    $67
                .dd1    $65
                .dd1    $63
                .dd1    $61
                .dd1    $5f
                .dd1    $5d
                .dd1    $5b
                .dd1    $59
                .dd1    $57
                .dd1    $55
                .dd1    $53
                .dd1    $51
                .dd1    $4f
                .dd1    $4d
                .dd1    $4b
                .dd1    $49
                .dd1    $47
                .dd1    $45
                .dd1    $43
                .dd1    $41
                .dd1    $3f
                .dd1    $3f
                .dd1    $41
                .dd1    $43
                .dd1    $45
                .dd1    $47
                .dd1    $49
                .dd1    $4b
                .dd1    $4d
                .dd1    $4f
                .dd1    $51
                .dd1    $53
                .dd1    $55
                .dd1    $57
                .dd1    $59
                .dd1    $5b
                .dd1    $5d
                .dd1    $5f
                .dd1    $61
                .dd1    $63
                .dd1    $65
                .dd1    $67
                .dd1    $69
                .dd1    $6b
                .dd1    $6d
                .dd1    $6f
                .dd1    $71
                .dd1    $73
                .dd1    $75
                .dd1    $77
                .dd1    $79
                .dd1    $7b
                .dd1    $7d
                .dd1    $7f
                .dd1    $81
                .dd1    $83
                .dd1    $85
                .dd1    $87
                .dd1    $89
                .dd1    $8b
                .dd1    $8d
                .dd1    $8f
                .dd1    $00
                .dd1    $36
                .dd1    $36
                .dd1    $44
                .dd1    $00
                .dd1    $50
                .dd1    $50
                .dd1    $87
                .dd1    $87
                .dd1    $67
                .dd1    $67
                .dd1    $67
                .dd1    $67
                .dd1    $67
                .dd1    $b8
                .dd1    $ec
                .dd1    $ec
                .dd1    $b8
                .dd1    $ec
                .dd1    $d0
                .dd1    $ec
                .dd1    $87
                .dd1    $87
                .dd1    $67
                .dd1    $67
                .dd1    $67
                .dd1    $67
                .dd1    $67

encryptJmp      pla
                sta     ptr4e
                pla
                sta     ptr4eHi
                lda     ptr4e
                clc
                adc     #$03
                tay
                lda     ptr4eHi
                adc     #$00
                pha
                tya
                pha
                lda     ptr4eHi
                ldy     #$03
                eor     (ptr4e),y
                pha
                lda     ptr4e
                dey
                eor     (ptr4e),y
                pha
                rts

cmpIdxToEnmXPtr? .dd1   $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tEUnknpwn       .dd1    $05
                .dd1    $05
                .dd1    $05
                .dd1    $05
L4D5D           .dd1    $02
                .dd1    $04
                .dd1    $09
                .dd1    $0a
L4D61           .dd1    $01
                .dd1    $00
                .dd1    $00
                .dd1    $00
L4D65           .dd1    $06
                .dd1    $06
                .dd1    $06
                .dd1    $06
                .dd1    $0b
                .dd1    $0b
                .dd1    $0b
                .dd1    $0b
L4D6D           .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
TblEnmXPtr      .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
TblEnmXPtrHi    .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
TblEnmYPtr      .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
TblEnmYPtrHi    .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
TblSignIdxToEnmXPtr .dd1 $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tmpEnmSrc_minor .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
IdxToEnmXPtr    .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
enmX            .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
enmOldX         .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
enmY            .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
enmOldY         .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tmpEnmSrc1Hi    .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tmpEnmSrc2Hi    .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
EnmAnimFrame    .dd1    $00
IdxcmpIdxToEnmXPtr? .dd1 $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tEX             .dd1    $18
                .dd1    $4d
                .dd1    $26
                .dd1    $4d
                .dd1    $18
                .dd1    $4d
                .dd1    $26
                .dd1    $4d
                .dd1    $90
                .dd1    $4b
                .dd1    $90
                .dd1    $4b
                .dd1    $90
                .dd1    $4b
                .dd1    $90
                .dd1    $4b
Tble_TblEnmXPtr .dd1    $a8
                .dd1    $4b
                .dd1    $a8
                .dd1    $4b
                .dd1    $a8
                .dd1    $4b
                .dd1    $a8
                .dd1    $4b
tEy             .dd1    $1f
                .dd1    $4d
                .dd1    $2d
                .dd1    $4d
                .dd1    $1f
                .dd1    $4d
                .dd1    $2d
                .dd1    $4d
                .dd1    $9c
                .dd1    $4b
                .dd1    $9c
                .dd1    $4b
                .dd1    $9c
                .dd1    $4b
                .dd1    $9c
                .dd1    $4b
Tbl_TblEnmYPtrHi .dd1   $ab
                .dd1    $4b
                .dd1    $ab
                .dd1    $4b
                .dd1    $ab
                .dd1    $4b
                .dd1    $ab
                .dd1    $4b

callShiftBytes  ldy     IdxcmpIdxToEnmXPtr?
@Loop           lda     #$8b
                sta     tmpEnmSrc1Hi,y
                sta     tmpEnmSrc2Hi,y
                jsr     shiftBytes
                and     #$01
                eor     TblSignIdxToEnmXPtr,y
                sta     TblSignIdxToEnmXPtr,y
                eor     tmpEnmSrc_minor,y
                sta     tmpEnmSrc_minor,y
                dey
                bpl     @Loop
                rts

UptEnemies      inc     EnmAnimFrame
                ldy     IdxcmpIdxToEnmXPtr?
                sty     Count38
@loop           lda     enmX,y
                sta     enmOldX,y
                sta     XLocation
                lda     enmY,y
                sta     enmOldY,y
                sta     YLocation
                lda     tmpEnmSrc1Hi,y
                sta     tmpEnmSrc2Hi,y
                sta     Src_2+1
                lda     tmpEnmSrc_minor,y
                asl     A
                asl     A
                sta     SrcP+1
                lda     EnmAnimFrame
                and     #$04
                lsr     A
                ora     SrcP+1
                clc
                adc     #$a8
                sta     SrcP+1
                sta     tmpEnmSrc1Hi,y
                jsr     UpdateDrawEachEnemy
                dec     Count38
                ldy     Count38
                bpl     @loop
                rts

UpdateDrawEachEnemy ldx Count38
                lda     TblEnmXPtr,x
                sta     enmXPtr
                lda     TblEnmXPtrHi,x
                sta     enmXPtr+1
                lda     TblEnmYPtr,x
                sta     enmYptr
                lda     TblEnmYPtrHi,x
                sta     enmYptr+1
                lda     IdxToEnmXPtr,x
                tay
                lda     (enmXPtr),y
                cmp     enmX,x            ;is Enm reach X?
                bne     @_1
                jmp     @_3

@_1             bcs     @_2               ;enmy X lower than Pos X?
                dec     enmX,x            ;over, so Enm go left
                dec     enmX,x
                jmp     _10

@_2             inc     enmX,x            ;need to go right
                inc     enmX,x
                jmp     _10

@_3             lda     (enmYptr),y
                cmp     enmY,x
                bne     @_4
                jmp     @_6

@_4             bcs     @_5
                dec     enmY,x
                dec     enmY,x
                jmp     _10

@_5             inc     enmY,x
                inc     enmY,x
                jmp     _10

@_6             lda     IdxToEnmXPtr,x
                cmp     cmpIdxToEnmXPtr?,x
                beq     _8
                cmp     #$00
                beq     @_9
                lda     TblSignIdxToEnmXPtr,x
                bne     @_7
                dec     IdxToEnmXPtr,x
                jmp     _10

@_7             inc     IdxToEnmXPtr,x
                jmp     _10

_8              lda     #$00
                sta     TblSignIdxToEnmXPtr,x
                dec     IdxToEnmXPtr,x
                jmp     _10

@_9             lda     #$01
                sta     TblSignIdxToEnmXPtr,x
                inc     IdxToEnmXPtr,x
_10             lda     enmX,x
                sta     XLocDiv7
                lda     enmY,x
                sta     YLoc
                jsr     XorPreshiftShape
                rts

xpoint1         .dd1    $00
xpoint2         .dd1    $00
PlayerXsave     .dd1    $00
PlayerSaveWhat  .dd1    $00
xpoint5         .dd1    $00
xpoint6         .dd1    $00
xpoint7         .dd1    $00
ypoint          .dd1    $00
S1FloorsX       .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
LIFE            .dd1    $02
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
PlayerS3AboutToFallVar .dd1 $00

s1_fall_into_Hole lda   isJump
                beq     @_1
                rts

@_1             lda     PlayerX
                cmp     #$db
                bcc     @_2
                rts

@_2             cmp     #$14
                bcs     @_3
                rts

@_3             ldy     s1HoleIndex
                lda     HoleState,y
                beq     @_4
                rts                       ;Hole Filled On that floor

@_4             lda     S1FloorsX,y       ;test if Player On Hole?
                sta     xpoint6
                inc     xpoint6
                inc     xpoint6
                sec
                sbc     #$05
                sta     xpoint5
                lda     PlayerX
                cmp     xpoint5
                bcs     @_5
                rts

@_5             cmp     xpoint6
                bcc     @_7
                rts

@_7             ldy     s1HoleIndex
                iny
                cpy     #$05
                beq     aboutToFall
@_8             lda     HoleState,y
                beq     @_9
                jmp     @_11

@_9             lda     S1FloorsX,y
                sta     xpoint2
                inc     xpoint2
                inc     xpoint2
                sec
                sbc     #$05
                sta     xpoint1
                lda     PlayerX
                cmp     xpoint1
                bcs     @_10
                jmp     @_11

@_10            cmp     xpoint2
                bcs     @_11
                iny
                cpy     #$05
                bne     @_8
                jmp     aboutToFall

@_11            lda     sFloorsY,y
                sta     PlayerSaveWhat
                lda     PlayerX
                sta     PlayerXsave
                jmp     aboutToFall_2

testAboutToFall lda     s1HoleIndex
                cmp     YregSave
                bcs     aboutToFall
                lda     liftY?
                sec
                sbc     #$29
                sta     PlayerSaveWhat
                lda     PlayerX
                sta     PlayerXsave
                jmp     aboutToFall_2

aboutToFall     lda     #$bd
                sta     PlayerSaveWhat
                lda     PlayerX
                sta     PlayerXsave
aboutToFall_2   lda     #$a4
                sta     SrcP+1
                lda     PreshiftAddrHi
                sta     Src_2+1
@_1             lda     PlayerX
                sta     XLocDiv7
                sta     XLocation
                lda     PlayerY
                sta     YLocation
                ora     #$01
                clc
                adc     #$02
                cmp     PlayerSaveWhat
                beq     @_2
                bcs     @_4
@_2             sta     YLoc
                sta     PlayerY
                jsr     XorPreshiftShape  ;draw fall down to death mack (no collapse)
                lda     #$a4
                sta     SrcP+1
                sta     Src_2+1
                lda     LIFE-1
                sec
                sbc     #$02
                cmp     #$30
                bcc     @_3
                sta     LIFE-1
@_3             jsr     MON_WAIT
                jmp     @_1

@_4             lda     PlayerSaveWhat
                sta     PlayerY
                lda     #$a4
                sta     PreshiftAddrHi
                lda     PlayerS3AboutToFallVar
                beq     collapseMack_1
                jmp     setToolbox

collapseMack_1  lda     PreshiftAddrHi
                sta     Src_2+1
                lda     #$bc
                sta     SrcP+1
                jsr     drawCollapseMack
                lda     #$bc
                sta     Src_2+1
                lda     #$be
                sta     SrcP+1
                jsr     drawCollapseMack
                jmp     DecLIFE

setToolbox      lda     #$86              ;point to toolbox bitmap
                sta     SrcP+1
                lda     #$80
                sta     SrcP
                jsr     drawPlayerA?
                lda     #$86
                sta     SrcP+1
                lda     #$a0
                sta     SrcP
                jsr     drawPlayerA?
                lda     lifeRelated
                bne     @_1
                jmp     DecLIFE

@_1             lda     #$8a
                sta     SrcP+1
                lda     #$20
                sta     SrcP
                jsr     drawPlayerA?
                lda     #$8a
                sta     SrcP+1
                lda     #$40
                sta     SrcP
                jsr     drawPlayerA?
                lda     #$8a
                sta     SrcP+1
                lda     #$60
                sta     SrcP
                jsr     drawPlayerA?
                lda     #$30
                jsr     MON_WAIT
                lda     #$8a
                sta     SrcP+1
                lda     #$40
                sta     SrcP
                jsr     drawPlayerA?
                lda     #$8a
                sta     SrcP+1
                lda     #$20
                sta     SrcP
                jsr     drawPlayerA?
                jmp     DecLIFE

                .dd1    $60

drawCollapseMack lda    PlayerX
                sta     XLocDiv7
                sta     XLocation
                lda     PlayerY
                sta     YLoc
                sta     YLocation
                jsr     XorPreshiftShape
                lda     #$ff
                jsr     MON_WAIT
                rts

L5074           .dd1    $04
                .dd1    $1e
                .dd1    $11

drawPlayerA?    ldx     s3PlayerXover7F   ;about to drown on block collector
                lda     L5074,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     PlayerY
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                jsr     BitBlt1
                lda     #$ff
                jsr     MON_WAIT
                rts

DecLIFE         lda     #$01
                sta     isSkipStartMusic
                ldy     #>MusicDeath      ;play DeathMusic
                ldx     #<MusicDeath
                jsr     playMusic
                dec     LIFE
                bmi     @_4
                lda     StagePlay
                cmp     #$01
                beq     @_1
                cmp     #$02
                beq     @_2
                cmp     #$03
                beq     @_3
                rts

@_1             jsr     viaDecLIFE
                jmp     St3_2

@_2             jsr     via2DecLIFE
                jmp     St1_2

@_3             jsr     L5F5C
                jmp     St2_2

@_4             lda     #$18
                ldx     #$ec
                jsr     PrintNumChar
                jsr     testHiScore
                lda     #$0c
                sta     Count38
@_5             lda     #$ff
                jsr     MON_WAIT
                dec     Count38
                bpl     @_5
                jmp     L082D

s1createHole    ldy     #$01
                sty     Count38
@_1             lda     HoleState,y
                cmp     #$02
                beq     @_2
                lda     L0FE9,y
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     S1FloorsX,y
                tax
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$01
                sta     bltStore
                jsr     BitBlt1
@_2             inc     Count38
                ldy     Count38
                cpy     #$05
                bne     @_1
                rts

@_3             ldy     #$01
                sty     Count38
@_4             lda     stateXX,y
                cmp     #$02
                beq     @_5
                lda     sFloorsY,y
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     xArry,y
                tax
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                clc
                lda     #<s1Block1
                adc     tblS1Block,y      ;2 block at7f20 or 7f40 facing different direction
                sta     SrcP
                lda     #>s1Block1
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
@_5             inc     Count38
                ldy     Count38
                cpy     #$05
                bne     @_4
                rts

EHammerX        .dd1    $00
                .dd1    $00
EHammerY        .dd1    $00
                .dd1    $00
                .dd1    $00
EHammerSRC1     .dd1    $00
                .dd1    $00
EHammerSRC2     .dd1    $00
                .dd1    $00
                .dd1    $00

doEHammer       lda     vEHam
                beq     @_1
                rts

@_1             lda     EHammerSRC2+1
                bne     @_2
                lda     #$01
                sta     EHammerSRC2+1
                ldy     #$00
                sty     EHammerSRC2+2
                lda     L4C4E,y
                sta     EHammerX
                sta     EHammerX+1
                lda     L4C61,y
                sta     EHammerY
                sta     EHammerY+1
                lda     #$8b
                sta     EHammerSRC2
                lda     #$b0
                sta     EHammerSRC1
@_2             lda     EHammerX
                sta     XLocDiv7
                lda     EHammerY
                sta     YLoc
                lda     EHammerX+1
                sta     XLocation
                lda     EHammerY+1
                sta     YLocation
                lda     EHammerSRC1
                sta     SrcP+1
                lda     EHammerSRC2
                sta     Src_2+1
                jsr     XorPreshiftShape
                lda     EHammerX
                sta     EHammerX+1
                lda     EHammerY
                sta     EHammerY+1
                lda     EHammerSRC1
                sta     EHammerSRC2
                lda     gotEHammer
                bne     @_9
                ldy     EHammerSRC2+2
                lda     L4C4E,y
                cmp     EHammerX
                bne     _3
                jmp     @_5

_3              bcs     @_4
                dec     EHammerX
                dec     EHammerX
                jmp     @_9

@_4             inc     EHammerX
                inc     EHammerX
                jmp     @_9

@_5             lda     L4C61,y
                cmp     EHammerY
                bne     @_6
                jmp     @_8

@_6             bcs     @_7
                dec     EHammerY
                dec     EHammerY
                jmp     @_9

@_7             inc     EHammerY
                inc     EHammerY
                jmp     @_9

@_8             inc     EHammerSRC2+2
                lda     EHammerSRC2+2
                cmp     #$12
                bne     @_9
                lda     #$00
                sta     EHammerSRC2+2
@_9             lda     EHammerX
                and     #$02
                clc
                adc     #$b0
                sta     EHammerSRC1
                rts

s2ToolboxState  .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $04
                .dd1    $0e
                .dd1    $04
                .dd1    $c4
                .dd1    $ee
                .dd1    $9a
                .dd1    $47
                .dd1    $67
                .dd1    $87
                .dd1    $67
                .dd1    $87
                .dd1    $bc
                .dd1    $38
                .dd1    $0e
                .dd1    $04
                .dd1    $e0
                .dd1    $b6
                .dd1    $9a
                .dd1    $47
                .dd1    $67
                .dd1    $87
                .dd1    $67
                .dd1    $87
                .dd1    $bc
                .dd1    $00

s2PlaceToolsbox lda     s2PlaceToolsbox-1
                eor     #$01
                sta     s2PlaceToolsbox-1
                bne     @_1
                lda     #$52              ;init?
                sta     v25
                lda     #$30
                sta     v24
                lda     #$52
                sta     v27
                lda     #$36
                sta     v26
                jmp     @_2

@_1             lda     #$52
                sta     v25
                lda     #$3c
                sta     v24
                lda     #$52
                sta     v27
                lda     #$42
                sta     v26
@_2             ldy     #$05
                sty     Count38
@_3             ldy     Count38
                lda     s2ToolboxState,y
                beq     @_4               ;no toolbox, so skip
                lda     (v24),y
                tax
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     (v26),y
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #<Toolbox
                sta     SrcP+1
                lda     #>Toolbox
                sta     SrcP
                jsr     BitBlt1           ;draw toolbox
@_4             dec     Count38
                ldy     Count38
                bpl     @_3
                rts

                .dd1    $00
                .dd1    $2a
                .dd1    $ee
                .dd1    $2a
                .dd1    $9a
                .dd1    $b6
                .dd1    $87
                .dd1    $47
                .dd1    $87
                .dd1    $67
                .dd1    $27
                .dd1    $67
                .dd1    $46
                .dd1    $2a
                .dd1    $b6
                .dd1    $0e
                .dd1    $62
                .dd1    $ee
                .dd1    $87
                .dd1    $47
                .dd1    $87
                .dd1    $67
                .dd1    $27
                .dd1    $67
                .dd1    $00

s3PutPickitem   lda     s3PutPickitem-1
                eor     #$01
                sta     s3PutPickitem-1
                bne     @_1
                lda     #$52
                sta     v47
                lda     #$ab
                sta     v46
                lda     #$52
                sta     v49
                lda     #$bd
                sta     v48
                jmp     @_2

@_1             lda     #$52
                sta     v47
                lda     #$b7
                sta     v46
                lda     #$52
                sta     v49
                lda     #$bd
                sta     v48
@_2             ldy     SavYReg
                sty     Count38
@_3             lda     s3ItemState,y
                beq     @_4
                lda     (v46),y
                sta     XLocDiv7
                sta     XLocation
                lda     (v48),y
                sta     YLoc
                sta     YLocation
                lda     #$b4
                sta     SrcP+1
                lda     #$8b
                sta     Src_2+1
                jsr     XorPreshiftShape
@_4             dec     Count38
                ldy     Count38
                bpl     @_3
                rts

                .dd1    $00
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $02
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $0f
                .dd1    $00
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $02
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $0f
                .dd1    $00
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $02
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $0f
                .dd1    $00
                .dd1    $02
                .dd1    $0f
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $02
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $0f
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $02
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $0f
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $07
                .dd1    $03
                .dd1    $02
                .dd1    $05
                .dd1    $01
                .dd1    $05
                .dd1    $01
                .dd1    $0f
                .dd1    $03
                .dd1    $02
                .dd1    $0f
                .dd1    $00
s3TblBelt       .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
L5397           .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
fourItem        .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
s3v4            .dd1    $00
s3BeltMoveWaitCounter .dd1 $01
s3v3            .dd1    $03
                .dd1    $03
                .dd1    $02
                .dd1    $02
                .dd1    $01
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $01
                .dd1    $02
                .dd1    $02
                .dd1    $03
                .dd1    $07
                .dd1    $07
                .dd1    $06
                .dd1    $06
                .dd1    $05
                .dd1    $05
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $05
                .dd1    $06
                .dd1    $06
                .dd1    $07
                .dd1    $07
L53F6           .dd1    $19
                .dd1    $53
                .dd1    $34
                .dd1    $53
                .dd1    $47
                .dd1    $53
                .dd1    $52
                .dd1    $53
                .dd1    $55
                .dd1    $53
                .dd1    $70
                .dd1    $53
                .dd1    $83
                .dd1    $53
                .dd1    $8e
                .dd1    $53

s3UpDownBelt    dec     s3BeltMoveWaitCounter
                beq     S3MoveTallBelt
                rts

S3MoveTallBelt  lda     #$02
                sta     s3BeltMoveWaitCounter
                lda     #$00
                sta     OrByte
                lda     s3TblBelt-1
                bne     @_2
                lda     #$01
                sta     s3TblBelt-1
                ldy     #$04
                sty     s3v4-1
                lda     #$00
                sta     s3v4
@_1             sta     s3TblBelt,y
                clc
                adc     #$10
                sta     s3v4
                lda     s3TblBelt,y
                tax
                lda     L4C74,x
                sta     XLocDiv7
                lda     L4CC6,x
                sta     YLoc
                lda     s3v3,x
                asl     A
                tax
                lda     L53F6,x
                sta     SrcP
                inx
                lda     L53F6,x
                sta     SrcP+1
                jsr     drawNail
                lda     s3v4
                dec     s3v4-1
                ldy     s3v4-1
                bpl     @_1
                rts

@_2             ldy     #$04
                sty     s3v4-1
@_3             lda     s3TblBelt,y
                tax
                lda     L4C74,x
                sta     XLocDiv7
                sta     fourItem,y
                lda     L4CC6,x
                sta     YLoc
                sta     L5397,y
                lda     s3v3,x
                asl     A
                tax
                lda     L53F6,x
                sta     SrcP
                inx
                lda     L53F6,x
                sta     SrcP+1
                jsr     drawNail
                ldy     s3v4-1
                jsr     L549B
                dec     s3v4-1
                ldy     s3v4-1
                bpl     @_3
                rts

L549B           clc
                lda     s3TblBelt,y
                adc     #$01
                cmp     #$52
                bne     L54A7
                lda     #$00
L54A7           sta     s3TblBelt,y
                tax
                lda     L4C74,x
                sta     XLocDiv7
                lda     L4CC6,x
                sta     YLoc
                lda     s3v3,x
                asl     A
                tax
                lda     L53F6,x
                sta     SrcP
                inx
                lda     L53F6,x
                sta     SrcP+1
                jsr     drawNail
                rts

s2TestToolboxTaken ldy  #$05
@_1             lda     s2ToolboxState,y
                beq     @L_2
                lda     (v24),y
                sta     cmpX
                lda     (v26),y
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_3
@L_2            dey
                bpl     @_1
                rts

@_3             lda     #$00
                sta     s2ToolboxState,y
                ldy     #$1b
                ldx     #$14
                jsr     SNDRoutine?
                lda     cmpX
                tax
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     cmpYpos
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$7e
                sta     SrcP+1
                lda     #$80
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     BitBlt1           ;Erase Toolbox
                lda     #$00
                sta     PointsToAdd+2
                lda     #$02
                sta     PointsToAdd+1
                lda     #$05
                sta     PointsToAdd
                jsr     UpdScore
                rts

s3BoxX          .dd1    $00
s3boxY          .dd1    $00
s3boxXsave      .dd1    $00
s3boxYsave      .dd1    $00
                .dd1    $00
s3boxSrc2Hi     .dd1    $00
s3ItemState     .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
isPicked        .dd1    $00
SavYReg         .dd1    $00
p3              .dd1    $00

s3TestPickBox   lda     isPicked
                beq     @MackGotNoBox
                rts

@MackGotNoBox   ldy     SavYReg
@loop           lda     s3ItemState,y     ;check boxes one by one
                cmp     #1                ;1 means box still on rail
                bne     @next             ;already gone
                lda     (v46),y
                sta     cmpX
                lda     (v48),y
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_picked          ;yes, picked box
@next           dey                       ;check next
                bpl     @loop             ;not done, loop
                rts

@_picked        lda     #$01
                sta     isPicked
                sty     p3
                lda     #$02
                sta     s3ItemState,y
                ldy     #$1b
                ldx     #$14
                jsr     SNDRoutine?
                lda     #$02
                sta     PointsToAdd+1
                lda     #$05
                sta     PointsToAdd
                jsr     UpdScore
                lda     cmpX
                sta     XLocDiv7
                sta     XLocation
                lda     cmpYpos
                sta     YLoc
                sta     YLocation
                lda     #$8b              ;point to blank bitmap
                sta     Src_2+1           ;so we can erase an empty last position
                sta     s3boxSrc2Hi
                lda     #>s3boxBitmap
                sta     SrcP+1
                jsr     XorPreshiftShape  ;erase the box from rail
L55A1           lda     s3BoxX
                sta     s3boxXsave
                lda     s3boxY
                sta     s3boxYsave
                lda     PlayerY
                sec
                sbc     #5
                sta     s3boxY            ;box on Player hand
                lda     PlayerX
                cmp     #16
                bcs     L55C0
                jmp     @_BoxFaceRight    ;player is already at left most, box at player right

L55C0           lda     s3BoxFaceDirection?
                cmp     #$03
                beq     @boxFaceLeft
                jmp     @_BoxFaceRight

@_BoxFaceRight  lda     PlayerX           ;player facing right
                clc
                adc     #14               ;box go further right than player
                sta     s3BoxX
                jmp     @exit             ;why not return here?

@boxFaceLeft    lda     PlayerX           ;player face left
                sec
                sbc     #14
                sta     s3BoxX            ;s3 box on left side of player
@exit           rts

s3TestDropMaterial lda  isPicked          ;do we have material for making nail?
                bne     @_1
                rts

@_1             jsr     L55A1
                lda     s3boxXsave
                sta     XLocation
                lda     s3BoxX
                sta     XLocDiv7
                lda     s3boxYsave
                sta     YLocation
                lda     s3boxY
                sta     YLoc
                lda     s3boxSrc2Hi
                sta     Src_2+1
                lda     #>s3boxBitmap
                sta     SrcP+1
                jsr     XorPreshiftShape
                lda     #>s3boxBitmap
                sta     s3boxSrc2Hi
                rts

L560F           .dd1    $00
L5610           .dd1    $00
L5611           .dd1    $00
                .dd1    $00
stateXX         .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

S1checkPickedBlock lda  isPicked
                beq     L5621
                rts

L5621           ldy     #$04
L5623           lda     stateXX,y
                bne     L563C
                lda     xArry,y
                sta     cmpX
                lda     sFloorsY,y
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     L5640
L563C           dey
                bne     L5623
                rts

L5640           lda     #$01
                sta     isPicked
                sta     stateXX,y
                tya
                sta     L5901
                ldx     cmpX
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     cmpYpos
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                clc
                lda     #$20
                adc     tblS1Block,y
                sta     SrcP
                lda     #$7f
                sta     SrcP+1
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                lda     #$8b
                sta     S1checkPickedBlock-1
                lda     #$01
                sta     PointsToAdd+1
                jsr     UpdScore
                ldy     #$1b
                ldx     #$14
                jsr     SNDRoutine?
L568D           lda     L560F
                sta     L5611
                lda     L5610
                sta     stateXX-1
                lda     PlayerY
                sec
                sbc     #$05
                sta     L5610
                lda     PlayerX
                cmp     #$f0
                bcs     L56C3
                cmp     #$10
                bcc     L56B7
                lda     s3BoxFaceDirection?
                cmp     #$01
                beq     L56B7
                jmp     L56C3

L56B7           lda     PlayerX
                clc
                adc     #$0e
                sta     L560F
                jmp     L56CC

L56C3           lda     PlayerX
                sec
                sbc     #$0e
                sta     L560F
L56CC           rts

s1DrawHoldIngBlock lda  isPlayerOver219-1
                beq     @_1
                rts

@_1             lda     isPicked
                bne     @_2
                rts

@_2             lda     gotEHammer
                beq     @_3
                rts

@_3             jsr     L568D
                lda     L5611
                sta     XLocation
                lda     L560F
                sta     XLocDiv7
                lda     stateXX-1
                sta     YLocation
                lda     L5610
                sta     YLoc
                lda     S1checkPickedBlock-1
                sta     Src_2+1
                lda     #$b6
                sta     SrcP+1
                jsr     XorPreshiftShape
                lda     #$b6
                sta     S1checkPickedBlock-1
                rts

                .dd1    $a9
                .dd1    $10
                .dd1    $85
                .dd1    $12
                .dd1    $a6
                .dd1    $0e
                .dd1    $bd
                .dd1    $00
                .dd1    $40
                .dd1    $85
                .dd1    $00
                .dd1    $bd
                .dd1    $c0
                .dd1    $40
                .dd1    $05
                .dd1    $02
                .dd1    $85
                .dd1    $01
                .dd1    $a2
                .dd1    $00
                .dd1    $a5
                .dd1    $11
                .dd1    $18
                .dd1    $69
                .dd1    $03
                .dd1    $a8
                .dd1    $e6
                .dd1    $09
                .dd1    $88
                .dd1    $a1
                .dd1    $09
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $09
                .dd1    $88
                .dd1    $a1
                .dd1    $09
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $09
                .dd1    $88
                .dd1    $a1
                .dd1    $09
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $09
                .dd1    $c6
                .dd1    $0e
                .dd1    $d0
                .dd1    $02
                .dd1    $e6
                .dd1    $0e
                .dd1    $a6
                .dd1    $0c
                .dd1    $bd
                .dd1    $00
                .dd1    $40
                .dd1    $85
                .dd1    $00
                .dd1    $bd
                .dd1    $c0
                .dd1    $40
                .dd1    $05
                .dd1    $02
                .dd1    $85
                .dd1    $01
                .dd1    $a2
                .dd1    $00
                .dd1    $a5
                .dd1    $10
                .dd1    $18
                .dd1    $69
                .dd1    $03
                .dd1    $a8
                .dd1    $e6
                .dd1    $07
                .dd1    $88
                .dd1    $a1
                .dd1    $07
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $07
                .dd1    $88
                .dd1    $a1
                .dd1    $07
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $07
                .dd1    $88
                .dd1    $a1
                .dd1    $07
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $07
                .dd1    $c6
                .dd1    $0c
                .dd1    $d0
                .dd1    $02
                .dd1    $e6
                .dd1    $0c
                .dd1    $c6
                .dd1    $12
                .dd1    $f0
                .dd1    $03
                .dd1    $4c
                .dd1    $0f
                .dd1    $1f
                .dd1    $60
                .dd1    $11
                .dd1    $a0
                .dd1    $05
                .dd1    $d0
                .dd1    $0c
                .dd1    $a9
                .dd1    $1c
                .dd1    $a0
                .dd1    $01
                .dd1    $d0
                .dd1    $6a
                .dd1    $a9
                .dd1    $25
                .dd1    $a0
                .dd1    $02
                .dd1    $d0
                .dd1    $64
                .dd1    $85
                .dd1    $24
                .dd1    $a9
                .dd1    $01
                .dd1    $20
                .dd1    $5b
                .dd1    $fb
                .dd1    $a9
                .dd1    $a0
                .dd1    $20
                .dd1    $ed
                .dd1    $fd
                .dd1    $20
                .dd1    $ed
                .dd1    $fd
                .dd1    $c6
                .dd1    $24
                .dd1    $c6
                .dd1    $24
                .dd1    $20
                .dd1    $b0
                .dd1    $09
                .dd1    $e0
                .dd1    $02
                .dd1    $f0
                .dd1    $47
                .dd1    $c0
                .dd1    $04
                .dd1    $d0
                .dd1    $09
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $35
                .dd1    $c9
                .dd1    $23
                .dd1    $b0
                .dd1    $31
                .dd1    $c0
                .dd1    $05
                .dd1    $d0
                .dd1    $09
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $28
                .dd1    $c9
                .dd1    $10
                .dd1    $b0
                .dd1    $24
                .dd1    $c0
                .dd1    $01
                .dd1    $d0
                .dd1    $0d
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $1b
                .dd1    $c9
                .dd1    $08
                .dd1    $b0
                .dd1    $17
                .dd1    $0a
                .dd1    $0a
                .dd1    $0a
                .dd1    $0a
                .dd1    $c0
                .dd1    $02
                .dd1    $d0
                .dd1    $0b
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $c9
                .dd1    $01
                .dd1    $f0
                .dd1    $04
                .dd1    $c9
                .dd1    $02
                .dd1    $d0
                .dd1    $04
                .dd1    $99
                .dd1    $14
                .dd1    $0c
                .dd1    $60
                .dd1    $20
                .dd1    $3a
                .dd1    $ff
                .dd1    $4c
                .dd1    $4f
                .dd1    $0b
                .dd1    $4c
                .dd1    $a3
                .dd1    $0a
                .dd1    $4c
                .dd1    $4f
                .dd1    $0b
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
L5800           .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $01
                .dd1    $00
                .dd1    $00
                .dd1    $00
vFlagCountBon   .dd1    $00
vDoneFlag       .dd1    $00
vSmall          .dd1    $00
tblBonus        .dd1    $05
                .dd1    $04
Bonus           .dd1    $00               ;5 digit in reverse. e.g 00050  is Bonus 05000
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
BonusHPos       .dd1    $0a               ;Bonus Horizontal Position in reverse, from 200A back to 2006
                .dd1    $09
                .dd1    $08
                .dd1    $07
                .dd1    $06
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $30
counter1        .dd1    $30

BonusUpdatePrint dec    counter1
                beq     @_1               ;ready to subtract
                jmp     @_6               ;nope

@_1             lda     counter1-1
                sta     counter1
@_2             ldx     #$00
                sec
@_3             lda     Bonus,x           ;subtract bonus
                sbc     PointsToAdd,x
                bpl     @_4
                clc
                lda     #$09
@_4             sta     Bonus,x
                php
                inx
                cpx     #$04
                beq     @_5
                plp
                jmp     @_3

@_5             plp
@_6             lda     #$00
                sta     PointsToAdd
                sta     PointsToAdd+1
                sta     PointsToAdd+2
                sta     PointsToAdd+3
                sta     PointsToAdd4
                sta     PointsToAdd4+1
                jsr     PrintBonus
                jsr     L5886
                rts

PrintBonus      ldx     #$04
                stx     Count38
@_1             lda     BonusHPos,x
                sta     L5882
                lda     Bonus,x
                ora     #$30
                sta     L5884
                lda     #$58
                ldx     #$82
                jsr     PrintNumChar
                dec     Count38
                ldx     Count38
                bpl     @_1
                rts

L5882           .dd1    $00
                .dd1    $00
L5884           .dd1    $30
                .dd1    $00

L5886           ldx     #$04
@_1             lda     Bonus,x
                clc
                adc     vFlagCountBon-1
                sta     vFlagCountBon-1
                dex
                bpl     @_1
                lda     vFlagCountBon-1
                beq     @_6
                lda     #$00
                sta     vFlagCountBon-1
                ldx     #$04
@_2             lda     L5800,x
                cmp     Bonus,x
                bcc     @_3
                bne     @_4
                dex
                bpl     @_2
@_3             rts

@_4             lda     vSmall
                beq     @_5
                rts

@_5             ldy     #$5e
                ldx     #$c5
                jsr     SNDRoutine?
                lda     #$01
                sta     vSmall
                jsr     SNDRoutine?
                rts

@_6             lda     vDoneFlag
                bne     @_7
                jmp     DecLIFE

@_7             lda     #$01
                sta     vFlagCountBon
                rts

EndBonusPlayMusic lda   vFlagCountBon
                beq     @_1
                rts

@_1             lda     #$01
                sta     PointsToAdd+2
                jsr     @_2
                jsr     tstAddLIFE
                lda     #$01
                sta     PointsToAdd+2
                jsr     UpdScore
                lda     #$80
                jsr     MON_WAIT
                ldy     #$74              ;bonus beep
                ldx     #$cc
                jsr     playMusic
                jmp     EndBonusPlayMusic

gotEHammer      .dd1    $00
HoleState       .dd1    $00               ;1 blocked 2 Hammered
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
L5901           .dd1    $00
L5902           .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

TestS1DropBlock lda     gotEHammer
                beq     @_1
                rts

@_1             lda     isPicked
                bne     @_2               ;if 1 picked?
                rts

@_2             ldy     #$04
@_3             sty     Count38
                lda     HoleState,y
                bne     @_4
                lda     L560F
                cmp     S1FloorsX,y
                beq     @_5
@_4             dey
                bne     @_3
                rts

@_5             lda     sFloorsY,y
                cmp     PlayerY
                beq     @_6               ;yes, at drop point
                jmp     @_4

@_6             lda     #$00              ;drop the block
                sta     isPicked
                lda     #$01
                sta     HoleState,y       ;mark hole state as filled
                lda     L5901
                sta     L5902,y
                lda     #$8b
                sta     Src_2+1
                lda     #$b6
                sta     SrcP+1
                lda     L560F
                sta     XLocDiv7
                sta     XLocation
                lda     L5610
                sta     YLoc
                sta     YLocation
                jsr     XorPreshiftShape
                ldy     Count38
                lda     S1FloorsX,y
                tax
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     L0FE9,y
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     #$10
                sta     SrcP
                lda     #$86
                sta     SrcP+1
                jsr     BitBlt1
                lda     #$02
                sta     PointsToAdd+1
                lda     #$05
                sta     PointsToAdd
                jsr     UpdScore
                ldy     #$5f
                ldx     #$0b
                jsr     SNDRoutine?
                rts

L5999           .dd1    $00
                .dd1    $00
                .dd1    $40
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $60

S1TstWelding    lda     gotEHammer
                bne     @_1
                rts

@_1             ldy     #$04
@_2             lda     HoleState,y
                beq     @_4
                cmp     #$02
                beq     @_4
                lda     S1FloorsX,y
                cmp     EHammerX
                bcc     @_3
                jmp     @_4

@_3             clc
                adc     #$0e
                cmp     EHammerX
                bcs     @_5
@_4             dey
                bne     @_2
                rts

@_5             lda     sFloorsY,y
                cmp     PlayerY
                bne     @_4
                lda     #$02
                sta     HoleState,y
                lda     L5902,y
                tax
                lda     #$02
                sta     stateXX,x
                lda     L0FE9,y
                sta     YLoc
                sec
                sbc     #$08
                sta     Ycount
                lda     S1FloorsX,y
                tax
                lda     TBL_div7,x
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     XLocDiv7
                lsr     A
                tax
                clc
                lda     #$60
                adc     L5999,x
                sta     SrcP
                lda     #$7f
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                lda     #$05
                sta     PointsToAdd+1
                jsr     UpdScore
                ldy     #$5f
                ldx     #$03
                jsr     SNDRoutine?
                rts

Xarry2          .dd1    $00
                .dd1    $31
                .dd1    $00
                .dd1    $d2

s2CheckRIghtPressor lda PlayerY
                sec
                sbc     #$10
                sta     Count38
                ldy     StagePlay
                lda     Xarry2,y
                sec
                sbc     #$08
                cmp     PlayerX
                bcc     @_1
                rts

@_1             clc
                adc     #$10
                cmp     PlayerX
                bcs     @_2
                rts

@_2             lda     S2PressV5
                sec
                sbc     #$08
                cmp     Count38
                bcc     @_3
                rts

@_3             lda     S2PressV5
                cmp     Count38
                bcs     @_4
                rts

@_4             lda     S2PressVar3
                bne     @_5
                jsr     s2_787d
                jsr     doSound
                jmp     @_4

@_5             jmp     collapseMack_1

isHitEletric    lda     PlayerY
                cmp     #$48
                bcc     @_1
                rts

@_1             cmp     #$28
                bcs     @_2
                rts

@_2             lda     PlayerX
                cmp     #$07
                bcc     @_3
                rts

@_3             lda     #$8b
                sta     Src_2+1
                lda     PreshiftAddrHi
                sta     SrcP+1
                lda     PlayerX
                sta     XLocDiv7
                sta     XLocation
                lda     PlayerY
                sta     YLoc
                sta     YLocation
                jsr     XorPreshiftShape
                lda     #$86
                sta     s2StoveVar5
                lda     #$20
                sta     s2StoveVar6
                lda     #$8b
                sta     s2StoveVar3
                lda     #$00
                sta     s2StoveVar4
                lda     #$01
                sta     L69B6
                lda     #$3c
                sta     Count38
@_4             jsr     L6A08
                lda     #$20
                jsr     MON_WAIT
                jsr     KeyThing
                dec     Count38
                bpl     @_4
                jmp     DecLIFE

s2_L5ACC        lda     #$c2
                sta     cmpX
                lda     #$47
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_1
                rts

@_1             jmp     collapseMack_1

                .dd1    $a9
                .dd1    $c2
                .dd1    $8d
                .dd1    $15
                .dd1    $6b
                .dd1    $a9
                .dd1    $43
                .dd1    $8d
                .dd1    $16
                .dd1    $6b
                .dd1    $20
                .dd1    $17
                .dd1    $6b
                .dd1    $ad
                .dd1    $14
                .dd1    $6b
                .dd1    $d0
                .dd1    $01
                .dd1    $60
                .dd1    $4c
                .dd1    $e5
                .dd1    $4f

s2_5af8         lda     #$2a
                sta     cmpX
                lda     #$67
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_1
                rts

@_1             jmp     doDeathType

s2CheckLowerLeftClapper ldy #$00
                lda     L6B9C,y
                cmp     PlayerX
                bcs     @_1
                jmp     @_2

@_1             sec
                sbc     #$10
                cmp     PlayerX
                bcc     @_4
@_2             ldy     #$01
                lda     L6B9C,y
                clc
                adc     #$04
                cmp     PlayerX
                bcs     @_3
                rts

@_3             sec
                sbc     #$10
                cmp     PlayerX
                bcc     @_4
                rts

@_4             lda     #$84
                cmp     PlayerY
                bcc     @_5
                rts

@_5             lda     #$87
                cmp     PlayerY
                bcs     @_6
                rts

@_6             jmp     doDeathType

s2_HitTNT       lda     #$b6
                sta     cmpX
                lda     #$bc
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_1
                rts

@_1             jmp     doDeathType

s2_Hitdump      ldx     #$01              ;check twp lower left dump that run up on rail
@_1             lda     tbls2dumpX,x
                sta     cmpX
                lda     tbls2dumpY,x
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_2
                dex
                bpl     @_1
                rts

@_2             jmp     collapseMack_1

collideNail     lda     isPlayerOver219
                beq     @_1
                rts

@_1             lda     PlayerX
                cmp     NailX
                bcc     @_2
                rts

@_2             clc
                adc     #$0e
                cmp     NailX
                bcs     @_3               ;check NailY
                rts

@_3             lda     PlayerY
                cmp     NailY
                bcs     @_4
                rts

@_4             sec
                sbc     #$0e
                cmp     NailY
                bcc     @_5
                rts

@_5             jmp     doDeathType

vEHam           .dd1    $00

tstEhammer      lda     vEHam
                beq     @_1
                rts

@_1             lda     gotEHammer
                bne     @_4
                lda     isPicked
                beq     @_2
                rts

@_2             lda     EHammerX
                sta     cmpX
                lda     EHammerY
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_3
                rts

@_3             lda     #$01
                sta     gotEHammer
                sta     isPicked
@_4             lda     PlayerY
                sta     EHammerY
                lda     PlayerX
                cmp     #$10
                bcc     @_6
                cmp     #$f0
                bcs     @_5
                lda     s3BoxFaceDirection?
                cmp     #$03
                beq     @_5
                jmp     @_6

@_5             lda     PlayerX
                sec
                sbc     #$0e
                sta     EHammerX
                rts

@_6             lda     PlayerX
                clc
                adc     #$0e
                sta     EHammerX
                rts

Eham            lda     StagePlay
                cmp     #$02
                beq     @_1
                lda     #$00
                sta     ZeroIfStandStill
                rts

@_1             lda     isPlayerOver219+1
                beq     @_2
                rts

@_2             sta     KBDSTRB
                lda     gotEHammer
                bne     @_3
                rts

@_3             lda     #$00
                sta     gotEHammer
                sta     isPicked
                sta     EHammerSRC2+2
                tay
                lda     L4C4E,y
                sta     EHammerX
                lda     L4C61,y
                sta     EHammerY
                rts

tstEnm          lda     EnmCount
                beq     isHitEnm
                rts

isHitEnm        ldy     IdxcmpIdxToEnmXPtr?
@_getEnemyLoc   lda     enmX,y
                sta     cmpX
                lda     enmY,y
                sta     cmpYpos
                jsr     cmpPlayr          ;compare with enemy, st1 brick
                lda     HitPlayerFlag
                bne     @HitEnemy
                dey
                bpl     @_getEnemyLoc
                rts

@HitEnemy       jmp     doDeathType

spinMackWait    .dd1    $00
SpinningMackType .dd1   $00
TblMackSpinning .dd2    macStandRightSprite
                .dd2    mackStandLeftSprite
                .dd2    mackFrontSprite

doDeathType     lda     isJump            ;slow motion (WAIT) or spin Mack?
                beq     spinningMackToDeath
                jsr     KeyIsSpace
                lda     #$a0
                jsr     MON_WAIT
                jmp     doDeathType

spinningMackToDeath ldy #$14
                sty     Count38
@_1             jsr     updateSpinningMack
                jsr     getSpinMack
                jsr     drawSpinMack
                lda     #$50
                jsr     MON_WAIT
                dec     Count38
                bpl     @_1
                jmp     collapseMack_1

updateSpinningMack lda  spinMackWait
                bne     _SpinType
                dec     SpinningMackType
                lda     SpinningMackType
                bpl     LeaveUpdSpinningMack
                lda     #$01
                sta     spinMackWait
                lda     #$00
                sta     SpinningMackType
                rts

_SpinType       inc     SpinningMackType
                lda     SpinningMackType
                cmp     #$03
                bne     LeaveUpdSpinningMack
                lda     #$00
                sta     spinMackWait
                lda     #$02
                sta     SpinningMackType
                rts

getSpinMack     lda     SpinningMackType
                asl     A
                tay
                lda     TblMackSpinning,y
                sta     AddrNotUsed?
                iny
                lda     TblMackSpinning,y
                sta     AddrHi
                rts

LeaveUpdSpinningMack rts

drawSpinMack    lda     PlayerX
                sta     XLocDiv7
                sta     XLocation
                lda     PlayerY
                sta     YLoc
                sta     YLocation
                lda     PreshiftAddrHi
                sta     Src_2+1
                lda     AddrHi
                sta     SrcP+1
                jsr     XorPreshiftShape
                lda     AddrHi
                sta     PreshiftAddrHi
                jsr     KeyThing
                rts

CheckBTN        lda     BUTN1
                bpl     @_1
                jmp     Eham              ;Button1 pressed, release EHam?

@_1             lda     BUTN0
                bpl     @_2
                jmp     KeyIsSpace        ;Button0 Pressed

@_2             lda     l825
                beq     @_3
                lda     #$00
                sta     ZeroIfStandStill
                rts

@_3             jsr     chkPDLx_1
                lda     Joy_State
                cmp     #$00
                bne     @_4
                jmp     KeyIsA            ;0, so go up

@_4             cmp     #$01
                bne     @_5
                jmp     KeyIsRight        ;1, go right

@_5             cmp     #$02
                bne     @_6
                jmp     KeyIsLeft         ;2, go left

@_6             cmp     #$03
                bne     @_7
                jmp     KeyIsZ            ;3, go down

@_7             lda     #$00
                sta     ZeroIfStandStill
                rts

chkPDLx_1       lda     #$00
                sta     Joy_State
                lda     pdlX
                cmp     #$46
                bcc     doubleChkPDL      ;Paddle X Left
                cmp     #$b4
                bcs     doubleChkPDL      ;Pdl X Right
                lda     pdlY
                cmp     #$46
                bcc     doubleChkPDL      ;Pdl Y UP
                cmp     #$b4
                bcs     doubleChkPDL      ;PDL Y Down
                lda     #$ff
                sta     Joy_State
                rts

doubleChkPDL    lda     pdlX
                cmp     pdlY
                bcc     PDL_State0        ;PDL X < PDL Y
                jmp     PDLXoverPDLY

PDL_State0      lda     #$02
                ora     Joy_State
                sta     Joy_State
PDLXoverPDLY    lda     #$ff
                sec
                sbc     pdlX
                cmp     pdlY
                bcc     PDL_State1
                beq     PDL_State1
                jmp     PDL_State2

PDL_State1      lda     #$01
                ora     Joy_State
                sta     Joy_State
PDL_State2      rts

                .dd1    $6a
                .dd1    $4d
                .dd1    $9c
                .dd1    $5d
                .dd1    $2a
                .dd1    $08
                .dd1    $ad
                .dd1    $9c
                .dd1    $5d
                .dd1    $49
                .dd1    $80
                .dd1    $8d
                .dd1    $9c
                .dd1    $5d
                .dd1    $28
                .dd1    $60
Joy_State       .dd1    $00
                .dd1    $00
SNDv5d9d        .dd1    $00
SNDv5d8e        .dd1    $00
readOnce        .dd1    $04
SNDstrangeA0    .dd1    $00
SNDstrangeA1    .dd1    $00
SNDstrangeA2    .dd1    $00

SNDRoutine?     lda     SNDv5d8e
                bne     @_1
                lda     v4a
                sta     SNDv5d9d
                lda     v4b
                sta     SNDv5d8e
@_1             stx     v4a
                sty     v4b
                lda     #$00
                sta     v33
                rts

snd1            lda     SNDv5d8e
                beq     snd2
                lda     SNDv5d9d
                sta     v4a
                lda     SNDv5d8e
                sta     v4b
                lda     #$00
                sta     v33
                sta     SNDv5d8e
                rts

snd2            lda     SNDstrangeA0
                sta     v4a
                lda     SNDstrangeA1
                sta     v4b
                lda     #$00
                sta     v33
                sta     SNDv5d8e
                rts

doSound         lda     isNoSound2
                beq     sound2
                rts

sound2          lda     v33
                bne     sound4
                ldy     #$00
                lda     (v4a),y
                clc
                adc     #$04
                asl     A
                tax
                lda     SNDv71,x
                sta     v30
                lda     SNDv71+1,x
                sta     v31
                asl     v30
                rol     v31
                lda     SNDstrangeA2
                bne     sound3
                lda     SNDv5d8e
                beq     sound3
                asl     v30
                rol     v31
sound3          iny
                lda     (v4a),y
                beq     snd1
                sta     v33
                lda     v4a
                clc
                adc     #$02
                sta     v4a
                lda     v4b
                adc     #$00
                sta     v4b
                lda     #$70
                sta     v34
sound4          lda     v30
                clc
                adc     v2b
                sta     v2b
                lda     v31
                adc     v2c
                sta     v2c
                cmp     v34
                lda     #$00
                rol     A
                tax
                lda     #$00
                sta     v2e,x
                txa
                eor     #$01
                tax
                lda     v2e,x
                bne     sound5
                inc     v2e,x
                bit     SPKR
                jmp     sound6

sound5          bit     KBD
                inc     v36
                nop
sound6          lda     readOnce
                clc
                adc     v35
                sta     v35
                lda     v34
                adc     #$00
                sta     v34
                dec     v32
                bne     sound4
                lda     #$78
                sta     v32
                dec     v33
                rts

SNDv71          .dd1    $00
                .dd1    $00
                .dd1    $fa
                .dd1    $00
                .dd1    $c4
                .dd1    $39
                .dd1    $00
                .dd1    $00
                .dd1    $b0
                .dd1    $02
                .dd1    $d9
                .dd1    $02
                .dd1    $04
                .dd1    $03
                .dd1    $32
                .dd1    $03
                .dd1    $63
                .dd1    $03
                .dd1    $96
                .dd1    $03
                .dd1    $cd
                .dd1    $03
                .dd1    $07
                .dd1    $04
                .dd1    $44
                .dd1    $04
                .dd1    $85
                .dd1    $04
                .dd1    $ca
                .dd1    $04
                .dd1    $13
                .dd1    $05
                .dd1    $60
                .dd1    $05
                .dd1    $b2
                .dd1    $05
                .dd1    $09
                .dd1    $06
                .dd1    $64
                .dd1    $06
                .dd1    $c6
                .dd1    $06
                .dd1    $2d
                .dd1    $07
                .dd1    $9a
                .dd1    $07
                .dd1    $0e
                .dd1    $08
                .dd1    $88
                .dd1    $08
                .dd1    $0a
                .dd1    $09
                .dd1    $94
                .dd1    $09
                .dd1    $26
                .dd1    $0a
                .dd1    $c0
                .dd1    $0a
                .dd1    $64
                .dd1    $0b
                .dd1    $11
                .dd1    $0c
                .dd1    $c9
                .dd1    $0c
                .dd1    $8b
                .dd1    $0d
                .dd1    $59
                .dd1    $0e
                .dd1    $34
                .dd1    $0f
                .dd1    $1b
                .dd1    $10
                .dd1    $11
                .dd1    $11
                .dd1    $14
                .dd1    $12
                .dd1    $28
                .dd1    $13
                .dd1    $4b
                .dd1    $14
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $08
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $08
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $08
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $08
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $05
                .dd1    $03
                .dd1    $00
                .dd1    $00
                .dd1    $ff
                .dd1    $20
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $01
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $05
                .dd1    $02
                .dd1    $08
                .dd1    $06
                .dd1    $05
                .dd1    $04
                .dd1    $00
                .dd1    $00
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $00
                .dd1    $00
                .dd1    $0e
                .dd1    $04
                .dd1    $0a
                .dd1    $04
                .dd1    $12
                .dd1    $04
                .dd1    $0e
                .dd1    $04
                .dd1    $00
                .dd1    $00
                .dd1    $0b
                .dd1    $03
                .dd1    $0b
                .dd1    $03
                .dd1    $0b
                .dd1    $03
                .dd1    $00
                .dd1    $00
                .dd1    $10
                .dd1    $02
                .dd1    $15
                .dd1    $01
                .dd1    $1a
                .dd1    $01
                .dd1    $00
                .dd1    $00

checksum1       tay
                beq     _2
                lda     #$00
                clc
_1              rol     A
                eor     (pointer5L),y
                dey
                bne     _1
_2              rol     A
                eor     (pointer5L),y
                rts

viaDecLIFE      ldy     #$05
@loop           lda     s3ItemState,y
                beq     @next
                lda     #$01
                sta     s3ItemState,y
@next           dey
                bpl     @loop
                jsr     encryptJmp
                sta     L2000+$b04
                rts

via2DecLIFE     ldy     #$04
@loop           lda     stateXX,y
                cmp     #$02
                beq     @next
                lda     #$00
                sta     stateXX,y
@next           dey
                bpl     @loop
                ldy     #$04
@loop2          lda     HoleState,y
                cmp     #$02
                beq     @next2
                lda     #$00
                sta     HoleState,y
@next2          dey
                bpl     @loop2
                rts

L5F5C           rts

s3initB         ldy     #$05
                lda     #$01
@loop           sta     s3ItemState,y
                dey
                bpl     @loop
                lda     #$00
                sta     isSkipStartMusic
                rts

s1_InitBlockHole ldy    #$04
@loop           lda     #$00
                sta     HoleState,y
                sta     stateXX,y
                dey
                bpl     @loop
                jsr     vias1_InitBlockHole
                jsr     via2s1_InitBlockHole
                lda     #$00
                sta     isSkipStartMusic
                rts

s2_initArray    ldy     #$05
@loop           lda     #$01
                sta     s2ToolboxState,y
                dey
                bpl     @loop
                lda     #$00
                sta     isSkipStartMusic
                rts

s3RailHolePosX  .dd1    24
                .dd1    206
s3LowerRailHoleX .dd1   28
                .dd1    210

s3TestPlayerFallInHole lda PlayerY
                cmp     #135
                beq     @onLowestRail
                rts

@onLowestRail   ldy     s3PlayerXover7F
                lda     s3RailHolePosX,y  ;player x at 24, or 206?
                cmp     PlayerX
                bcc     @_2
                rts

@_2             clc
                adc     #$06
                cmp     PlayerX
                bcs     @_3
                rts

@_3             lda     PlayerX
                sta     PlayerXsave
                lda     #171
                sta     PlayerSaveWhat
                lda     #$01
                sta     PlayerS3AboutToFallVar
                jmp     aboutToFall_2

s3PlayerXover7F .dd1    $00
                .dd1    $00

s3CheckPlayerX  cmp     #$7f
                bcc     L5FD3
                lda     #$01
                rts

L5FD3           lda     #$00
                rts

s3v5FD6         .dd1    $00
s3v5            .dd1    $00
s3v6            .dd1    $50
                .dd1    $94
s3v8            .dd1    $00
                .dd1    $00
                .dd1    $08
                .dd1    $10
L5FDE           .dd1    $00
                .dd1    $4f
                .dd1    $47
                .dd1    $3f
L5FE2           .dd1    $00
L5FE3           .dd1    $10
                .dd1    $00
                .dd1    $40
                .dd1    $00

********************************************************************************
* Make Mac Float in mid air if disable                                         *
********************************************************************************
s3PlayLeftPlatform lda  s3v5FD6
                beq     @_1
                rts

@_1             ldx     s3PlayerXover7F
                lda     s3v6,x
                cmp     PlayerX
                bcc     @_2
                rts

@_2             clc
                adc     #$0a
                cmp     PlayerX
                bcs     @_3
                rts

@_3             lda     isJump
                beq     @_5
                lda     MackJumpStep
                cmp     #$0f
                beq     @_4
                rts

@_4             jsr     ErazsMack
@_5             ldy     #$03
                lda     PlayerY
@_6             cmp     sFloorsY,y
                beq     @_7
                dey
                bne     @_6
                rts

@_7             sty     s3v5
                lda     #$01
                sta     Var2
                sta     s3v5FD6
                ldy     s3v5
                lda     s3PlayerXover7F
                bne     @_8
                lda     s3v8,y
                sta     s3PlayLeftPlatform-1
                lda     #$01
                sta     L5FE2
                sta     s3BoxFaceDirection?
                rts

@_8             lda     #$ff
                sta     L5FE2
                lda     L5FDE,y
                sta     s3PlayLeftPlatform-1
                lda     #$03
                sta     s3BoxFaceDirection?
                rts

s3doMackFalling lda     s3v5FD6
                bne     @_1
                rts

@_1             ldy     s3PlayLeftPlatform-1
                lda     L1E19,y
                sta     PlayerX
                lda     L1E6A,y
                sta     PlayerY
                lda     s3PlayLeftPlatform-1
                ldy     L5FE2
                iny
                cmp     L5FE3,y
                beq     @_2
                clc
                adc     L5FE2
                sta     s3PlayLeftPlatform-1
                jsr     mackFallPart2
                jsr     xDrawPlayer
                lda     s3PlayerXover7F
                sta     v650d
                jmp     JumpPadAnimation

@_2             lda     #$00
                sta     Var2
                sta     s3v5FD6
                jmp     KeyIsSpace

                .dd1    $00
L6096           .dd1    $a4
                .dd1    $00
                .dd1    $a0
                .dd1    $00
                .dd1    $a2
                .dd1    $00

mackFallPart2   lda     mackFallPart2-1
                asl     A
                tay
                lda     L6096,y
                sta     AddrHi
                sta     SrcP+1
                lda     L5FE2
                cmp     #$01
                bne     @_3
                lda     s3PlayLeftPlatform-1
                cmp     #$20
                beq     @_2
                cmp     #$33
                beq     @_1
                rts

@_1             lda     #$00
                sta     mackFallPart2-1
                rts

@_2             lda     #$01
                sta     mackFallPart2-1
                rts

@_3             lda     s3PlayLeftPlatform-1
                cmp     #$30
                beq     @_5
                cmp     #$1d
                beq     @_4
                rts

@_4             lda     #$00
                sta     mackFallPart2-1
                rts

@_5             lda     #$02
                sta     mackFallPart2-1
                rts

s3vPlayerBeltVar .dd1   $00

testPlayerXNearBelt lda S2Thing
                beq     @_1
                rts

@_1             lda     S23ThingB
                beq     @_2
                rts

@_2             lda     PlayerX
                cmp     #$5a
                bcs     @_3
                rts

@_3             cmp     #$96
                bcc     @_4
                rts

@_4             ldx     #$04
@_5             lda     fourItem,x
                jsr     s3CheckPlayerX
                cmp     s3PlayerXover7F
                bne     @_6
                lda     L5397,x
                clc
                adc     #$04
                cmp     PlayerY
                bcs     @_7
@_6             dex
                bpl     @_5
                rts

@_7             sec
                sbc     #$08
                cmp     PlayerY
                bcc     @_8
                jmp     @_6

@_8             lda     s3TblBelt,x       ;match belt segment
                sta     s3vPlayerBeltVar
                lda     isJump
                beq     @_9
                jsr     ErazsMack         ;xor old player pos, update to standing new pos
@_9             lda     #$01
                sta     l825
                sta     S23ThingB
                sta     S2Thing
                lda     s3PlayerXover7F
                bne     @_10
                lda     #$03
                sta     s3BoxFaceDirection?
                rts

@_10            lda     #$01
                sta     s3BoxFaceDirection?
                rts

                .dd1    $02

s3TstPlayerXXXX lda     S23ThingB
                bne     @_1
                rts

@_1             ldx     s3vPlayerBeltVar
                lda     L4C74,x
                ldy     s3PlayerXover7F
                bne     @_2
                sec
                sbc     #$0e
                jmp     @_3

@_2             clc
                adc     #$04
@_3             sta     PlayerX
                lda     L4CC6,x
                sec
                sbc     #$01
                sta     PlayerY
                dec     s3TstPlayerXXXX-1
                bne     @_4
                inc     s3vPlayerBeltVar
                lda     #$02
                sta     s3TstPlayerXXXX-1
@_4             lda     s3PlayerXover7F
                bne     @_5
                lda     #$03
                sta     s3BoxFaceDirection?
                jmp     removeMackStandLeftSprite

@_5             lda     #$01
                sta     s3BoxFaceDirection?
                jmp     removeMacStandRightSprite

s3BOxSavedX     .dd1    $00
                .dd1    $00
s3FallingBoxY   .dd1    $00
s3BOxSavedY     .dd1    $00
Vars3TestDropBox .dd1   $00
var2s3TestDropBox .dd1  $00
s3SavebmpHi     .dd1    $00
YRegSaveS3TestDropBox .dd1 $00

s3TestDropBox   lda     Vars3TestDropBox
                bne     @_4
                lda     isPicked
                bne     @_isHoldingBox
                rts

@_isHoldingBox  lda     PlayerY
                cmp     #135
                beq     @_playerAtLowerRail
                rts

@_playerAtLowerRail ldy s3PlayerXover7F   ;deciding left or right
                lda     s3LowerRailHoleX,y ;at 28 or 210?
                cmp     s3BoxX
                beq     @_3
                rts

@_3             ldy     #$1b
                ldx     #$28
                jsr     SNDRoutine?
                lda     #$00
                sta     isPicked
                ldy     p3
                sty     YRegSaveS3TestDropBox
                lda     #$03
                sta     s3ItemState,y
                lda     #$01
                sta     Vars3TestDropBox
                lda     s3BoxX
                sta     s3BOxSavedX
                lda     s3boxXsave
                sta     s3BOxSavedX+1
                lda     s3boxY
                sta     s3FallingBoxY
                sta     s3BOxSavedY
@_4             lda     s3BOxSavedX
                sta     XLocDiv7
                sta     s3BOxSavedX+1
                lda     s3FallingBoxY
                sta     YLoc
                lda     #>s3boxBitmap     ;remeber what need to erase next time
                sta     s3SavebmpHi
                jsr     xorS3Box
                inc     s3FallingBoxY     ;why not add 4
                inc     s3FallingBoxY
                inc     s3FallingBoxY
                inc     s3FallingBoxY
                lda     s3FallingBoxY
                cmp     #172
                bcs     @over171          ;>= 172
                rts

@over171        lda     #$02              ;box dropped
                sta     PointsToAdd+1
                lda     #$05
                sta     PointsToAdd
                jsr     UpdScore
                lda     s3BOxSavedX
                sta     XLocDiv7
                lda     s3BOxSavedY
                sta     YLoc
                lda     #$8b              ;set to blank
                sta     s3SavebmpHi
                jsr     xorS3Box
                lda     #$00
                sta     Vars3TestDropBox
                ldy     s3PlayerXover7F
                lda     S3TblNailLeftRight,y
                sta     s3NailToPotPoint
                ldy     #$05              ;5 frame of Nail to pot animation
                lda     s3PlayerXover7F
                bne     @_7
                lda     tblS3NaiLXloc,y   ;Nail get to left pot
                sta     NailVarX
                sta     XLocDiv7
                lda     tblS3NaiLYloc,y
                sta     NailVarY
                sta     YLoc
                jmp     @_5

@_7             lda     tblS3NaiLXloc2,y  ;Nail get to right pot
                sta     NailVarX
                sta     XLocDiv7
                lda     tblS3NaiLYloc2,y
                sta     NailVarY
                sta     YLoc
                jmp     @_5

xorS3Box        lda     s3BOxSavedY
                sta     YLocation
                lda     s3BOxSavedX+1
                sta     XLocation
                lda     s3SavebmpHi
                sta     Src_2+1
                lda     #>s3boxBitmap
                sta     SrcP+1
                jsr     XorPreshiftShape
                lda     s3FallingBoxY
                sta     s3BOxSavedY
                lda     s3BOxSavedX
                sta     s3BOxSavedX+1
                rts

L6292           .dd1    $00
L6293           .dd1    $01
                .dd1    $03
                .dd1    $05
                .dd1    $03

s3PlayerOnBelt  lda     isJump
                beq     @_1
                rts

@_1             lda     PlayerY
                cmp     #71
                beq     @_2
                rts

@_2             lda     PlayerX
                cmp     #112
                bcc     @_3
                rts

@_3             lda     ZeroIfStandStill
                bne     @_5
                dec     PlayerX
                dec     PlayerX
                jsr     checkMackFaceDirection
                lda     s3BoxFaceDirection?
                cmp     #$01
                bne     @_4
                jmp     removeMacStandRightSprite

@_4             jmp     removeMackStandLeftSprite

@_5             lda     s3BoxFaceDirection?
                cmp     #$01
                bne     @_7
                dec     PlayerX
                dec     PlayerX
                lda     L6292
                cmp     #$04
                bne     @_6
                lda     #$00
                sta     L6292
@_6             tay
                lda     L6293,y
                tay
                inc     L6292
                jmp     L0D12

@_7             jmp     KeyIsLeft

s3NailToPotPoint .dd1   $00
S3NailIndex     .dd1    $00
S3TblNailLeftRight .bulk 0102
NailVarX        .dd1    $00
NailVarY        .dd1    $00

s3UptNailToPot  lda     s3NailToPotPoint
                bne     @_1
                rts

@_1             lda     NailVarX
                sta     XLocDiv7
                lda     NailVarY
                sta     YLoc
                jsr     @_5
                lda     s3NailToPotPoint
                cmp     #$01
                bne     @_2
                ldy     S3NailIndex
                lda     tblS3NaiLXloc,y
                sta     XLocDiv7
                sta     NailVarX
                lda     tblS3NaiLYloc,y
                sta     YLoc
                sta     NailVarY
                jsr     @_5
                jmp     @_3

@_2             ldy     S3NailIndex
                lda     tblS3NaiLXloc2,y
                sta     XLocDiv7
                sta     NailVarX
                lda     tblS3NaiLYloc2,y
                sta     YLoc
                sta     NailVarY
                jsr     @_5
@_3             dec     S3NailIndex
                bmi     @_4
                rts

@_4             ldy     #$5f
                ldx     #$0b
                jsr     SNDRoutine?
                lda     #0
                sta     s3NailToPotPoint
                lda     #$05
                sta     S3NailIndex
                lda     NailVarX
                sta     XLocDiv7
                lda     NailVarY
                sta     YLoc
                ldy     YRegSaveS3TestDropBox
                lda     #$00
                sta     s3ItemState,y
                jmp     @_5

@_5             lda     #$15
                sta     SrcP+1
                lda     #$90
                sta     SrcP
                jsr     drawNail
                rts

L6376           .dd1    $00
L6377           .dd1    $00
L6378           .dd1    $00
                .dd1    $00
isPlayerOver219 .dd1    $00
                .dd1    $00

tstLIFT         lda     onLiftFlag
                beq     @_1
                rts

@_1             lda     isJump
                beq     @_2
                rts

@_2             lda     L6377
                bne     @_3
                rts

@_3             lda     PlayerX
                cmp     #$14
                bcc     @_4               ;less than #20, LIFT right most..
                lda     #$00
                sta     L6376
                rts

@_4             lda     YregSave          ;at LIFT X entrance
                cmp     s1HoleIndex
                beq     @_5
                jmp     testAboutToFall

@_5             lda     PlayerX
                cmp     #$10
                bcc     PlayLiftMusic
                rts

PlayLiftMusic   ldy     #>MusicLiftToGO   ;MusicLiftToGO
                ldx     #<MusicLiftToGO
                jsr     playMusic
                lda     #$01
                sta     onLiftFlag
                sta     L6376
                sta     Var2
                sta     mackInLiftFlag
                sta     KBDSTRB
                sta     isPlayerOver219
                sta     isPlayerOver219+1
                lda     #$00
                sta     L6377
                lda     isPicked
                bne     @_1
                rts

@_1             lda     gotEHammer
                beq     @_2               ;player not hold Eham, so it would be block
                lda     #$8b              ;draw EHam
                sta     Src_2+1
                lda     EHammerSRC2
                sta     SrcP+1
                lda     EHammerX
                sta     XLocDiv7
                sta     XLocation
                lda     EHammerY
                sta     YLoc
                sta     YLocation
                jsr     XorPreshiftShape
                lda     #$8b
                sta     EHammerSRC2
                lda     #$01
                sta     vEHam
                rts

@_2             lda     #$8b
                sta     Src_2+1
                lda     S1checkPickedBlock-1
                sta     SrcP+1
                lda     L560F
                sta     XLocDiv7
                sta     XLocation
                lda     L5610
                sta     YLoc
                sta     YLocation
                jsr     XorPreshiftShape
                lda     #$8b
                sta     S1checkPickedBlock-1
                lda     #$01
                sta     isPlayerOver219-1
                rts

L6426           .dd1    $00
                .dd1    $20
                .dd1    $40
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $40
                .dd1    $20
                .dd1    $00
L642F           .dd1    $00
L6430           .dd1    $00
                .dd1    $01

s1_6432         lda     L6378
                bne     @_1
                rts

@_1             dec     s1_6432-1
                beq     @_2
                rts

@_2             lda     #$03
                sta     s1_6432-1
                lda     L6430
                bne     @_3
                lda     #$08
                sta     L642F
                lda     #$01
                sta     L6430
                ldy     #$1b
                ldx     #$44
                jsr     SNDRoutine?
@_3             ldy     YregSave
                lda     sFloorsY,y
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     #$01
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                clc
                ldy     L642F
                lda     #$20
                adc     L6426,y
                sta     SrcP
                lda     #$7d              ;mack shape?
                adc     #$00
                sta     SrcP+1
                jsr     BitBlt1
                dec     L642F
                bmi     @_4
                rts

@_4             lda     #$00
                sta     L6378
                sta     L6430
                sta     Var2
                sta     isPlayerOver219
                sta     isPlayerOver219+1
                lda     #$01
                sta     s1_6432-1
                lda     xpoint7
                sta     PlayerX
                sta     PlayerXsav
                lda     ypoint
                sta     PlayerY
                sta     PlayerYSav
                lda     #$a4
                sta     PreshiftAddrHi
                lda     isPicked
                bne     @_5
                rts

@_5             lda     gotEHammer
                beq     @_6
                lda     #$14
                sta     EHammerX+1
                lda     PlayerY
                sta     EHammerY+1
                lda     #$00
                sta     vEHam
                rts

@_6             lda     #$14
                sta     L5611
                lda     PlayerY
                sta     stateXX-1
                lda     #$00
                sta     isPlayerOver219-1
                rts

testPlayerYXat18 lda    PlayerY
                and     #$f0
                clc
                ror     A
                ror     A
                ror     A
                ror     A
                clc
                lsr     A
                tay
                dey
                sty     s1HoleIndex
                lda     PlayerX
                cmp     #$14
                bcc     @_1
                lda     #$01
                sta     L6377
@_1             rts

v6503           .dd1    $00
v6504           .dd1    $00
v6505           .dd1    $00
v6506           .dd1    $00
v6507           .dd1    $00
v6508           .dd1    $00
v6509           .dd1    $00
v650a           .dd1    $0c
                .dd1    $16
                .dd1    $23
v650d           .dd1    $00

s1_650e         lda     v6505
                bne     @_5
                lda     isJump
                beq     @_1
                rts

@_1             lda     PlayerX
                cmp     #$db
                bcs     @_2
                rts

@_2             cmp     #$ee
                bcs     @_3
L6525           jmp     aboutToFall

@_3             lda     #$01
                sta     Var2
                sta     v6505
                sta     v6503
                sta     isPlayerOver219
                lda     #$a4
                sta     TblmackFrontSprite+3
                lda     #$00
                sta     TblmackFrontSprite+2
                ldy     s1HoleIndex
                dey
                bpl     @_4
                ldy     #$04
@_4             lda     sFloorsY,y
                sta     v6504
@_5             lda     v6503
                beq     @_6
                jsr     doPlayerYDown2
                jsr     TryDown
                jsr     JumpPadAnimation
                lda     PlayerY
                cmp     #$b7
                bne     @_7
                lda     #$00
                sta     v6503
                rts

@_6             jsr     doPlayerUp2
                jsr     TryUp
                jsr     JumpPadAnimation
                lda     PlayerY
                cmp     v6504
                bne     @_7
                lda     #$00
                sta     v6505
                sta     Var2
                sta     isJump
                sta     isPlayerOver219
                lda     #$03
                sta     s3BoxFaceDirection?
                jsr     KeyIsSpace
                lda     #$a6
                sta     TblmackFrontSprite+3
                lda     #$00
                sta     TblmackFrontSprite+2
@_7             rts

doPlayerUp2     sec
                lda     PlayerY
                sbc     #$02
                sta     PlayerY
                rts

doPlayerYDown2  clc
                lda     PlayerY
                adc     #$02
                sta     PlayerY
                rts

JumpPadAnimation lda    PlayerY
                cmp     #$af
                beq     @_1
                cmp     #$b3
                beq     @_2
                cmp     #$b7
                beq     @_3
                rts

@_1             lda     #$7d
                sta     SrcP+1
                lda     #$80
                sta     SrcP
                jmp     @_4

@_2             lda     #$7d
                sta     SrcP+1
                lda     #$a0
                sta     SrcP
                jmp     @_4

@_3             ldy     #$1b
                ldx     #$64
                jsr     SNDRoutine?
                lda     #$7d
                sta     SrcP+1
                lda     #$c0
                sta     SrcP
@_4             lda     SrcP+1
                sta     v6509
                lda     SrcP
                sta     v6508
                lda     v6507
                sta     Src_2+1
                lda     v6506
                sta     Src_2
                ldx     v650d
                lda     v650a,x
                sta     XLocDiv7
                sta     XLocation
                lda     #$bc
                sta     YLoc
                sta     YLocation
                jsr     BltBytes          ;jumppad animation
                lda     v6509
                sta     v6507
                lda     v6508
                sta     v6506
                rts

checkJump       lda     isJump
                bne     @_1
                rts

@_1             lda     PlayerX
                cmp     #219
@_2             bcs     @_3
                lda     #$00
                sta     isPlayerOver219
                rts

@_3             lda     #$01
                sta     isPlayerOver219
                rts

s1TestFixedAllHole ldy  #$04
@_1             lda     HoleState,y
                cmp     #$02              ;state 2 hole is welded?
                bne     @_2
                dey                       ;yes, next
                bne     @_1
                lda     #$01              ;all hole welded
                sta     vDoneFlag
                jsr     EndBonusPlayMusic
                jsr     drawLevelDigit
                jsr     protection_CheckSum
                ldy     #>MusicStage1Done
                ldx     #<MusicStage1Done
                jsr     playMusic
                jmp     St2_1

@_2             rts

S2Thing         .dd1    $00
S23ThingB       .dd1    $00
s2s3JumpFlag    .dd1    $00
                .dd1    $00

tS2onLift       lda     S2Thing
                beq     @_1
                rts

@_1             lda     S23ThingB
                beq     @_2
                rts

@_2             lda     PlayerX
                cmp     #$54
                bcs     @_3               ;>=54
                rts

@_3             cmp     #$9a
                bcc     @_4               ;<9a
                rts

@_4             lda     isJump
                bne     @_5
                rts

@_5             lda     PlayerY
                clc
                adc     #$04
                cmp     S2LiftY
                bcs     @_6
                jmp     @_11

@_6             sec
                sbc     #$06
                cmp     S2LiftY
                bcc     @_7
                jmp     @_11

@_7             lda     PlayerX
                cmp     #$5b
                bcs     @_8
                jmp     @_11

@_8             cmp     #$98
                bcc     @_9
                jmp     @_11

@_9             lda     isJump
                beq     @_10
                jsr     ErazsMack
@_10            lda     #$01
                sta     s2s3JumpFlag
                sta     S2Thing
                sta     S23ThingB
                lda     #$00
                sta     doS2Lift-1
                sta     l825
                rts

@_11            lda     #$00
                sta     S23ThingB
                rts

testPlayerSomething lda S23ThingB
                bne     @_1
                rts

@_1             lda     S2LiftY
                sta     PlayerY
                lda     ZeroIfStandStill
                bne     @_2
                jsr     removeMackOnBelt
@_2             lda     PlayerX
                cmp     #$69
                bcs     @_3
                jmp     s2IsBelRoutine

@_3             cmp     #$85
                bcc     setF1
                jmp     @_1

setF0           lda     #$00
                sta     s2s3JumpFlag
                rts

setF1           lda     #$01
                sta     s2s3JumpFlag
                rts

s2IsBelRoutine  lda     s3BoxFaceDirection?
                cmp     #$03
                beq     setF0
                jmp     setF1

@_1             lda     s3BoxFaceDirection?
                cmp     #$01
                beq     setF0
                jmp     setF1

removeMackOnBelt lda    s3BoxFaceDirection?
                cmp     #$01
                bne     @_1
                jmp     removeMacStandRightSprite

@_1             jmp     removeMackStandLeftSprite

isMackOnS2Rail? .dd1    $00
S2_RailCountDown .dd1   $00
s2_RailVar      .dd1    $00

s2UpdateMackGoUpRail lda isMackOnS2Rail?
                bne     @_1
                rts

@_1             ldy     S2_RailCountDown
                lda     TblS2UpRailX,y
                sta     PlayerX
                lda     TblS2UpRailY,y
                sec
                sbc     #$02
                sta     PlayerY
                dec     S2_RailCountDown
                bmi     L6755
                jsr     removeMacStandRightSprite
                lda     S2_RailCountDown
                cmp     #$0a
                bcs     @_2
                rts

@_2             cmp     #$10
                bcc     @_3
                rts

@_3             lda     #$00
                sta     s2s3JumpFlag
                lda     #$01
                sta     doS2Lift-1
                sta     s2s3JumpFlag+1
                rts

L6755           jmp     DecLIFE

tstS2_8         lda     s2_RailVar
                beq     @_1
                rts

@_1             lda     MackJumpStep
                cmp     #$0a
                beq     @_2
                rts

@_2             jsr     ErazsMack
                lda     #$01
                sta     isMackOnS2Rail?
                sta     s2_RailVar
                sta     s2s3JumpFlag
                ldy     #$23
                lda     TblS2UpRailX,y
                sta     PlayerX
                lda     TblS2UpRailY,y
                sec
                sbc     #$02
                sta     PlayerY
                sty     S2_RailCountDown
                rts

removeMacStandRightSprite lda #$96
                sta     SrcP+1
                sta     AddrHi
                jmp     xDrawPlayer

removeMackStandLeftSprite lda #$9c
                sta     SrcP+1
                sta     AddrHi
                jmp     xDrawPlayer

testStage23Jump lda     StagePlay
                cmp     #$02
                bne     @_1
                rts

@_1             ldx     #$03
                lda     PlayerY
@_2             cmp     sFloorsY,x
                beq     @_4
                dex
                bpl     @_2
                lda     PlayerY
                cmp     #$bb
                bcs     @_3
                lda     #$18
                sta     S2L2
                rts

@_3             lda     #$0f
                sta     S2L2
                rts

@_4             lda     PlayerX
                cmp     #$50
                bcs     @_5
                jmp     ErazsMack

@_5             cmp     #$9e
                bcc     @_6
                jmp     ErazsMack

@_6             lda     PlayerY
                cmp     #$27
                beq     @_7
                lda     #$18
                sta     S2L2
                rts

@_7             lda     #$0f
                sta     S2L2
                rts

TstPlayerYatB0  lda     PlayerY
                cmp     #$b0
                bcs     @_1
                lda     #$01
                sta     fixS2PlayerY
                rts

@_1             lda     #$00
                sta     fixS2PlayerY
                rts

S2TestPlayerY2  lda     isJump
                beq     @_1
                rts

@_1             lda     PlayerY
                cmp     #$b0
                bcc     @_2
                rts

@_2             lda     PlayerX
                cmp     #$52
                bcs     @_3
                rts

@_3             cmp     #$5a
                bcc     @_4
                jmp     @_5

@_4             lda     #$b1
                sta     PlayerSaveWhat
                lda     PlayerX
                sta     PlayerXsave
                jmp     aboutToFall_2

@_5             cmp     #$98
                bcs     @_6
                rts

@_6             cmp     #$9e
                bcc     @_7
                rts

@_7             lda     #$bd
                sta     PlayerSaveWhat
                lda     PlayerX
                sta     PlayerXsave
                jmp     aboutToFall_2

L683F           .dd1    $27
                .dd1    $47
                .dd1    $67
                .dd1    $87
                .dd1    $bd

tstS2Flg        lda     isJump
                bne     @_1
                rts

@_1             lda     MackJumpStep
                cmp     #$17
                beq     @_2
                rts

@_2             lda     PlayerX
                cmp     #$58
                bcs     @_3
                jmp     @_4

@_3             cmp     #$98
                bcc     @_7
@_4             ldx     #$00
                lda     PlayerY
@_5             cmp     L683F,x
                bcc     @_6
                inx
                cpx     #$05
                bne     @_5
@_6             lda     L683F,x
                sta     PlayerSaveWhat
                lda     PlayerX
                sta     PlayerXsave
                jmp     aboutToFall_2

@_7             lda     S2LiftY
                cmp     PlayerY
                bcc     @_8
                ora     #$01
                sta     PlayerSaveWhat
                jmp     @_9

@_8             lda     #$bd
                sta     PlayerSaveWhat
@_9             jmp     aboutToFall_2

s2PlayerXbeltShift .dd1 $a6
s2UpdPlyY       .dd1    $77

testS2UpperBelt lda     sdbelt22
                beq     @_1
                rts

@_1             lda     PlayerY
                cmp     #$48
                bcc     @_2
                rts

@_2             lda     PlayerX
                cmp     #$aa
                bcs     @_3
                rts

@_3             lda     MackJumpStep
                cmp     #$0a
                beq     @_4
                rts

@_4             jsr     ErazsMack
                lda     #$01
                sta     s2OnUppeerBelt
                sta     Var2
                sta     sdbelt22
                ldy     #$23
                lda     TblS2UpRailX,y
                clc
                adc     s2PlayerXbeltShift
                sta     PlayerX
                lda     TblS2UpRailY,y
                sec
                sbc     s2UpdPlyY
                sta     PlayerY
                sty     S2_RailCountDown
                rts

                .dd1    $60
s2OnUppeerBelt  .dd1    $00
sdbelt22        .dd1    $00

TstS2OnBelt2    lda     s2OnUppeerBelt
                bne     @_1
                rts

@_1             ldy     S2_RailCountDown
                lda     TblS2UpRailX,y
                clc
                adc     s2PlayerXbeltShift
                bmi     @_2
                lda     #$fe
@_2             sta     PlayerX
                lda     TblS2UpRailY,y
                sec
                sbc     s2UpdPlyY
                sta     PlayerY
                dec     S2_RailCountDown
                lda     S2_RailCountDown
                cmp     #$05
                beq     @_3
                jmp     removeMacStandRightSprite

@_3             lda     #$24
                sta     L69B6
                jmp     TstS2OnBelt3

S2MagnetPickMack? lda   s2OnUppeerBelt
                bne     @_1
                rts

@_1             ldy     #$05
@_2             lda     s2ToolboxState,y
                bne     @_3
                dey
                bpl     @_2
                lda     s2SuckMagnetX
                sec
                sbc     #$04
                cmp     PlayerX
                bcc     @_4
@_3             rts

@_4             clc
                adc     #$0e
                cmp     PlayerX
                bcs     @_5
                rts

@_5             lda     S2SuckMagnetY
                clc
                adc     #$1a
                cmp     PlayerY
                bcs     @_6
                rts

@_6             lda     S2SuckMagnetY
                clc
                adc     #$0f
                sta     PlayerY
                ldy     #$5f
                ldx     #$0b
                jsr     SNDRoutine?
@_7             jsr     s2MagnetUpd
                lda     #$00
                sta     ZeroIfStandStill
                jsr     setMackMusic
                jsr     doSound
                jsr     doSound
                lda     s2SuckMagnetX
                sta     PlayerX
                jsr     DrawDownMackFixed
                lda     PlayerX
                cmp     #$8e
                beq     @_8
                lda     #$60
                jsr     MON_WAIT
                jmp     @_7

@_8             lda     #$27
                sta     PlayerY
                lda     #$8e
                sta     PlayerX
                jsr     DrawDownMackFixed
                ldx     #$14
                stx     Count38
@_9             jsr     s2MagnetUpd
                lda     #$80
                jsr     MON_WAIT
                dec     Count38
                bpl     @_9
                lda     #$01
                sta     vDoneFlag
                jsr     EndBonusPlayMusic
                jsr     drawLevelDigit
                jsr     protection_CheckSum
                ldy     #>MusicStage2Done
                ldx     #<MusicStage2Done
                jsr     playMusic
                jsr     St3_1             ;wont return
L69B6           brk

TstS2OnBelt3    lda     PreshiftAddrHi
                sta     Src_2+1
                lda     #$8b              ;blank area?
                sta     SrcP+1
                lda     #$fa
                sta     XLocDiv7
                sta     XLocation
                lda     #$2f
                sta     YLoc
                sta     YLocation
                jsr     XorPreshiftShape
                lda     #$20
                sta     s2StoveVar6
                lda     #$86
                sta     s2StoveVar5
                lda     #$8b
                sta     s2StoveVar3
                lda     #$00
                sta     s2StoveVar4
@_1             jsr     L6A08
                lda     #$28
                jsr     MON_WAIT
                inc     PlayerY
                lda     PlayerY
                cmp     #$bd
                bne     @_1
                ldx     #$28
                stx     Count38
@_2             jsr     L6A08
                lda     #$14
                jsr     MON_WAIT
                dec     Count38
                bpl     @_2
                jmp     DecLIFE

L6A08           lda     L69B6
                sta     XLocDiv7
                sta     XLocation
                lda     PlayerY
                sta     YLoc
                lda     PlayerYSav
                sta     YLocation
                lda     s2StoveVar3
                sta     Src_2+1
                lda     s2StoveVar4
                sta     Src_2
                lda     s2StoveVar5
                sta     SrcP+1
                lda     s2StoveVar6
                sta     SrcP
                jsr     BltBytes
                lda     s2StoveVar5
                sta     s2StoveVar3
                lda     s2StoveVar6
                sta     s2StoveVar4
                lda     PlayerY
                sta     PlayerYSav
                jsr     shiftBytes
                and     #$03
                tay
                clc
                lda     #$20
                adc     s2StoveVarX,y
                sta     s2StoveVar6
                lda     #$86
                adc     #$00
                sta     s2StoveVar5
                rts

tbl6A59         .dd1    $e0
                .dd1    $7d
                .dd1    $40
                .dd1    $88
                .dd1    $00
                .dd1    $7e
                .dd1    $20
                .dd1    $88
tbl6A61         .dd1    $00
                .dd1    $00
                .dd1    $54
                .dd1    $27
                .dd1    $a8
                .dd1    $27
                .dd1    $8c
                .dd1    $bc
L6A69           .dd1    $00
L6A6A           .dd1    $00
L6A6B           .dd1    $00
L6A6C           .dd1    $00
                .dd1    $00
StagePlay       .dd1    $00               ;stage 1 is 2, stage 2 is 3, stage 3 is 1

putBonusPiece   lda     StagePlay
                asl     A
                tay
                lda     tbl6A61,y
                sta     L6A69
                iny
                lda     tbl6A61,y
                sta     L6A6A
                jsr     shiftBytes
                and     #$03
                asl     A
                tay
                lda     tbl6A59,y
                sta     SrcP
                sta     L6A6B
                iny
                lda     tbl6A59,y
                sta     SrcP+1
                sta     L6A6C
                lda     #$01
                sta     bltXor
                ldy     L6A69
                lda     TBL_div7,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     L6A6A
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                jsr     BitBlt1           ;draw S3 Upper Left Hammer Bonus Piece
                rts

getSt1TopGift   lda     StagePlay-1
                beq     @_1
                rts

@_1             lda     L6A69
                sta     cmpX
                lda     L6A6A
                sta     cmpYpos
                jsr     HitPlayer1
                lda     HitPlayerFlag
                bne     @_2
                rts

@_2             ldy     L6A69
                lda     TBL_div7,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     L6A6A
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     L6A6B
                sta     SrcP
                lda     L6A6C
                sta     SrcP+1
                lda     #$01
                sta     bltXor
                sta     StagePlay-1
                jsr     BitBlt1           ;erase bonus Piece (st1 top tools)
                lda     #$02
                sta     PointsToAdd+2
                jsr     UpdScore
                ldy     #$1b
                ldx     #$14
                jsr     SNDRoutine?
                rts

HitPlayerFlag   .dd1    $00
cmpX            .dd1    $00               ;for Compare X position
cmpYpos         .dd1    $00               ;for Compare Y position

HitPlayer1      lda     cmpX
                sec
                sbc     #$0a              ;?? -10 then add 18??
                cmp     #$f0
                bcc     @_1
                lda     #$00
@_1             cmp     PlayerX
                bcc     @_2
                jmp     NotTouchPlayer

@_2             clc
                adc     #$12
                cmp     PlayerX
                bcs     @_3
                jmp     NotTouchPlayer

@_3             lda     cmpYpos
                sec
                sbc     #$04
                cmp     PlayerY
                bcc     @_4
                jmp     NotTouchPlayer

@_4             clc
                adc     #$08
                cmp     PlayerY
                bcs     @_5
                jmp     NotTouchPlayer

@_5             lda     #$01
                sta     HitPlayerFlag
                rts

NotTouchPlayer  lda     #$00
                sta     HitPlayerFlag
                rts

cmpPlayr        lda     cmpX
                sec
                sbc     #$08
                cmp     #$f4
                bcc     @_1
                lda     #$00
@_1             cmp     PlayerX
                beq     @_2
                bcc     @_2
                jmp     NotTouchPlayer

@_2             clc
                adc     #$10
                cmp     PlayerX
                bcs     @_3
                jmp     NotTouchPlayer

@_3             lda     cmpYpos
                sec
                sbc     #$0c
                cmp     PlayerY
                bcc     @_4
                jmp     NotTouchPlayer

@_4             clc
                adc     #$18
                cmp     PlayerY
                bcs     @_5
                jmp     NotTouchPlayer

@_5             lda     #$01
                sta     HitPlayerFlag
                rts

L6B9B           .dd1    $02
L6B9C           .dd1    $00
                .dd1    $00
L6B9E           .dd1    $00
                .dd1    $00
L6BA0           .dd1    $1c
                .dd1    $38
                .dd1    $2a
                .dd1    $2a
L6BA4           .dd1    $85
L6BA5           .dd1    $00
                .dd1    $00
L6BA7           .dd1    $00
L6BA8           .dd1    $00
L6BA9           .dd1    $ad
                .dd1    $6b
                .dd1    $c5
                .dd1    $6b
                .dd1    $00
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $03
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $03
                .dd1    $02
                .dd1    $02
                .dd1    $04
                .dd1    $04
                .dd1    $03
                .dd1    $04
                .dd1    $07
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $03
                .dd1    $04
                .dd1    $07
                .dd1    $02
                .dd1    $0f
                .dd1    $00
                .dd1    $04
                .dd1    $04
                .dd1    $04
                .dd1    $01
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $01
                .dd1    $02
                .dd1    $02
                .dd1    $04
                .dd1    $04
                .dd1    $01
                .dd1    $04
                .dd1    $05
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $01
                .dd1    $04
                .dd1    $05
                .dd1    $02
                .dd1    $0f

s2UpdClamper    dec     L6B9B
                beq     @_1
                rts

@_1             lda     #$02
                sta     L6B9B
                lda     L6BA7
                bne     @_2
                lda     #$01
                sta     L6BA7
                ldy     #$01
                lda     #$38
                sta     L6B9C,y
                sta     L6B9E,y
                lda     #$00
                sta     L6BA5,y
                lda     L6BA4
                sta     YLoc
                lda     L6B9C,y
                sta     XLocDiv7
                jsr     @_9               ;draw the clamp
                ldy     #$00
                lda     #$1c
                sta     L6B9C,y
                sta     L6B9E,y
                lda     #$01
                sta     L6BA5,y
                lda     L6BA4
                sta     YLoc
                lda     L6B9C,y
                sta     XLocDiv7
                jsr     @_9
                rts

@_2             ldy     #$01
                sty     L6BA8
@_3             lda     L6B9E,y
                sta     XLocDiv7
                lda     L6BA4
                sta     YLoc
                jsr     @_9
                ldy     L6BA8
                lda     L6B9C,y
                sta     XLocDiv7
                lda     L6BA4
                sta     YLoc
                jsr     @_9
                ldx     L6BA8
                lda     L6B9C,x
                sta     L6B9E,x
                lda     L6BA5,x
                bne     @_5
                dec     L6B9C,x
                dec     L6B9C,x
                jmp     @_6

@_5             inc     L6B9C,x
                inc     L6B9C,x
@_6             lda     L6B9C,x
                cmp     #$2a
                beq     @_7
                cmp     L6BA0,x
                bne     @_8
@_7             lda     L6BA5,x
                eor     #$01
                sta     L6BA5,x
@_8             dec     L6BA8
                ldy     L6BA8
                bpl     @_3
                rts

@_9             tya
                asl     A
                tay
                lda     L6BA9,y
                sta     SrcP
                iny
                lda     L6BA9,y
                sta     SrcP+1
                jsr     drawNail
                rts

L6C99           .dd1    $00
L6C9A           .dd1    $00
L6C9B           .dd1    $00
L6C9C           .dd1    $00
L6C9D           .dd1    $00
L6C9E           .dd1    $00
L6C9F           .dd1    $00
L6CA0           .dd1    $00
L6CA1           .dd1    $00
                .dd1    $10
                .dd1    $20
                .dd1    $30
L6CA5           .dd1    $04
                .dd1    $1c
L6CA7           .dd1    $0a
                .dd1    $22
L6CA9           .dd1    $bc
                .dd1    $47
L6CAB           .dd1    $ac
                .dd1    $37
L6CAD           .dd1    $00
                .dd1    $03

S2_SpinRollerPoint dec  S2_SpinRollerPoint-1
                beq     @_1
                rts

@_1             lda     #$02
                sta     S2_SpinRollerPoint-1
                ldy     #$01
                sty     Count38
@_2             lda     L6C9A
                sta     Src_2+1
                lda     L6C99
                sta     Src_2
                lda     L6C9C
                sta     SrcP+1
                lda     L6C9B
                sta     SrcP
                lda     L6CA5,y
                sta     XLocDiv7
                sta     XLocation
                lda     L6CA9,y
                sta     YLoc
                sta     YLocation
                lda     #$01
                sta     BltBytes-1        ;** this could be left lower or right upper belt
spinBeltLower   jsr     BltBytes          ;Draw Stage 2 right belt lower roller
                ldy     Count38
                lda     L6C9E
                sta     Src_2+1
                lda     L6C9D
                sta     Src_2
                lda     L6CA0
                sta     SrcP+1
                lda     L6C9F
                sta     SrcP
                lda     L6CA7,y
                sta     XLocDiv7
                sta     XLocation
                lda     L6CAB,y
                sta     YLoc
                sta     YLocation
                lda     #$01
                sta     BltBytes-1
                jsr     BltBytes          ;Draw stage 2 right Belt upper
                dec     Count38
                ldy     Count38
                bpl     @_2               ;draw more
                lda     L6C9C
                sta     L6C9A
                lda     L6C9B
                sta     L6C99
                lda     L6CA0
                sta     L6C9E
                lda     L6C9F
                sta     L6C9D
                inc     L6CAD
                lda     L6CAD
                cmp     #$04
                bne     @_4
                lda     #$00
                sta     L6CAD
@_4             tay
                clc
                lda     #$a0
                adc     L6CA1,y
                sta     L6C9B
                lda     #$89
                adc     #$00
                sta     L6C9C
                clc
                lda     #$e0
                adc     L6CA1,y
                sta     L6C9F
                lda     #$89
                adc     #$00
                sta     L6CA0
                rts

s2SuckMagnetX   .dd1    $00
S2SuckMagnetY   .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
L6D68           .dd1    $00
L6D69           .dd1    $00
                .dd1    $00

s2MagnetUpd     lda     L6D69
                bne     @tstBoxState
                lda     #$01
                sta     L6D69
                lda     #$96
                sta     s2SuckMagnetX
                sta     S2SuckMagnetY+1
                lda     #$17
                sta     S2SuckMagnetY
                sta     S2SuckMagnetY+2
                lda     #$8b
                sta     L6D68
                lda     #$00
                sta     s2MagnetUpd-1
                jmp     _4

@tstBoxState    ldy     #$05
@LoopTest       lda     s2ToolboxState,y
                bne     ReturnPoint
                dey
                bpl     @LoopTest
_4              lda     S2SuckMagnetY+1
                sta     XLocation
                lda     S2SuckMagnetY+2
                sta     YLocation
                lda     s2SuckMagnetX
                sta     XLocDiv7
                lda     S2SuckMagnetY
                sta     YLoc
                lda     L6D68
                sta     Src_2+1
                lda     #$ba
                sta     SrcP+1
                jsr     XorPreshiftShape
                lda     #$ba
                sta     L6D68
                lda     s2SuckMagnetX
                sta     S2SuckMagnetY+1
                lda     S2SuckMagnetY
                sta     S2SuckMagnetY+2
                lda     s2MagnetUpd-1
                bne     GoRightMagnet
                dec     s2SuckMagnetX
                dec     s2SuckMagnetX
                lda     s2SuckMagnetX
                cmp     #$8c
                bne     ReturnPoint
                lda     #$01
                sta     s2MagnetUpd-1
ReturnPoint     rts

GoRightMagnet   inc     s2SuckMagnetX
                inc     s2SuckMagnetX
                lda     s2SuckMagnetX
                cmp     #$f0
                bne     ReturnPoint
                lda     #$00
                sta     s2MagnetUpd-1
                rts

L6DF8           .dd1    $00
L6DF9           .dd1    $00
L6DFA           .dd1    $00
L6DFB           .dd1    $00
L6DFC           .dd1    $00
L6DFD           .dd1    $00
L6DFE           .dd1    $00
L6DFF           .dd1    $00
L6E00           .dd1    $00
                .dd1    $20
                .dd1    $40
L6E03           .dd1    $38
L6E04           .dd1    $08
L6E05           .dd1    $12
L6E06           .dd1    $00
                .dd1    $00

TestS1Bell      lda     L6DF8
                beq     @_1
                jmp     from6e0d

@_1             lda     PlayerY
                sec
                sbc     #$10
                sta     L6E06
                lda     L6E03
                sec
                sbc     #$04
                cmp     PlayerX
                bcc     @_2
                rts

@_2             clc
                adc     #$08
                cmp     PlayerX
                bcs     @_3
                rts

@_3             lda     L6E05
                sec
                sbc     #$04
                cmp     L6E06
                bcc     @_4
                rts

@_4             clc
                adc     #$08
                cmp     L6E06
                bcs     HitSt1Bell
                rts

HitSt1Bell      lda     #$01
                sta     PointsToAdd+1
                jsr     UpdScore
                lda     #$14
                sta     L6DF9
                lda     #$00
                sta     L6DFA
                lda     #$01
                sta     L6DF8
                sta     L6DFB
                lda     #$88
                sta     L6DFF
                lda     #$80
                sta     L6DFE
                lda     #$88
                sta     L6DFD
                lda     #$60
                sta     L6DFC
                ldx     #$f9
                ldy     #$5e
                jsr     SNDRoutine?
                rts

from6e0d        lda     L6E04
                sta     XLocDiv7
                sta     XLocation
                lda     L6E05
                sta     YLoc
                sta     YLocation
                lda     L6DFF
                sta     Src_2+1
                lda     L6DFE
                sta     Src_2
                lda     L6DFD
                sta     SrcP+1
                lda     L6DFC
                sta     SrcP
                jsr     BltBytes
                lda     L6DFD
                sta     L6DFF
                lda     L6DFC
                sta     L6DFE
                lda     L6DFA
                bne     @_2
                dec     L6DFB
                lda     L6DFB
                bne     @_1
                lda     #$01
                sta     L6DFA
@_1             jmp     @_3

@_2             inc     L6DFB
                lda     L6DFB
                cmp     #$02
                bne     @_3
                lda     #$00
                sta     L6DFA
@_3             dec     L6DF9
                bpl     @_4
                lda     #$00
                sta     L6DF8
                jsr     L1BEB
@_4             ldy     L6DFB
                lda     #$60
                clc
                adc     L6E00,y
                sta     L6DFC
                lda     #$88
                adc     #$00
                sta     L6DFD
                rts

TbL6EEF         .dd1    $04
                .dd1    $1e
s3Cnt6ef1       .dd1    $15

s3AnimeINpoint  dec     s3Cnt6ef1
                beq     @_1
                rts

@_1             lda     #$28
                sta     s3Cnt6ef1
                ldy     #$01
                sty     Count38
@_2             lda     #$ab
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                lda     TbL6EEF,y
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$89
                sta     SrcP+1
                lda     #$20
                sta     SrcP
                lda     #$01
                sta     bltXor
                jsr     BitBlt1
                dec     Count38
                ldy     Count38
                bpl     @_2
                rts

                .dd1    $88
                .dd1    $a1
                .dd1    $09
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $09
                .dd1    $88
                .dd1    $a1
                .dd1    $09
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $09
                .dd1    $c6
                .dd1    $0e
                .dd1    $d0
                .dd1    $02
                .dd1    $e6
                .dd1    $0e
                .dd1    $a6
                .dd1    $0c
                .dd1    $bd
                .dd1    $00
                .dd1    $40
                .dd1    $85
                .dd1    $00
                .dd1    $bd
                .dd1    $c0
                .dd1    $40
                .dd1    $05
                .dd1    $02
                .dd1    $85
                .dd1    $01
                .dd1    $a2
                .dd1    $00
                .dd1    $a5
                .dd1    $10
                .dd1    $18
                .dd1    $69
                .dd1    $03
                .dd1    $a8
                .dd1    $e6
                .dd1    $07
                .dd1    $88
                .dd1    $a1
                .dd1    $07
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $07
                .dd1    $88
                .dd1    $a1
                .dd1    $07
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $07
                .dd1    $88
                .dd1    $a1
                .dd1    $07
                .dd1    $51
                .dd1    $00
                .dd1    $91
                .dd1    $00
                .dd1    $e6
                .dd1    $07
                .dd1    $c6
                .dd1    $0c
                .dd1    $d0
                .dd1    $02
                .dd1    $e6
                .dd1    $0c
                .dd1    $c6
                .dd1    $12
                .dd1    $f0
                .dd1    $03
                .dd1    $4c
                .dd1    $0f
                .dd1    $1f
                .dd1    $60
                .dd1    $11
                .dd1    $a0
                .dd1    $05
                .dd1    $d0
                .dd1    $0c
                .dd1    $a9
                .dd1    $1c
                .dd1    $a0
                .dd1    $01
                .dd1    $d0
                .dd1    $6a
                .dd1    $a9
                .dd1    $25
                .dd1    $a0
                .dd1    $02
                .dd1    $d0
                .dd1    $64
                .dd1    $85
                .dd1    $24
                .dd1    $a9
                .dd1    $01
                .dd1    $20
                .dd1    $5b
                .dd1    $fb
                .dd1    $a9
                .dd1    $a0
                .dd1    $20
                .dd1    $ed
                .dd1    $fd
                .dd1    $20
                .dd1    $ed
                .dd1    $fd
                .dd1    $c6
                .dd1    $24
                .dd1    $c6
                .dd1    $24
                .dd1    $20
                .dd1    $b0
                .dd1    $09
                .dd1    $e0
                .dd1    $02
                .dd1    $f0
                .dd1    $47
                .dd1    $c0
                .dd1    $04
                .dd1    $d0
                .dd1    $09
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $35
                .dd1    $c9
                .dd1    $23
                .dd1    $b0
                .dd1    $31
                .dd1    $c0
                .dd1    $05
                .dd1    $d0
                .dd1    $09
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $28
                .dd1    $c9
                .dd1    $10
                .dd1    $b0
                .dd1    $24
                .dd1    $c0
                .dd1    $01
                .dd1    $d0
                .dd1    $0d
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $30
                .dd1    $1b
                .dd1    $c9
                .dd1    $08
                .dd1    $b0
                .dd1    $17
                .dd1    $0a
                .dd1    $0a
                .dd1    $0a
                .dd1    $0a
                .dd1    $c0
                .dd1    $02
                .dd1    $d0
                .dd1    $0b
                .dd1    $ad
                .dd1    $2a
                .dd1    $0c
                .dd1    $c9
                .dd1    $01
                .dd1    $f0
                .dd1    $04
                .dd1    $c9
                .dd1    $02
                .dd1    $d0
                .dd1    $04
                .dd1    $99
                .dd1    $14
                .dd1    $0c
                .dd1    $60
                .dd1    $20
                .dd1    $3a
                .dd1    $ff
                .dd1    $4c
                .dd1    $4f
                .dd1    $0b
                .dd1    $4c
                .dd1    $a3
                .dd1    $0a
                .dd1    $4c
                .dd1    $4f
                .dd1    $0b
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
L7000           .dd1    $03
                .dd1    $00

drawLevelDigit  inc     L7000
                lda     L7000
                cmp     #$0a
                bcc     @_1
                lda     #$00
                sta     L7000
                inc     drawLevelDigit-1
                lda     drawLevelDigit-1
                cmp     #$0a
                bcc     drawLevelTenthDigit
                lda     #$00
                sta     drawLevelDigit-1
drawLevelTenthDigit lda #$26
                sta     XLocDiv7
                lda     #$70
                sta     YLoc
                ldy     drawLevelDigit-1
                jsr     @_2
@_1             lda     #$27
                sta     XLocDiv7
                lda     #$70
                sta     YLoc
                ldy     L7000
@_2             tya
                ora     #$30
                sta     L7052
                lda     XLocDiv7
                sta     L7050
                lda     YLoc
                sta     L7051
                lda     #$70
                ldx     #$50
                jmp     PrintNumChar

L7050           .dd1    $00
L7051           .dd1    $00
L7052           .dd1    $30
                .dd1    $00

IndirectDrawTitle jsr   HGRdo
                lda     #$19
                ldx     #$16
                jsr     PrintNumChar
                jsr     drawHardHatMackLogp
                lda     #$00
                sta     L45FF
                lda     #$90
                sta     YLoc
                lda     #$04
                sta     XLocDiv7
                jsr     drawRightPlatform
                lda     #$90
                sta     YLoc
                lda     #$0e
                sta     XLocDiv7
                jsr     drawLeftPlatform
                lda     #$18
                sta     XLocDiv7
                lda     #$90
                sta     YLoc
                jsr     drawLeftPlatform
                ldx     #$8a
                ldy     #$88
                lda     #$94
                jsr     L1A3F
                ldx     #$28
                ldy     #$88
                lda     #$a8
                jsr     L1A3F
                ldx     #$e8
                ldy     #$88
                lda     #$ac
                jsr     L1A3F
                jsr     L46D7
                jsr     TitleWait?
                jsr     encryptJmp
                sta     L0400+154
                rts

drawHardHatMackLogp lda #$07
                sta     XLocDiv7          ;StartXdiv7
                clc
                adc     #25               ;26 byte x 21 height
                sta     WidthDiv7
                lda     #$20
                sta     YLoc              ;start Y from bottom
                sec
                sbc     #20
                sta     Ycount
                lda     #>LogoHardHat
                sta     SrcP+1
                lda     #<LogoHardHat
                sta     SrcP
                jsr     BitBlt1
                rts

s3CheckCompleted ldy    #$05
@Loop           lda     s3ItemState,y
                bne     L70FA
                dey
                bpl     @Loop
                lda     s3NailToPotPoint
                beq     @_2
                rts

@_2             lda     #$01
                sta     vDoneFlag
                sta     generalCounter
                jsr     EndBonusPlayMusic
                jsr     protection_CheckSum
                ldy     #>MusicStage3Done
                ldx     #<MusicStage3Done
                jsr     playMusic
                jsr     drawLevelDigit
                jmp     St1_1

L70FA           rts

L70FB           .dd1    $68
                .dd1    $64
                .dd1    $60
                .dd1    $5c
                .dd1    $58
                .dd1    $56
                .dd1    $56
                .dd1    $56
                .dd1    $56
                .dd1    $56
                .dd1    $56
                .dd1    $56
                .dd1    $58
                .dd1    $5c
                .dd1    $62
                .dd1    $68
                .dd1    $70
                .dd1    $78
L710D           .dd1    $8f
                .dd1    $93
                .dd1    $98
                .dd1    $9f
                .dd1    $a6
                .dd1    $ac
                .dd1    $af
                .dd1    $b3
                .dd1    $b7
                .dd1    $b3
                .dd1    $af
                .dd1    $ac
                .dd1    $a6
                .dd1    $a3
                .dd1    $9f
                .dd1    $9d
                .dd1    $9d
                .dd1    $9f
L711F           .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $01
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $02
                .dd1    $01
s3TblDrown      .dd2    $a200             ;macJumpLeftSprite pointer
                .dd2    $a400             ;-- mackFrontSprite
                .dd2    $a000             ;--macJumpRightSprite

s3OffTallBelt   lda     s3vPlayerBeltVar
                cmp     #$51
                bcs     @_1
                rts

@_1             ldy     #$00              ;FALL OFF RAIL AND DROWN IN MIDDLE POOL
                sty     Count38
@_2             lda     L70FB,y
                sta     PlayerX
                lda     L710D,y
                sta     PlayerY
                lda     L711F,y
                asl     A
                tay
                iny
                lda     s3TblDrown,y
                sta     SrcP+1
                sta     AddrHi
                jsr     xDrawPlayer
                lda     s3PlayerXover7F
                sta     v650d
                jsr     JumpPadAnimation
                lda     #$90
                jsr     MON_WAIT
                inc     Count38
                ldy     Count38
                cpy     #$12
                bne     @_2
                lda     #$02
                sta     s3PlayerXover7F
                lda     #$01
                sta     lifeRelated
                jmp     setToolbox

flag7193        .dd1    $00

tstAddLIFE      lda     flag7193
                beq     @_1
                rts

@_1             lda     Score+3
                cmp     #$07
                beq     @_2
                rts

@_2             lda     #$01
                sta     flag7193
                inc     LIFE
                jmp     PrtLIFE

protection_CheckSum lda #$03
                sta     Count38
@_1             lda     #$ff
                jsr     MON_WAIT
                dec     Count38
                bpl     @_1
                lda     #$7b
                sta     pointer5L
                lda     #$4b
                sta     pointer5Hi
                lda     #$0f
                jsr     checksum1
                cmp     #$ac
                beq     @_2
                rts

@_2             jmp     $c600

                .dd1    $a0
                .dd1    $ff
                .dd1    $b9
                .dd1    $00
                .dd1    $b6
                .dd1    $f0
                .dd1    $05
                .dd1    $09
                .dd1    $80
                .dd1    $99
                .dd1    $00
                .dd1    $b6
                .dd1    $88
                .dd1    $d0
                .dd1    $f3
                .dd1    $a0
                .dd1    $ff
                .dd1    $b9
                .dd1    $00
                .dd1    $b7
                .dd1    $f0
                .dd1    $05
                .dd1    $09
                .dd1    $80
                .dd1    $99
                .dd1    $00
                .dd1    $b7
                .dd1    $88
                .dd1    $d0
                .dd1    $f3
                .dd1    $60

Wait3           lda     #$03
                sta     Count38
wait3_2         lda     #$ff
                jsr     MON_WAIT
                dec     Count38
                bpl     wait3_2
                rts

TitleWait?      lda     #$40
                sta     Count38
Titie_2         lda     #$ff
                jsr     MON_WAIT
                jsr     Key1
                jsr     Key2
                lda     v80e
                beq     Title_3
                lda     isNoSound1
                sta     isNoSound2
                jmp     L0856

Title_3         dec     Count38
                bpl     Titie_2
                rts

isInGameLoop    .dd1    $01
DemoTimer       .dd1    $ff
NextStage       .dd1    $01               ;Title is 1 Stage1 is 2 Stage2 is 3 Stage3 is 4
indStageJump    .dd2    St3_1
                .dd2    IndirectDrawTitle
                .dd2    St1_1
                .dd2    St2_1
L7219           .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $01
                .dd1    $01
                .dd1    $02
                .dd1    $02
isNoSound1      .dd1    $00

setInGameLoop   lda     #$01
                sta     EnmCount
                sta     Var2
                sta     isInGameLoop      ;Yes, in game Loop
                lda     #$00
                sta     doS2Lift-1
                lda     isNoSound1
                sta     isNoSound2
                lda     #$ff
                sta     DemoTimer
                inc     NextStage
                lda     NextStage
                cmp     #$04
                bne     L724C
                lda     #$00
                sta     NextStage
L724C           asl     A
                tay
                lda     indStageJump,y
                sta     XLocDiv7Ptr
                lda     indStageJump+1,y
                sta     XLocDiv7Ptr+1
                lda     L7219,y
                sta     L7000
                jmp     (XLocDiv7Ptr)

checkStart      lda     isInGameLoop
                bne     @_1
                rts

@_1             dec     DemoTimer
                beq     @_3
                lda     #$01
                sta     Var2
                lda     #$00
                sta     doS2Lift-1
                jsr     Key2              ;check ctrl C
                jsr     Key1
                lda     v80e
                beq     @_2
                lda     isNoSound1
                sta     isNoSound2
                jmp     L0856

@_2             rts

@_3             jmp     L084B

                .dd1    $00
                .dd1    $00
jmpTbl          .dd2    St1_1
                .dd2    St1_1
                .dd2    St2_1
                .dd2    St3_1

tesrKeyStageSelect cmp  #$b2              ;test key 1 2 3 to select stage
                beq     @_1
                cmp     #$b3
                beq     @_1
                cmp     #$b1
                beq     @_1
                rts

@_1             and     #$0f
                asl     A
                tay
                lda     jmpTbl,y
                sta     goStage+1
                lda     jmpTbl+1,y
                sta     goStage+2
                sta     KBDSTRB
                rts

Key2            lda     KBD
                cmp     #$83              ;Control-C ?
                beq     configKeyobard
                rts

configKeyobard  jsr     HGRdo
                lda     #$73
                ldx     #$ba
                jsr     PrintNumChar
                lda     #$73
                ldx     #$cf
                jsr     PrintNumChar
                lda     #$00
                sta     isKeyLEFT+1
                sta     isKeyRIght+1
                sta     isKeyA+1
                sta     isSpace+1
                sta     isKeyZ+1
                sta     L1BB5+1
                lda     #$73
                ldx     #$e0
                jsr     PrintNumChar
                jsr     getAkey
                sta     isKeyLEFT+1
                lda     #$73
                ldx     #$e9
                jsr     PrintNumChar
                jsr     getAkey
                sta     isKeyRIght+1
                lda     #$73
                ldx     #$f2
                jsr     PrintNumChar
                jsr     getAkey
                sta     isKeyA+1
                lda     #$73
                ldx     #$fb
                jsr     PrintNumChar
                jsr     getAkey
                sta     isKeyZ+1
                lda     #$74
                ldx     #$04
                jsr     PrintNumChar
                jsr     getAkey
                sta     isSpace+1
                lda     #$74
                ldx     #$0d
                jsr     PrintNumChar
                jsr     getAkey
                sta     L1BB5+1
                lda     #$74
                ldx     #$16
                jsr     PrintNumChar
                bit     KBDSTRB
Key3            lda     KBD
                bpl     Key3
                bit     KBDSTRB
                jmp     L082D

getAkey         sta     KBDSTRB
Key5            lda     KBD
                bpl     Key5
                and     #$7f
                cmp     #$1b              ;is ESCaple
                beq     spk1
                cmp     #$03              ;is Ctrl-C
                beq     spk1
                cmp     #$0a              ;is Ctrl-J
                beq     spk1
                cmp     #$0b              ;is Ctrl-K
                beq     spk1
                cmp     #$30              ;is Key 0
                beq     spk1
                cmp     #$13              ;is Ctrl-S
                beq     spk1
                cmp     #$12              ;is Ctrl-R
                beq     spk1
                cmp     #$1e              ;is Ctrl-^
                beq     spk1
                cmp     #$1d              ;is Ctrl-]
                beq     spk1
                ora     #$80
                cmp     isKeyLEFT+1       ;is <- Hex 88
                beq     spk1
                cmp     isKeyRIght+1      ;is -> , Hex 95
                beq     spk1
                cmp     isKeyA+1          ;is A, Hex C1
                beq     spk1
                cmp     isKeyZ+1          ;is Z, Hex DA
                beq     spk1
                cmp     isSpace+1         ;is Space, Hex A0
                beq     spk1
                cmp     L1BB5+1           ;is Return, Hex 8d
                beq     spk1
                rts

SpkCount        .dd1    $00

spk1            ldx     #$05              ;MakeLazerNoise
                jsr     spk2
                jmp     getAkey

spk2            nop
                stx     SpkCount
spk3            ldx     #$20
spk4            txa
                tay
spk5            dey
                bne     spk5
                bit     SPKR
                inx
                cpx     #$a0
                bne     spk4
                dec     SpkCount
                bne     spk3
                rts

                .dd1    $0b
                .dd1    $00
                .zstr   ↑“CONFIGURATION MENU”
                .dd1    $00
                .dd1    $28
                .zstr   ↑“PRESS KEY FOR ”
                .dd1    $0e
                .dd1    $28
                .zstr   ↑“LEFT :”
                .dd1    $0e
                .dd1    $28
                .zstr   ↑“RIGHT:”
                .dd1    $0e
                .dd1    $28
                .zstr   ↑“UP:   ”
                .dd1    $0e
                .dd1    $28
                .zstr   ↑“DOWN: ”
                .dd1    $0e
                .dd1    $28
                .zstr   ↑“JUMP: ”
                .dd1    $0e
                .dd1    $28
                .zstr   ↑“DROP: ”
                .dd1    $00
                .dd1    $28
                .zstr   ↑“PRESS ANY KEY           ”

Enc7431         lda     #$00
                sta     pointer5L
                lda     #$05
                sta     pointer5Hi
                lda     #$ff
                jsr     checksum1
                cmp     #$74
                bne     Reboot1
                lda     #<checksum1       ;Checksum itself
                sta     pointer5L
                lda     #>checksum1
                sta     pointer5Hi
                lda     #$0f
                jsr     checksum1
                cmp     #$94
                bne     Reboot1
                rts

Reboot1         jmp     $c600

NoteToPlay      .dd1    $00
playDuration    .dd1    $00
NotePlayPosition .dd1   $00
                .dd1    $c1
                .dd1    $b7
                .dd1    $ac
                .dd1    $a2
                .dd1    $99
                .dd1    $90
                .dd1    $88
                .dd1    $80
                .dd1    $79
                .dd1    $72
                .dd1    $6c
                .dd1    $65
                .dd1    $60
                .dd1    $5a
                .dd1    $56
                .dd1    $50
                .dd1    $4c
                .dd1    $48
                .dd1    $43
                .dd1    $40
                .dd1    $3c
                .dd1    $38
                .dd1    $35
                .dd1    $32
                .dd1    $2f

PlayNote        lda     SPKR
@_1             dey
                bne     @_2
                dec     playDuration
                beq     @_3
@_2             dex
                bne     @_1
                ldx     NoteToPlay
                jmp     PlayNote

@_3             rts

MusicDeath      .dd1    $11
                .dd1    $60
                .dd1    $0c
                .dd1    $30
                .dd1    $0c
                .dd1    $30
                .dd1    $0d
                .dd1    $60
                .dd1    $0f
                .dd1    $60
                .dd1    $11
                .dd1    $60
                .dd1    $0c
                .dd1    $60
                .dd1    $11
                .dd1    $60
                .dd1    $00
MusicStage1Done .dd1    $0d
                .dd1    $60
                .dd1    $08
                .dd1    $30
                .dd1    $08
                .dd1    $30
                .dd1    $05
                .dd1    $60
                .dd1    $06
                .dd1    $30
                .dd1    $06
                .dd1    $30
                .dd1    $08
                .dd1    $60
                .dd1    $08
                .dd1    $60
                .dd1    $01
                .dd1    $b0
                .dd1    $00
                .dd1    $00
MusicStage2Done .dd1    $14
                .dd1    $30
                .dd1    $14
                .dd1    $30
                .dd1    $11
                .dd1    $30
                .dd1    $11
                .dd1    $30
                .dd1    $12
                .dd1    $30
                .dd1    $12
                .dd1    $30
                .dd1    $0f
                .dd1    $30
                .dd1    $0f
                .dd1    $30
                .dd1    $0d
                .dd1    $30
                .dd1    $14
                .dd1    $30
                .dd1    $12
                .dd1    $30
                .dd1    $11
                .dd1    $30
                .dd1    $0f
                .dd1    $30
                .dd1    $11
                .dd1    $30
                .dd1    $0d
                .dd1    $60
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $00
TitleMusic      .dd1    $0d               ;start music , tune, length
                .dd1    $30
                .dd1    $12
                .dd1    $90
                .dd1    $11
                .dd1    $30
                .dd1    $0f
                .dd1    $90
                .dd1    $12
                .dd1    $30
                .dd1    $14
                .dd1    $30
                .dd1    $16
                .dd1    $30
                .dd1    $14
                .dd1    $30
                .dd1    $12
                .dd1    $30
                .dd1    $11
                .dd1    $b0
                .dd1    $00               ;end of start music
MusicStage3Done .dd1    $0d               ;MusicStage3Done
                .dd1    $30
                .dd1    $14
                .dd1    $30
                .dd1    $12
                .dd1    $30
                .dd1    $0f
                .dd1    $30
                .dd1    $11
                .dd1    $30
                .dd1    $0d
                .dd1    $30
                .dd1    $0f
                .dd1    $30
                .dd1    $0c
                .dd1    $30
                .dd1    $0d
                .dd1    $30
                .dd1    $08
                .dd1    $30
                .dd1    $0a
                .dd1    $30
                .dd1    $0c
                .dd1    $30
                .dd1    $0d
                .dd1    $90
                .dd1    $00
MusicLiftToGO   .dd1    $20               ;?
                .dd1    $18
                .dd1    $18
                .dd1    $18
                .dd1    $19
                .dd1    $18
                .dd1    $00

playMusic       lda     isNoSound2
                beq     @_1
                rts

@_1             sty     PointerToMusic+1
                stx     PointerToMusic
                ldy     #$00
                sty     NotePlayPosition
@_2             lda     NotePlayPosition
                asl     A
                tay
                lda     (PointerToMusic),y
                beq     @_3
                tax
                lda     NotePlayPosition+1,x ;get the Note
                sta     NoteToPlay
                iny
                lda     (PointerToMusic),y ;get Note Duration
                sta     playDuration
                inc     NotePlayPosition
                jsr     PlayNote          ;play that Note
                jmp     @_2               ;play next note

@_3             rts

s2StoveVarX     .dd1    $00
                .dd1    $20
                .dd1    $40
                .dd1    $20
s2StoveVar6     .dd1    $00
s2StoveVar5     .dd1    $00
s2StoveVar4     .dd1    $00
s2StoveVar3     .dd1    $00
S2StoveVar2     .dd1    $00
s2StoveCounter  .dd1    $01

doSt2StoveFire  dec     s2StoveCounter
                beq     @_1
                rts

@_1             lda     #$02              ;animation on every 2 frame
                sta     s2StoveCounter
                lda     S2StoveVar2
                bne     @_2
                lda     #$7c
                sta     s2StoveVar5
                lda     #$c0
                sta     s2StoveVar6
                lda     #$8b
                sta     s2StoveVar3
                lda     #$00
                sta     s2StoveVar4
                lda     #$01
                sta     S2StoveVar2
@_2             lda     #$24
                sta     XLocDiv7
                sta     XLocation
                lda     #$2f
                sta     YLoc
                sta     YLocation
                lda     s2StoveVar3
                sta     Src_2+1
                lda     s2StoveVar4
                sta     Src_2
                lda     s2StoveVar5
                sta     SrcP+1
                lda     s2StoveVar6
                sta     SrcP
                jsr     BltBytes          ;BLT Stage 2 Stove Fire
                lda     s2StoveVar5
                sta     s2StoveVar3
                lda     s2StoveVar6
                sta     s2StoveVar4
                jsr     shiftBytes        ;Erase and draw flame
                and     #$03
                tay
                clc
                lda     #$c0
                adc     s2StoveVarX,y
                sta     s2StoveVar6
                lda     #$7c
                adc     #$00
                sta     s2StoveVar5
                rts

L75AE           .dd1    $00
L75AF           .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
s3HbeltWait     .dd1    $02

****************************************
* Stage 3 Anime the Horizontal Belt    *
*                                      *
****************************************
* If Wait is over then Animate the     *
* belt                                 *
****************************************
s3AnimeHBelt    dec     s3HbeltWait
                beq     @_1
                rts

@_1             lda     #$02
                sta     s3HbeltWait
                lda     #$00
                sta     OrByte
                lda     L75AE
                bne     @_4
                lda     #$01
                sta     L75AE
                ldy     #$0a
                sty     Count38
                lda     #$00
                sta     L39
@_2             sta     L75AF,y
                clc
                adc     #$04
                sta     L39
                lda     L75AF,y
                tax
                lda     L4BF6,x
                sec
                sbc     #$1c
                sta     XLocDiv7
                lda     L4C22,x
                sta     YLoc
                jsr     drawRod
                lda     L39
                dec     Count38
                ldy     Count38
                bpl     @_2
                rts

@_4             ldy     #$0a
                sty     Count38
@_5             lda     L75AF,y
                tax
                lda     L4BF6,x
                sec
                sbc     #$1c
                sta     XLocDiv7
                lda     L4C22,x
                sta     YLoc
                jsr     drawRod
                dec     Count38
                ldy     Count38
                bpl     @_5
                ldy     #$0a
                sty     Count38
@_6             clc
                lda     L75AF,y
                adc     #$01
                cmp     #$2b
                bne     @_7
                lda     #$00
@_7             sta     L75AF,y
                tax
                lda     L4BF6,x
                sec
                sbc     #$1c
                sta     XLocDiv7
                lda     L4C22,x
                sta     YLoc
                jsr     drawRod
                dec     Count38
                ldy     Count38
                bpl     @_6
                rts

L7650           .dd1    $00
L7651           .dd1    $00
L7652           .dd1    $00
L7653           .dd1    $00
L7654           .dd1    $00
L7655           .dd1    $00
                .dd1    $20
                .dd1    $40
                .dd1    $60
L7659           .dd1    $4c
                .dd1    $96
s3v765b         .dd1    $02

s3AnimeTallRollingPoint dec s3v765b
                beq     L7662
                rts

L7662           lda     #$02
                sta     s3v765b
                ldy     #$01
                sty     Count38
L766B           lda     L7653
                sta     Src_2+1
                lda     L7652
                sta     Src_2
                lda     L7651
                sta     SrcP+1
                lda     L7650
                sta     SrcP
                lda     #$11
                sta     XLocDiv7
                sta     XLocation
                lda     L7659,y
                sta     YLoc
                sta     YLocation
                jsr     BltBytes
                dec     Count38
                ldy     Count38
                bpl     L766B
                lda     L7651
                sta     L7653
                lda     L7650
                sta     L7652
                inc     L7654
                lda     L7654
                cmp     #$04
                bne     L76B0
                lda     #$00
                sta     L7654
L76B0           tay
                clc
                lda     #$70
                adc     L7655,y
                sta     L7650
                lda     #$83
                adc     #$00
                sta     L7651
                rts

L76C2           .dd1    $00
L76C3           .dd1    $00
L76C4           .dd1    $00
L76C5           .dd1    $00
L76C6           .dd1    $00
L76C7           .dd1    $00
L76C8           .dd1    $00
L76C9           .dd1    $00
L76CA           .dd1    $0a
L76CB           .dd1    $00
L76CC           .dd1    $00
L76CD           .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $00
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20
                .dd1    $20

doSt2Dropping   ldy     #$01
@_1             lda     L77AE,y
                beq     @_2
                dey
                bpl     @_1
                rts

@_2             dec     L76CA
                beq     @_3
                rts

@_3             lda     L76CB
                bne     @_4
                sty     L76CC
                lda     #$01
                sta     L76CB
                lda     #$04
                sta     L76C2
                sta     L76C4
                lda     #$a6
                sta     L76C3
                sta     L76C5
                lda     #$7e
                sta     L76C7
                lda     #$e0
                sta     L76C6
                lda     #$8b
                sta     L76C9
                lda     #$00
                sta     L76C8
@_4             lda     L76C2
                sta     XLocDiv7
                sta     XLocation
                lda     L76C3
                sta     YLoc
                lda     L76C5
                sta     YLocation
                lda     L76C9
                sta     Src_2+1
                lda     L76C8
                sta     Src_2
                lda     L76C3
                and     #$0f
                tay
                clc
                lda     #$e0
                adc     L76CD,y
                sta     SrcP
                sta     L76C6
                lda     #$7e
                adc     #$00
                sta     SrcP+1
                sta     L76C7
                jsr     BltBytes          ;draw St2 dropping
                lda     L76C3
                cmp     #$b4
                beq     @_6
                sta     L76C5
                inc     L76C3
                lda     L76C7
                sta     L76C9
                lda     L76C6
                sta     L76C8
                lda     #$01
                sta     L76CA
                rts

@_6             lda     L76C7
                sta     SrcP+1
                lda     L76C6
                sta     SrcP
                lda     #$8b
                sta     Src_2+1
                lda     #$00
                sta     Src_2
                lda     L76C2
                sta     XLocDiv7
                sta     XLocation
                lda     L76C3
                sta     YLoc
                sta     YLocation
                jsr     BltBytes
                lda     #$00
                sta     L76CB
                ldy     L76CC
                lda     #$01
                sta     L77AE,y
                lda     #$0a
                sta     L76CA
                rts

L77AC           .dd1    $00
                .dd1    $00
L77AE           .dd1    $00
                .dd1    $00
tbls2dumpX      .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
tbls2dumpY      .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
L77BB           .dd1    $00
L77BC           .dd1    $00
                .dd1    $00

doSt2DropToPot  ldy     #$01
@_1             lda     L77AE,y
                beq     @_2
                sty     doSt2DropToPot-1
                jsr     @_3
                ldy     doSt2DropToPot-1
@_2             dey
                bpl     @_1
                rts

@_3             lda     L77BB,y
                bne     @_4
                lda     #$01
                sta     L77BB,y
                lda     #$23
                sta     L77AC,y
                lda     #$8b
                sta     Src_2+1
                lda     #$b8
                sta     SrcP+1
                ldx     #$23
                lda     TblS2UpRailX,x
                sta     XLocDiv7
                sta     XLocation
                sta     tbls2dumpX,y
                sta     tbls2dumpX+2,y
                lda     TblS2UpRailY,x
                sta     YLoc
                sta     YLocation
                sta     tbls2dumpY,y
                sta     tbls2dumpY+2,y
                jsr     XorPreshiftShape
                jmp     @_5

@_4             lda     tbls2dumpX+2,y
                sta     XLocation
                lda     tbls2dumpY+2,y
                sta     YLocation
                lda     #$b8
                sta     SrcP+1
                sta     Src_2+1
                lda     tbls2dumpX,y
                sta     XLocDiv7
                lda     tbls2dumpY,y
                sta     YLoc
                jsr     XorPreshiftShape  ;draw s2 dropping to pot
@_5             ldx     doSt2DropToPot-1
                dec     L77AC,x
                bmi     @_6
                lda     L77AC,x
                tay
                lda     tbls2dumpX,x
                sta     tbls2dumpX+2,x
                lda     tbls2dumpY,x
                sta     tbls2dumpY+2,x
                lda     TblS2UpRailX,y
                sta     tbls2dumpX,x
                lda     TblS2UpRailY,y
                sta     tbls2dumpY,x
                rts

@_6             lda     #$00
                sta     L77BB,x
                sta     L77AE,x
                lda     tbls2dumpX,x
                sta     XLocDiv7
                sta     XLocation
                lda     tbls2dumpY,x
                sta     YLoc
                sta     YLocation
                lda     #$b8
                sta     SrcP+1
                lda     #$8b
                sta     Src_2+1
                jsr     XorPreshiftShape
                rts

S2PressV5       .dd1    $00
S2Pv8           .dd1    $00
S2PressVar1     .dd1    $00
                .dd1    $00
S2PressVar2     .dd1    $00
S2PressVar3     .dd1    $01
                .dd1    $06
                .dd1    $00
S2PressVar4     .dd1    $00
S2PressV6       .dd1    $00
S2Presser_XByte .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

s2_787d         lda     S2PressVar3
                beq     @_1
                dec     S2PressVar3
                rts

@_1             lda     S2PressVar1
                beq     @_2
                lda     S2PressV5
                sta     S2Pv8
                sta     S2PressVar1+1
                clc
                adc     #$04
                sta     S2PressV5
                sta     S2PressVar2
                jmp     @_3

@_2             lda     S2PressV5
                sta     S2Pv8
                sta     S2PressVar1+1
                sec
                sbc     #$04
                sta     S2PressV5
                sta     S2PressVar2
@_3             jsr     doSt2Press
                jsr     pressTHing2
                lda     S2PressVar1
                bne     @_4
                lda     S2PressV5
                cmp     S2PressVar4
                bne     @_exit
                lda     #$01
                sta     S2PressVar1
                lda     #$10
                sta     S2PressVar3
                rts

@_4             lda     S2PressV5
                cmp     S2PressV6
                bne     @_exit
                lda     #$00
                sta     S2PressVar1
                lda     ZeroIfStandStill
                bne     @_exit
                ldy     #$5e
                ldx     #$f1
                jsr     SNDRoutine?
@_exit          rts

doSt2Press      lda     S2Presser_XByte
                sta     XLocDiv7
                sta     XLocation
                lda     S2PressV5
                sta     YLoc
                lda     S2Pv8
                sta     YLocation
                lda     #>s3Stamper
                sta     SrcP+1
                sta     Src_2+1
                lda     #<s3Stamper
                sta     SrcP
                sta     Src_2
                jsr     BltBytes          ;Stage 2 right Pressing thing
                rts

pressTHing2     lda     S2Presser_XByte+3
                sta     Yline
                lda     S2Presser_XByte+1
                sta     StartLineByte
                sta     EndLineByte
                lda     S2PressVar1+1
                sec
                sbc     S2PressVar3+1
                sta     Ything2
                jsr     drawGroundLine
                lda     S2Presser_XByte+3
                sta     Yline
                lda     S2Presser_XByte+1
                sta     StartLineByte
                sta     EndLineByte
                lda     S2PressVar2
                sec
                sbc     S2PressVar3+1
                sta     Ything2
                jsr     drawGroundLine
                lda     S2Presser_XByte+3
                sta     Yline
                lda     S2Presser_XByte+2
                sta     StartLineByte
                sta     EndLineByte
                lda     S2PressVar1+1
                sec
                sbc     S2PressVar3+1
                sta     Ything2
                jsr     drawGroundLine
                lda     S2Presser_XByte+3
                sta     Yline
                lda     S2Presser_XByte+2
                sta     StartLineByte
                sta     EndLineByte
                lda     S2PressVar2
                sec
                sbc     S2PressVar3+1
                sta     Ything2
                jsr     drawGroundLine
                rts

S2LiftY         .dd1    $00
S2LiftThing2    .dd1    $00
S2thingXXX      .dd1    $00
S2LiftDirection .dd1    $00
                .dd1    $40
                .dd1    $00
                .dd1    $00
                .dd1    $60
L7984           .dd1    $00
                .dd1    $00

doS2Lift        lda     doS2Lift-1
                beq     @_1
                rts

@_1             lda     L7984
                beq     @_2
                dec     L7984
                rts

@_2             lda     S2LiftDirection
                bne     @_3
                jsr     @_7
                dec     S2LiftThing2
                jmp     @_4

@_3             inc     S2LiftThing2
@_4             jsr     DrawS2Lift
                lda     #$00
                sta     OrByte
                lda     S2LiftThing2
                sta     S2thingXXX
                lda     S2LiftDirection
                bne     @_6
                lda     S2LiftThing2
                cmp     #$4f
                bne     @_5
                lda     #$01
                sta     S2LiftDirection
                lda     #$0a
                sta     L7984
@_5             rts

@_6             lda     S2LiftThing2
                cmp     #$a8
                bne     @_7
                lda     #$00
                sta     S2LiftDirection
                lda     #$0a
                sta     L7984
@_7             lda     #$7c
                sta     XLocDiv7
                lda     S2LiftThing2
                sec
                sbc     #$08
                sta     YLoc
                jsr     drawRod
                rts

DrawS2Lift      lda     #$0e
                sta     Count38
                ldy     #$03
                sty     L39
@_1             ldy     L39
                lda     Count38
                sta     XLocDiv7
                sta     XLocation
                lda     #$e0
                clc
                adc     S2LiftDirection+1,y
                sta     SrcP
                sta     Src_2
                lda     #$7f
                adc     #$00
                sta     SrcP+1
                sta     Src_2+1
                lda     S2LiftThing2
                sta     YLoc
                lda     S2thingXXX
                sta     YLocation
                lda     #$01
                sta     BltBytes-1
                jsr     BltBytes
                inc     Count38
                inc     Count38
                dec     L39
                bpl     @_1
                lda     S2LiftThing2
                sec
                sbc     #$08
                sta     S2LiftY
                rts

S2QC            .dd1    $00
s2QQ            .dd1    $10
                .dd1    $00
                .dd1    $20

s2LiftMotor     dec     s2QQ
                beq     @_1
                rts

@_1             lda     #$0a
                sta     s2QQ
                lda     S2QC
                beq     @_2
                lda     #$00
                sta     S2QC
                jmp     @_3

@_2             lda     #$01
                sta     S2QC
@_3             lda     #$0e
                sta     XLocDiv7
                clc
                adc     #$01
                sta     WidthDiv7
                lda     #$27
                sta     YLoc
                sec
                sbc     #$10
                sta     Ycount
                ldy     S2QC
                lda     #$7e
                sta     SrcP+1
                clc
                lda     #$20
                adc     s2QQ+1,y
                sta     SrcP
                jsr     BitBlt1
                rts

L7A7A           .dd1    $00
L7A7B           .dd1    $00
L7A7C           .dd1    $00
L7A7D           .dd1    $00
L7A7E           .dd1    $00
L7A7F           .dd1    $00
L7A80           .dd1    $00
                .dd1    $20
s2TNTAnimateCount .dd1  $01

s2UpdateTNT     dec     s2TNTAnimateCount
                beq     @_a
                rts

@_a             lda     #$02
                sta     s2TNTAnimateCount
                lda     L7A7A
                bne     @_2
                lda     #$1a
                sta     XLocDiv7
                sta     XLocation
                lda     #$bc
                sta     YLoc
                sta     YLocation
                lda     #$87
                sta     SrcP+1
                sta     L7A7E
                lda     #$40
                sta     SrcP
                sta     L7A7D
                lda     #$8b
                sta     Src_2+1
                lda     #$00
                sta     Src_2
                jsr     BltBytes          ;draw TNT
                lda     #$01
                sta     L7A7A
                lda     #$87
                sta     L7A7C
                lda     #$60
                sta     L7A7B
                rts

@_2             lda     #$1a
                sta     XLocDiv7
                sta     XLocation
                lda     #$bc
                sta     YLoc
                sta     YLocation
                lda     L7A7E
                sta     Src_2+1
                lda     L7A7D
                sta     Src_2
                lda     L7A7C
                sta     SrcP+1
                lda     L7A7B
                sta     SrcP
                jsr     BltBytes          ;draw stage2 lower left red explosive
                lda     L7A7C
                sta     L7A7E
                lda     L7A7B
                sta     L7A7D
                lda     L7A7F
                eor     #$01
                sta     L7A7F
                tay
                clc
                lda     #$40
                adc     L7A80,y
                sta     L7A7B
                lda     #$87
                adc     #$00
                sta     L7A7C
                rts

                .dd1    $62
                .dd1    $b9
                .dd1    $bb
                .dd1    $1e
                .dd1    $85
                .dd1    $0b
                .dd1    $8d
                .dd1    $f3
                .dd1    $62
                .dd1    $b9
                .dd1    $c1
                .dd1    $1e
                .dd1    $85
                .dd1    $0c
                .dd1    $8d
                .dd1    $f4
                .dd1    $62
                .dd1    $20
                .dd1    $6a
                .dd1    $63
                .dd1    $4c
                .dd1    $3e
                .dd1    $63
                .dd1    $ac
                .dd1    $f0
                .dd1    $62
                .dd1    $b9
                .dd1    $c7
                .dd1    $1e
                .dd1    $85
                .dd1    $0b
                .dd1    $8d
                .dd1    $f3
                .dd1    $62
                .dd1    $b9
                .dd1    $cd
                .dd1    $1e
                .dd1    $85
                .dd1    $0c
                .dd1    $8d
                .dd1    $f4
                .dd1    $62
                .dd1    $20
                .dd1    $6a
                .dd1    $63
                .dd1    $ce
                .dd1    $f0
                .dd1    $62
                .dd1    $30
                .dd1    $01
                .dd1    $60
                .dd1    $a0
                .dd1    $5f
                .dd1    $a2
                .dd1    $0b
                .dd1    $20
                .dd1    $a3
                .dd1    $5d
                .dd1    $a9
                .dd1    $00
                .dd1    $8d
                .dd1    $ef
                .dd1    $62
                .dd1    $a9
                .dd1    $05
                .dd1    $8d
                .dd1    $f0
                .dd1    $62
                .dd1    $ad
                .dd1    $f3
                .dd1    $62
                .dd1    $85
                .dd1    $0b
                .dd1    $ad
                .dd1    $f4
                .dd1    $62
                .dd1    $85
                .dd1    $0c
                .dd1    $ac
                .dd1    $9b
                .dd1    $61
                .dd1    $a9
                .dd1    $00
                .dd1    $99
                .dd1    $35
                .dd1    $55
                .dd1    $4c
                .dd1    $6a
                .dd1    $63
                .dd1    $a9
                .dd1    $15
                .dd1    $85
                .dd1    $08
                .dd1    $a9
                .dd1    $90
                .dd1    $85
                .dd1    $07
                .dd1    $20
                .dd1    $a4
                .dd1    $15
                .dd1    $60
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $ad
                .dd1    $75
                .dd1    $1b
                .dd1    $f0
                .dd1    $01
                .dd1    $60
                .dd1    $ad
                .dd1    $18
                .dd1    $08
                .dd1    $f0
                .dd1    $01
                .dd1    $60
                .dd1    $ad
                .dd1    $77
                .dd1    $63
                .dd1    $d0
                .dd1    $01
                .dd1    $60
                .dd1    $ad
                .dd1    $0c
                .dd1    $08
                .dd1    $c9
                .dd1    $14
                .dd1    $90
                .dd1    $06
                .dd1    $a9
                .dd1    $00
                .dd1    $8d
                .dd1    $76
                .dd1    $63
                .dd1    $60
                .dd1    $ad
                .dd1    $10
                .dd1    $08
                .dd1    $cd
                .dd1    $0f
                .dd1    $08
                .dd1    $f0
                .dd1    $03
                .dd1    $4c
                .dd1    $6b
                .dd1    $4f
                .dd1    $ad
                .dd1    $0c
                .dd1    $08
                .dd1    $c9
                .dd1    $10
                .dd1    $90
                .dd1    $01
                .dd1    $60
                .dd1    $a0
                .dd1    $74
                .dd1    $a2
                .dd1    $ff
                .dd1    $20
                .dd1    $06
                .dd1    $75
                .dd1    $a9
                .dd1    $01
                .dd1    $8d
                .dd1    $75
                .dd1    $1b
                .dd1    $8d
                .dd1    $76
                .dd1    $63
                .dd1    $8d
                .dd1    $1e
                .dd1    $08
                .dd1    $8d
                .dd1    $76
                .dd1    $1b
                .dd1    $8d
                .dd1    $10
                .dd1    $c0
                .dd1    $8d
                .dd1    $7a
                .dd1    $63
                .dd1    $8d
                .dd1    $7b
                .dd1    $63
                .dd1    $a9
                .dd1    $00
                .dd1    $8d
                .dd1    $77
                .dd1    $63
                .dd1    $ad
                .dd1    $3b
                .dd1    $55
                .dd1    $d0
                .dd1    $01
                .dd1    $60
                .dd1    $ad
                .dd1    $fb
                .dd1    $58
                .dd1    $f0
                .dd1    $25
                .dd1    $a9
                .dd1    $8b
                .dd1    $85
                .dd1    $0a
                .dd1    $ad
                .dd1    $62
                .dd1    $51
                .dd1    $85
                .dd1    $08
                .dd1    $ad
                .dd1    $5b
                .dd1    $51
                .dd1    $85
                .dd1    $0b
                .dd1    $85
                .dd1    $0d
                .dd1    $ad
                .dd1    $5d
                .dd1    $51
                .dd1    $85
                .dd1    $0c
                .dd1    $85
                .dd1    $0e
                .dd1    $20
                .dd1    $d3
                .dd1    $1e
                .dd1    $a9
                .dd1    $8b
                .dd1    $8d
                .dd1    $62
                .dd1    $51
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

s1BaseStand     .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $3f
                .dd1    $70
                .dd1    $3f
                .dd1    $70
                .dd1    $3f
                .dd1    $70
                .dd1    $1f
                .dd1    $60
                .dd1    $1f
                .dd1    $60
                .dd1    $0a
                .dd1    $40
                .dd1    $0a
                .dd1    $40
                .dd1    $05
                .dd1    $00
                .dd1    $05
                .dd1    $00
                .dd1    $0a
                .dd1    $40
                .dd1    $0a
                .dd1    $40
                .dd1    $1f
                .dd1    $60
                .dd1    $1f
                .dd1    $60
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $7f
                .dd1    $7f
                .dd1    $2a
                .dd1    $55
                .dd1    $7f
                .dd1    $7f
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $05
                .dd1    $2a
                .dd1    $07
                .dd1    $7e
                .dd1    $05
                .dd1    $2a
                .dd1    $07
                .dd1    $7e
                .dd1    $05
                .dd1    $2a
                .dd1    $05
                .dd1    $2a
                .dd1    $0a
                .dd1    $55
                .dd1    $0a
                .dd1    $55
                .dd1    $0f
                .dd1    $7f
                .dd1    $0a
                .dd1    $55
                .dd1    $07
                .dd1    $7f
                .dd1    $02
                .dd1    $55
                .dd1    $00
                .dd1    $55

Chain           .bulk   0060011001100110
                .bulk   0060011001100110
                .bulk   0060011001100110
                .bulk   0060011001100110

                .bulk   3f7f2a553f7f2a553f7f2a553f7f000000000000000000000000000000000000

s3Stamper       .dd1    $3f
                .dd1    $7f
                .dd1    $3a
                .dd1    $57
                .dd1    $3b
                .dd1    $5f
                .dd1    $3e
                .dd1    $77
                .dd1    $3a
                .dd1    $57
                .dd1    $1f
                .dd1    $7e
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

furnaceGire     .bulk   0000d480d580d588d7b8d5bed7aad5ea91a2958a8ca2849b85c381c781c68180

                .bulk   c080d480d580c588d7b8d5bef78ad5ec918695808d80858085b080b080b080a0

                .bulk   c080d080f180c580d7a0dda0e780c5c080a08080808080808080808080808080

                .dd1    $1e               ;Mack Death
                .dd1    $1e
                .dd1    $0e
                .dd1    $1c
                .dd1    $0b
                .dd1    $34
                .dd1    $0a
                .dd1    $54
                .dd1    $02
                .dd1    $50
                .dd1    $03
                .dd1    $30
                .dd1    $0d
                .dd1    $2c
                .dd1    $1d
                .dd1    $2e
                .dd1    $1d
                .dd1    $2e
                .dd1    $02
                .dd1    $50
                .dd1    $02
                .dd1    $50
                .dd1    $0f
                .dd1    $7c
                .dd1    $07
                .dd1    $78
                .dd1    $07
                .dd1    $38
                .dd1    $03
                .dd1    $30
                .dd1    $00
                .dd1    $00

                .bulk   1e1e0e1c0a54033005283d2f02500f7c07780330000000000000000000000000

                .bulk   1e1e0b3403301d2e02500f7c0330000000000000000000000000000000000000

jumpPadSprite   .bulk   2a542a540420042009100910091004200520552a552a7f7e0000000000000000

                .bulk   2a542a5409101108210411080910552a552a7f7e000000000000000000000000

                .bulk   2a542a54552a552a7f7e00000000000000000000000000000000000000000000

                .bulk   02400340034003400240024002400240024002433a4e3f7c3f78380000000000

HexTool         .bulk   0000003c007c00600063007f017e037007603f407f00630063000f000e000000

                .bulk   1f7c3a5e39163526352639163a5e1f7c0c2818283028617e407c001000000000

                .bulk   3f7e6a5769176527652769176a573f7e0c28197e307c60104000000000000000

LiftPoleSprite  .bulk   0370057006700730035005700670073003500570067007300350057006700730

                .bulk   ffffd5ebd5ebd5ebfefffeffbfbe9fdc8490849083e080808080808080808080

S1clockSprite   .bulk   1f7c2a542a5035543554355435542a543a753e753e550e50060006000f400700

S1clock2Sprite  .bulk   3f7c2a552a503550355435552a543a743e743e551e57060506000f4007000000
                 +      007c005f017a011f0175004f003a000000000000010000000000000000008080

                .bulk   005e0177011b017d004e007c0028003800000000000000000000000000000000

s1Block1        .bulk   00a080e081e083a4878e8dac9db8b5b0f1e0d5c08780868084808080

s1block2        .bulk   80808080848086808780a5c0f1e0b5b09db88dac878e83aa81e080e080a08080
                 +      80808080

St1Floor2       .bulk   aad5aad52a552251
                .bulk   22512a55aad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   aad5aad52a552a55
                .bulk   2a552a55aad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   aad5aad502550255
                .bulk   02550255aad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   aad5aad52a502a50
                .bulk   2a502a50aad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

grS2Lift1       .bulk   aad5aad5552a4522
                .bulk   4522552aaad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   aad5aad5552a552a
                .bulk   552a552aaad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   aad5aad5052a052a
                .bulk   052a052aaad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   aad5aad555285528
                .bulk   55285528aad5aad5
                .bulk   0000000000000000
                .bulk   0000000000000080

                .bulk   2850552e557e554e
                .bulk   557e572e7d2e452e
                .bulk   7d2e552e7f7e0c00
                .bulk   0c003f001e00

Toolbox         .bulk   0c002850552e557e557e572e452e7d2e7f7e0c003f001e000c00000000000000
                .dd1    $00               ;s2pot
                .dd1    $00

                .bulk   012a5520012a5520
                .bulk   0005280000052800
                .bulk   003f7f00007f7140
                .bulk   1d7f7c60157f7c60
                .bulk   3f7f7c60297f7c60
                .bulk   397f7f6001700360
                .bulk   0160016000600140
                .bulk   00700340001f7e00

slantBelt       .dd1    $9f
                .dd1    $ff
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $fe
                .dd1    $9e
                .dd1    $d5
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $87
                .dd1    $ef
                .dd1    $9e
                .dd1    $d6
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $bf
                .dd1    $ef
                .dd1    $9f
                .dd1    $fc
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $83
                .dd1    $f5
                .dd1    $ef
                .dd1    $9c
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $9e
                .dd1    $d5
                .dd1    $ef
                .dd1    $9c
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $81
                .dd1    $fa
                .dd1    $f5
                .dd1    $fe
                .dd1    $9c
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $8f
                .dd1    $aa
                .dd1    $f7
                .dd1    $f0
                .dd1    $9c
                .dd1    $80
                .dd1    $80
                .dd1    $80
                .dd1    $fd
                .dd1    $ba
                .dd1    $df
                .dd1    $00
                .dd1    $9c
                .dd1    $80
                .dd1    $80
                .dd1    $87
                .dd1    $d5
                .dd1    $ba
                .dd1    $f8
                .dd1    $00
                .dd1    $9c
                .dd1    $80
                .dd1    $80
                .dd1    $be
                .dd1    $dd
                .dd1    $af
                .dd1    $c0
                .dd1    $00
                .dd1    $9c
                .dd1    $80
                .dd1    $83
                .dd1    $ea
                .dd1    $dd
                .dd1    $bc
                .dd1    $00
                .dd1    $00
                .dd1    $9c
                .dd1    $80
                .dd1    $9f
                .dd1    $ae
                .dd1    $d7
                .dd1    $e0
                .dd1    $00
                .dd1    $00
                .dd1    $9c
                .dd1    $81
                .dd1    $f5
                .dd1    $ae
                .dd1    $de
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $9c
                .dd1    $8f
                .dd1    $d7
                .dd1    $ab
                .dd1    $f0
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $9c
                .dd1    $fa
                .dd1    $d7
                .dd1    $af
                .dd1    $80
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $9f
                .dd1    $eb
                .dd1    $d5
                .dd1    $f8
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $bf
                .dd1    $ab
                .dd1    $d7
                .dd1    $c0
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $f7
                .dd1    $aa
                .dd1    $fc
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $f7
                .dd1    $ab
                .dd1    $e0
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $f7
                .dd1    $be
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $f7
                .dd1    $f0
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $bf
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $02
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $50
                .dd1    $0b
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $74
                .dd1    $2f
                .dd1    $2a
                .dd1    $40
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $55
                .dd1    $3d
                .dd1    $2f
                .dd1    $2e
                .dd1    $40
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $5d
                .dd1    $3d
                .dd1    $2f
                .dd1    $2e
                .dd1    $40
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $5d
                .dd1    $3d
                .dd1    $2f
                .dd1    $2a
                .dd1    $40
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $55
                .dd1    $3d
                .dd1    $0b
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $7f
                .dd1    $74
                .dd1    $02
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $55
                .dd1    $2a
                .dd1    $50

                .bulk   aad5aad5aad5aad5aad5aad5aad5aad5aad5aad5aad5aad5052a552a552a552a
                 +      552a552a052a4522552a552a4522552a052a4522552a552a4522552a052a552a
                 +      552a552a552a552aaad5aad5aad5aad5aad5aad5aad5aad5aad5aad5aad5aad5

                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa
                .bulk   8ad5aad5aad5aad5
                .bulk   aad5aad58ad5a2d1
                .bulk   aad5aad5a2d1aad5
                .bulk   8ad5a2d1aad5aad5
                .bulk   a2d1aad58ad5aad5
                .bulk   aad5aad5aad5aad5
                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa
                .bulk   aad5aad5aad5aad5
                .bulk   aad5aad5aad5aad5
                .bulk   aad5aad5aad5aad5
                .bulk   152a552a552a552a
                .bulk   552a5528152a4522
                .bulk   552a552a45225528
                .bulk   152a4522552a552a
                .bulk   45225528152a552a
                .bulk   552a552a552a5528
                .bulk   aad5aad5aad5aad5
                .bulk   aad5aad5aad5aad5
                .bulk   aad5aad5aad5aad5

                .bulk   d5aad5aad5aad5aa  ;12 x 8 Right S3 platform
                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa
                .bulk   aad5aad5aad5aad5
                .bulk   aad5aad0aad5a2d1
                .bulk   aad5aad5a2d1aad0
                .bulk   aad5a2d1aad5aad5
                .bulk   a2d1aad0aad5aad5
                .bulk   aad5aad5aad5aad0
                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa
                .bulk   d5aad5aad5aad5aa

                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

                .bulk   1528500a47624f524e524a724b724762500a1528
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

                .bulk   1528500a46624e724e724e724e724662500a1528
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

                .bulk   1528500a47624b724a724e524f524762500a1528
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00

                .bulk   1528500a47624f724a524a524f724762500a1528

                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $68
                .dd1    $16
                .dd1    $1f
                .dd1    $7c
                .dd1    $07
                .dd1    $70
                .dd1    $ff
                .dd1    $ff
                .dd1    $ff
                .dd1    $ff
                .dd1    $ea
                .dd1    $d5
                .dd1    $aa
                .dd1    $d7
                .dd1    $ea
                .dd1    $d5
                .dd1    $aa
                .dd1    $d7
                .dd1    $ea
                .dd1    $ff
                .dd1    $ff
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $fa
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $fa
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $dd
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $dd
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $dd
                .dd1    $d7
                .dd1    $ea
                .dd1    $fa
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $fa
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ea
                .dd1    $d5
                .dd1    $d7
                .dd1    $ea
                .dd1    $ff
                .dd1    $ff
                .dd1    $d7
                .dd1    $ea
                .dd1    $d5
                .dd1    $aa
                .dd1    $d7
                .dd1    $ea
                .dd1    $d5
                .dd1    $aa
                .dd1    $d7
                .dd1    $eb
                .dd1    $ff
                .dd1    $ff
                .dd1    $f7
                .dd1    $eb
                .dd1    $92
                .dd1    $92
                .dd1    $b7
                .dd1    $eb
                .dd1    $92
                .dd1    $92
                .dd1    $b7
                .dd1    $eb
                .dd1    $ff
                .dd1    $ff
                .dd1    $f7
                .dd1    $eb
                .dd1    $92
                .dd1    $92
                .dd1    $b7
                .dd1    $eb
                .dd1    $92
                .dd1    $92
                .dd1    $b7
                .dd1    $eb
                .dd1    $ff
                .dd1    $ff
                .dd1    $f7
                .dd1    $ea
                .dd1    $d5
                .dd1    $aa
                .dd1    $d7
                .dd1    $ff
                .dd1    $ff
                .dd1    $ff
                .dd1    $ff

liftSprite      .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   3f7f7f7f3f7f7f7f
                .bulk   3d2a552f3d2a552f
                .bulk   3f7f7f7f30000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   300000033f7f7f7f
                .bulk   3a552a573a552a57
                .bulk   3f7f7f7f00000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   00000000

mackInLift      .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000

                .bulk   3f7f7f7f3f7f7f7f
                .bulk   3d2a552f3d2a552f
                .bulk   3f7f7f7f303c3c03
                .bulk   301c380330166803
                .bulk   3015280330052003
                .bulk   30066003301a5803
                .bulk   303a5c03303a5c03
                .bulk   3005200330052003
                .bulk   301f7803300f7003
                .bulk   300e700330066003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   3000000330000003
                .bulk   300000033f7f7f7f
                .bulk   3a552a573a552a57
                .bulk   3f7f7f7f00000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   00000000

                .bulk   ffffffffd5abd5abd5abd5abffffffff

                .bulk   8580858887b895be978a95ec918695a08c8ca480a4b0c1b0d0b0d0a0e1c0e180

                .bulk   8780858885f897ae9dca95ac918695a08cac89a085f0828085a084a080e08080

                .bulk   8580858885f895ae9d8a97ec918695a08cac84ac84e4828681828382838c8180

                .bulk   3333352b352f1d2e025002500f7c077807380330000000000000000000000000

                .bulk   025002500f7c077807380330
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000

VerticalsteelBar .bulk  352c352c352c342c342c352c352c352c352c352c342c342c352c352c352c352c
                 +      352c352c352c352c352c352c352c352c35
                .bulk   000000000000000000000000000000000000000000000000000000

                .bulk   3f7f2a542e742e742a542a542f742a543f7d330d300d3f7d2a552a5414281428

                .bulk   85a885a885a882d085a885a885a885a880c08180828088808280808080808080

                .bulk   85a885a885a882d085a885a885a885a880c08180848082808880808080808080

                .bulk   d5aad5aaaad5a2d1a2d1aad5d5aad5aa00000000000000000000000000000000

                .bulk   d5aad5aaaad5aad5aad5aad5d5aad5aa00000000000000000000000000000000

                .bulk   d5aad5aa8ad58ad58ad58ad5d5aad5aa00000000000000000000000000000000

                .bulk   d5aad5aaaad0aad0aad0aad0d5aad5aa00000000000000000000000000000000

S3nailPotSprite .bulk   1f7e352b350335333533352b377b380710020f7c000000000000000000000000

                .bulk   3f7f2a55052807380120033007380e1c1f7c3f7c2378237013400e0000000000

                .bulk   0010002000300010002000300010007001280128013801282b382b282b280178

S1Bell3Sprite   .bulk   02200340076007780f7c0f701740090008400420000000000000000000000000

S1BellSprite    .bulk   00400f7c07780778037003700160021002100210000000000000000000000000

S1Bell2Sprite   .bulk   0220016003700f701f7807780174004801080210000000000000000000000000

                .bulk   03600360255a0f58177a0f702500000000000000000000000000000000000000

                .bulk   077007702d501f7c0e6b4f7e151a0f5c2f780540000000000000000000000000

                .bulk   077007700770077007703f727d57377f7e7c72683d7e7f6e1d7d0f7050040110

                .bulk   0000004001600370
                .bulk   0778016001600160
                .bulk   016000000000195e
                .bulk   1d4c1f4c1b4c195e

InBurner        .bulk   1f7f7f7f7f7e1d2a552a552e1c224a54510e1f2a552a553e036a552a5570007a
                 +      4a1457401f1a4a14563e1f6e552a5d7e0f66552a597c075b7f7f767803596a55
                 +      667001580a54066000780778074000380f4c070000001f66000000003f7f0000

                .bulk   80fe87efbfeff5efd5eff5fef7f0df80

                .bulk   80fe87f3bfe7f5cfd59ff5fef7f0df80

                .bulk   80fe87ffbf83f583d5fff5fef7f0df80

                .bulk   80fe87dfbfc7f5f3d5fbf5fef7f0df80

                .bulk   bfaaf7aaf7abf7bef7f0bf8080808080

                .bulk   bfaaf9aaf3abe7beeff0bf8080808080

                .bulk   bfaaffaac1abc1befff0bf8080808080

                .bulk   bfaaefaae7abf3befbf0bf8080808080

                .bulk   0100110013000d08014812300c00000000000000000000000000000000000000

                .bulk   0100110013000d0801484131410136660c180000000000000000000000000000

                .bulk   0100010011104102110813494d3001024102410432440c380000000000000000

S3spike1        .bulk   808180818081828b80a1818188918181808180c1848181a38889818180818081

s3spike2        .bulk   808190c18081858b80a190818281808180818281a081858ba0a1828190818081

s3spike3        .bulk   80c18881819180c184a980838081848180c19281818188a1818b808180818081
                .bulk   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
s3spikeBlank    .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000
                .bulk   0000000000000000

FONT            .dd1    $38
                .dd1    $38
                .dd1    $38
                .dd1    $38
                .dd1    $00
                .dd1    $38
                .dd1    $00
                .dd1    $00
                .dd1    $36
                .dd1    $36
                .dd1    $24
                .dd1    $12
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $80
                .dd1    $24
                .dd1    $7e
                .dd1    $24
                .dd1    $7e
                .dd1    $24
                .dd1    $80
                .dd1    $00
                .dd1    $08
                .dd1    $3e
                .dd1    $02
                .dd1    $3e
                .dd1    $20
                .dd1    $3e
                .dd1    $08
                .dd1    $00
                .dd1    $42
                .dd1    $25
                .dd1    $12
                .dd1    $08
                .dd1    $24
                .dd1    $52
                .dd1    $21
                .dd1    $00
                .dd1    $0c
                .dd1    $16
                .dd1    $02
                .dd1    $04
                .dd1    $2a
                .dd1    $12
                .dd1    $2c
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $10
                .dd1    $08
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $38
                .dd1    $1c
                .dd1    $0e
                .dd1    $0e
                .dd1    $0e
                .dd1    $1c
                .dd1    $38
                .dd1    $00
                .dd1    $0e
                .dd1    $1c
                .dd1    $38
                .dd1    $38
                .dd1    $38
                .dd1    $1c
                .dd1    $0e
                .dd1    $00
                .dd1    $22
                .dd1    $1c
                .dd1    $36
                .dd1    $1c
                .dd1    $22
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $08
                .dd1    $08
                .dd1    $3e
                .dd1    $08
                .dd1    $08
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $10
                .dd1    $08
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $7e
                .dd1    $7e
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $00
                .dd1    $00
                .dd1    $60
                .dd1    $70
                .dd1    $38
                .dd1    $1c
                .dd1    $0e
                .dd1    $06
                .dd1    $00
                .dd1    $00

ChrBitmap       .bulk   1e333b3f37331e00

Chr1            .bulk   0c0e0f0c0c0c3f00
Chr2            .bulk   1e3330180c063f00
Chr3            .bulk   1e
                .dd1    $33
                .dd1    $30
                .dd1    $1c
                .dd1    $30
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $38
                .dd1    $3c
                .dd1    $36
                .dd1    $33
                .dd1    $3f
                .dd1    $30
                .dd1    $30
                .dd1    $00
                .dd1    $3f
                .dd1    $03
                .dd1    $03
                .dd1    $1f
                .dd1    $30
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $1c
                .dd1    $06
                .dd1    $03
                .dd1    $1f
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $3f
                .dd1    $33
                .dd1    $18
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $3e
                .dd1    $30
                .dd1    $18
                .dd1    $0c
                .dd1    $00
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $00
                .dd1    $18
                .dd1    $18
                .dd1    $10
                .dd1    $08
                .dd1    $10
                .dd1    $18
                .dd1    $1c
                .dd1    $1e
                .dd1    $1c
                .dd1    $18
                .dd1    $10
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $7e
                .dd1    $00
                .dd1    $7e
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $04
                .dd1    $0c
                .dd1    $1c
                .dd1    $3c
                .dd1    $1c
                .dd1    $0c
                .dd1    $04
                .dd1    $00
                .dd1    $3c
                .dd1    $7e
                .dd1    $62
                .dd1    $30
                .dd1    $18
                .dd1    $00
                .dd1    $18
                .dd1    $00
                .dd1    $90
                .dd1    $88
                .dd1    $b6
                .dd1    $ff
                .dd1    $ff
                .dd1    $ff
                .dd1    $be
                .dd1    $b6
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $3f
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $00
                .dd1    $1f
                .dd1    $33
                .dd1    $33
                .dd1    $1f
                .dd1    $33
                .dd1    $33
                .dd1    $1f
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $0f
                .dd1    $1b
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $1b
                .dd1    $0f
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $03
                .dd1    $1f
                .dd1    $03
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $03
                .dd1    $1f
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $03
                .dd1    $3b
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $3f
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $00
                .dd1    $3f
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $3f
                .dd1    $00
                .dd1    $30
                .dd1    $30
                .dd1    $30
                .dd1    $30
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $33
                .dd1    $1b
                .dd1    $0f
                .dd1    $07
                .dd1    $0f
                .dd1    $1b
                .dd1    $33
                .dd1    $00
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $3f
                .dd1    $00
                .dd1    $33
                .dd1    $3f
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $37
                .dd1    $3b
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $1f
                .dd1    $33
                .dd1    $33
                .dd1    $1f
                .dd1    $03
                .dd1    $03
                .dd1    $03
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $37
                .dd1    $3b
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $1f
                .dd1    $33
                .dd1    $33
                .dd1    $1f
                .dd1    $0f
                .dd1    $1b
                .dd1    $33
                .dd1    $00
                .dd1    $1e
                .dd1    $33
                .dd1    $03
                .dd1    $1e
                .dd1    $30
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $3f
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $0c
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $3f
                .dd1    $33
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $0c
                .dd1    $1e
                .dd1    $33
                .dd1    $33
                .dd1    $00
                .dd1    $33
                .dd1    $33
                .dd1    $33
                .dd1    $1e
                .dd1    $0c
                .dd1    $0c
                .dd1    $0c
                .dd1    $00

ChrZ            .bulk   3f30180c06033f00
                .dd1    $1e
                .dd1    $1e
                .dd1    $06
                .dd1    $06
                .dd1    $1e
                .dd1    $1e
                .dd1    $00
                .dd1    $00
                .dd1    $06
                .dd1    $0e
                .dd1    $1c
                .dd1    $38
                .dd1    $70
                .dd1    $60
                .dd1    $00
                .dd1    $00
                .dd1    $78
                .dd1    $78
                .dd1    $60
                .dd1    $60
                .dd1    $78
                .dd1    $78
                .dd1    $00
                .dd1    $00

                .dd1    $08
                .dd1    $1c
                .dd1    $3e
                .dd1    $7f
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $00
                .dd1    $7f
                .dd1    $00

                .bulk   0e0e1b5c38735d671b47071f3e7f110409081109084849020852244210040508
                 +      10090c484502004204020e04070760090a484702004e04120104090420090948
                 +      49020042041e11244904210908484912285204120e3f474240735d67075f671f
                 +      0e020000000240000000000000000042000000010000000000000000007f0000
                 +      0000000000000000000000000000000000000000000000000000000000000000
                 +      00000000000000000000000f7f7f7f7c3f7f7800000000000007700038034000
                 +      1c000000000000077f7f7f7f7f7f7e000000000000037001700020001f000000
                 +      000000037f7f7f7f7f7f7f000000000000017807600038001f00000000000001
                 +      7f7f7f7f7f7f7f00000000000000780f40003c001f
                .bulk   000000000000007f7f7f7f7f7f7f000000000000003c0f00003c001f00000000
                 +      0000003f7f7f7f7f7f7f000000000000001c0e00003c001f000000000000001f
                 +      7f7f7f7f7f7f000000000000000e0000003c001f000000000000000f7f7f7f7f
                 +      7f7f000000000000000600000038001f0000000000000007737f7f7f7f7f0000
                 +      00000000000200000020001f0000000000000003607f7f7f7f7e000000000000
                 +      000100000300001c0000000000000001400f7c3f7f78000000494e0000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000
                 +      0000000000000000000000

LogoHardHat     .bulk   02552a552a552a552a552a552a552a552a552a552a552a552a500a552a552a55
                 +      2a552a552a552a552a552a552a552a552a552a54aad5aad5aad5aad5aad5aad5
                 +      aad5aad5aad5aad5aad5aad5aad5000000000000000000000000000000000000
                 +      0000000000000000
                .bulk   3c0e063038071c0700000360700e380e0000076e3c0e3807380e1e0e1e3c3807
                 +      1c0700000360700e380e00000f6e1e0e3807380e0f0e3e3e1f4e1c0700000360
                 +      3f5c380e00001f6e0f0e1f6e380e074e380e1f4e1c07000003603f1c380e0000
                 +      3c0e074e1f4e380e036e00070e1c1c07000003601c38380e0000380e000e0e1c
                 +      380e016e00070e1c1c07000003601c383b6e0000380e036e0e1c3b6e006e0007
                 +      07181c67000003600e703b6e0000380e0f6e07383b6e002e000707081d730000
                 +      03600e303b6e0000380e1f6e07183b6e030e000703401f79000003600700380e
                 +      0000380e1c0e0340380e074e380e03401f7c000000000700380e00003c0e1c0e
                 +      0340380e0f0e3e3e01601f1e00003f7e0340380e00001f6e1f6e0160380e1e0e
                 +      1e3c01601e0f00003f7e0340380e00000f6e0f6e0160380e3c0e063000401c07
                 +      00003f7e0100380e0000076e036e0040380e0000000000000000000000000000
                 +      000000000000000000000000aad5aad5aad5aad5aad5aad5aad5aad5aad5aad5
                 +      aad5aad5aad50a552a552a552a552a552a552a552a552a552a552a552a552a54
                 +      02552a552a552a552a552a552a552a552a552a552a552a552a50
others          .bulk   0e0e0e0e0e0e0e
                .bulk   0f0f0f0f0f0f0f
                .bulk   10101010101010
                .bulk   11111111111111
                .bulk   12121212121212
                .bulk   13131313131313
                .bulk   14141414

                .bulk   00001668000005200000066000003a5c00003a5c000005200000052000001f78
                 +      00000f7000000e700000066000000000

                .bulk   00003c000000143c0000142800001668000005200000010000004a5200004a52
                 +      00004b520000352c000006600000052000000a50000014280000224400000420

                .bulk   0000003c00003c280000142800001668000005200000410200004a5200006a56
                 +      00001b5800000520000006600000052000001250000014440000252800000a24

macWalkRightSprite .bulk 00001c0700000c0700000e1f00000a5600000254000035280000352800001128
                 +      00000050000002500000035000001f7c0000077c000003780000017000000000

                .bulk   0000380e0000180e00001c3e0000152c0000052800006a5000006a5000002250
                 +      00000120000005200000072000003f7800000f78000007700000036000000000

                .bulk   0000701c0000301c0000387c00002a5800000a50000155200001552000004520
                 +      0000024000000a4000000e4000007f7000001f7000000f600000074000000000

                .bulk   000160380000603800007178000055300000152000032a4000032a4000010a40
                 +      000005000000150000001d0000017f6000003f6000001f4000000f0000000000

Macxxx          .bulk   0003407000014070
                .bulk   0001637000012a60
                .bulk   00002a4000065500
                .bulk   0006550000021500
                .bulk   00000a0000002a00
                .bulk   00003a0000037f40
                .bulk   00007f4000003f00
                .bulk   00001e0000000000

                .bulk   0007016000030160000347600002554000005500000d2a00000d2a0000042a00
                 +      00001400000054000000740000077f0000017f0000007e0000003c0000000000

                .bulk   000e03400006034000070f4000052b0000012a00001a5400001a540000085400
                 +      000028000001280000016800000f7e0000037e0000017c000000780000000000
                .junk   64

macStandRightSprite .bulk 0000037000000070000001700000025000000250000001280000052800003528
                 +      00003450000012500000035000001f7c0000077c000003780000017000000000
                .bulk   00000760000001600000036000000520000005200000025000000a5000006a50
                 +      00006920000025200000072000003f7800000f78000007700000036000000000
                .bulk   00000f40000003400000074000000a4000000a40000005200000152000015520
                 +      0001524000004a4000000e4000007f7000001f7000000f600000074000000000
                .bulk   00001f000000070000000f00000015000000150000000a4000002a4000032a40
                 +      000325000001150000001d0000017f6000003f6000001f4000000f0000000000
                .bulk   00003e0000000e0000001e0000002a0000002a00000015000000550000065500
                 +      00064a0000022a0000003a0000037f4000007f4000003f0000001e0000000000
                .bulk   00007c0000001c0000003c00000054000000540000002a0000012a00000d2a00
                 +      000d1400000454000000740000077f0000017f0000007e0000003c0000000000
                .bulk   00017800000038000000780000012800000128000000540000025400001a5400
                 +      001a28000009280000016800000f7e0000037e0000017c000000780000000000
                .junk   64

                .bulk   0000003c0000381c00007c1c00000a5400000a54000007680000056800000528
                 +      00000050000002500000035000001f7c0000077c000003780000017000000000
                .bulk   000000780000703800017838000015280000152800000f5000000b5000000a50
                 +      00000120000005200000072000003f7800000f78000007700000036000000000
                .bulk   00000170000160700003707000002a5000002a5000001f200000172000001520
                 +      0000024000000a4000000e4000007f7000001f7000000f600000074000000000
                .bulk   000003600003416000076160000055200000552000003e4000002e4000002a40
                 +      000005000000150000001d0000017f6000003f6000001f4000000f0000000000
                .bulk   0000074000070340000f434000012a4000012a4000007d0000005d0000005500
                 +      00000a0000002a0000003a0000037f4000007f4000003f0000001e0000000000
                .bulk   00000f00000e0700001f0700000255000002550000017a0000013a0000012a00
                 +      00001400000054000000740000077f0000017f0000007e0000003c0000000000
                .bulk   00001e00001c0e00003e0e0000052a0000052a00000374000002740000025400
                 +      000028000001280000016800000f7e0000037e0000017c000000780000000000
                .junk   64

macWalkLeftSprite .bulk 0000380e0000380c00003e1c00001a5400000a500000052b0000052b00000522
                 +      00000240000002500000027000000f7e00000f78000007700000036000000000
                .bulk   0000701c0000701800007c38000035280000152000000a5600000a5600000a44
                 +      00000500000005200000056000001f7c00001f7000000f600000074000000000
                .bulk   00016038000160300001787000006a5000002a400000152c0000152c00001508
                 +      00000a0000000a4000000b4000003f7800003f6000001f4000000f0000000000
                .bulk   000340700003406000037160000155200000550000002a5800002a5800002a10
                 +      00001400000015000000170000007f7000007f4000003f0000001e0000000000
                .bulk   00070160000701400007634000032a4000012a00000055300000553000005420
                 +      0000280000002a0000002e0000017f6000017f0000007e0000003c0000000000
                .bulk   000e0340000e0300000f4700000655000002540000012a6000012a6000012840
                 +      000050000000540000005c0000037f4000037e0000017c000000780000000000

                .bulk   001c0700001c0600001f0e00000d2a0000052800000255400002554000025100
                 +      00012000000128000001380000077f0000077c00000378000001700000000000
                .junk   64

mackStandLeftSprite .bulk 000003700000034000000360000002500000025000000520000005280000052b
                 +      0000024b000002520000027000000f7e00000f78000007700000036000000000
                .bulk   000007600000070000000740000005200000052000000a4000000a5000000a56
                 +      00000516000005240000056000001f7c00001f7000000f600000074000000000
                .bulk   00000f4000000e0000000f0000000a4000000a4000001500000015200000152c
                 +      00000a2c00000a4800000b4000003f7800003f6000001f4000000f0000000000
                .bulk   00001f0000001c0000001e00000015000000150000002a0000002a4000002a58
                 +      00001458000015100000170000007f7000007f4000003f0000001e0000000000
                .bulk   00003e000000380000003c0000002a0000002a00000054000000550000005530
                 +      0000293000002a2000002e0000017f6000017f0000007e0000003c0000000000
                .bulk   00007c00000070000000780000005400000054000001280000012a0000012a60
                 +      000052600000544000005c0000037f4000037e0000017c000000780000000000

                .bulk   0001780000016000000170000001280000012800000250000002540000025540
                 +      00012540000129000001380000077f0000077c00000378000001700000000000
                .junk   64

mac2WalkLeftSprite .bulk 00000f0000000e0700000e0f00000a5400000a54000005780000056800000528
                 +      00000240000002500000027000000f7e00000f78000007700000036000000000
                .bulk   00001e0000001c0e00001c1e000015280000152800000b7000000b5000000a50
                 +      00000500000005200000056000001f7c00001f7000000f600000074000000000
                .bulk   00003c000000381c0000383c00002a5000002a50000017600000172000001520
                 +      00000a0000000a4000000b4000003f7800003f6000001f4000000f0000000000
                .bulk   000078000000703800007078000055200000552000002f4000002e4000002a40
                 +      00001400000015000000170000007f7000007f4000003f0000001e0000000000
                .bulk   00017000000160700001617000012a4000012a4000005f0000005d0000005500
                 +      0000280000002a0000002e0000017f6000017f0000007e0000003c0000000000
                .bulk   000360000003416000034360000255000002550000013e0000013a0000012a00
                 +      000050000000540000005c0000037f4000037e0000017c000000780000000000

                .bulk   00074000000703400007074000052a0000052a0000027c000002740000025400
                 +      00012000000128000001380000077f0000077c00000378000001700000000000
                .junk   64

macJumpRightSprite .bulk 0000000000001c0f00001e1f00000a5400000254000035280000352800001128
                 +      00000050000002500000035000001f7c0000077c000003780000017000000000
                .bulk   000000000000381e00003c3e000015280000052800006a5000006a5000002250
                 +      00000120000005200000072000003f7800000f78000007700000036000000000
                .bulk   000000000000703c0000787c00002a5000000a50000155200001552000004520
                 +      0000024000000a4000000e4000007f7000001f7000000f600000074000000000
                .bulk   000000000001607800017178000055200000152000032a4000032a4000010a40
                 +      000005000000150000001d0000017f6000003f6000001f4000000f0000000000
                .bulk   00000000000341700003637000012a4000002a40000655000006550000021500
                 +      00000a0000002a0000003a0000037f4000007f4000003f0000001e0000000000
                .bulk   0000000000070360000747600002550000005500000d2a00000d2a0000042a00
                 +      00001400000054000000740000077f0000017f0000007e0000003c0000000000

                .bulk   00000000000e0740000f0f4000052a0000012a00001a5400001a540000085400
                 +      000028000001280000016800000f7e0000037e0000017c000000780000000000
                .bulk   2020cd0152415749
                .bulk   4e5055540d058501
                .bulk   3c310d0cc402234e
                .bulk   594441544145310d
                .bulk   0a86014241444441
                .bulk   54410d03a0000d13
                .bulk   5e31202020202020
                .bulk   cd01524157494e50

macJumpLeftSprite .bulk 0000000000003c0e00003e1e00000a5400000a500000052b0000052b00000522
                 +      00000240000002500000027000000f7e00000f78000007700000036000000000

                .bulk   000000000000781c00007c3c000015280000152000000a5600000a5600000a44
                 +      00000500000005200000056000001f7c00001f7000000f600000074000000000
                .bulk   00000000000170380001787800002a5000002a400000152c0000152c00001508
                 +      00000a0000000a4000000b4000003f7800003f6000001f4000000f0000000000
                .bulk   000000000003607000037170000055200000550000002a5800002a5800002a10
                 +      00001400000015000000170000007f7000007f4000003f0000001e0000000000
                .bulk   00000000000741600007636000012a4000012a00000055300000553000005420
                 +      0000280000002a0000002e0000017f6000017f0000007e0000003c0000000000
                .bulk   00000000000f0340000f4740000255000002540000012a6000012a6000012840
                 +      000050000000540000005c0000037f4000037e0000017c000000780000000000
                .bulk   00000000001e0700001f0f0000052a0000052800000255400002554000025100
                 +      00012000000128000001380000077f0000077c00000378000001700000000000
                .junk   64

mackFrontSprite .bulk   00003c3c00001c380000166800001528000005200000066000001a5800003a5c
                 +      00003a5c000005200000052000001f7800000f7000000e700000066000000000
                .bulk   000078780000387000002d5000002a5000000a4000000d400000353000007538
                 +      0000753800000a4000000a4000003f7000001f6000001d6000000d4000000000
                .bulk   000171700000716000005b20000055200000150000001b0000006a6000016a70
                 +      00016a70000015000000150000007f6000003f4000003b4000001b0000000000

                .bulk   00036360000163400001364000012a4000002a00000036000001554000035560
                 +      0003556000002a0000002a0000017f4000007f00000077000000360000000000
                .bulk   000747400003470000026d00000255000000540000006c0000032b0000072b40
                 +      00072b40000054000000540000037f0000017e0000016e0000006c0000000000
                .bulk   000f0f0000070e0000055a0000052a00000128000001580000065600000e5700
                 +      000e5700000128000001280000077e0000037c0000035c000001580000000000
                .bulk   001e1e00000e1c00000b3400000a54000002500000033000000d2c00001d2e00
                 +      001d2e000002500000025000000f7c0000077800000738000003300000000000
                .junk   64

                .bulk   000000000000000000003c3c00001c3800001668000005200000066000003a5c
                 +      00003a5c000005200000052000001f7800000f7000000e700000066000000000

                .bulk   0000000000000000000078780000387000002d5000000a4000000d4000007538
                 +      0000753800000a4000000a4000003f7000001f6000001d6000000d4000000000

                .bulk   0000000000000000000171700000716000005b200000150000001b0000016a70
                 +      00016a70000015000000150000007f6000003f4000003b4000001b0000000000

                .bulk   000000000000000000036360000163400001364000002a000000360000035560
                 +      0003556000002a0000002a0000017f4000007f00000077000000360000000000

                .bulk   0000000000000000000747400003470000026d000000540000006c0000072b40
                 +      00072b40000054000000540000037f0000017e0000016e0000006c0000000000

                .bulk   0000000000000000000f0f0000070e0000055a000001280000015800000e5700
                 +      000e5700000128000001280000077e0000037c0000035c000001580000000000

                .bulk   0000000000000000001e1e00000e1c00000b34000002500000033000001d2e00
                 +      001d2e000002500000025000000f7c0000077800000738000003300000000000
                .junk   64

                .bulk   00003c000000143c0000142800001668000005200000010000004a5200004a52
                 +      00004b520000352c000006600000052000000a50000014280000224400000420

                .bulk   00007800000028780000285000002d5000000a40000002000001152400011524
                 +      0001172400006a5800000d4000000a4000001520000028500000450800000840
                .bulk   00017000000051700000512000005b20000015000000040000022a4800022a48
                 +      00022e480001553000001b000000150000002a400000512000010a1000001100
                .bulk   0003600000012360000122400001364000002a00000008000004551000045510
                 +      00045d1000032a600000360000002a0000005500000122400002142000002200
                .bulk   00074000000247400002450000026d00000054000000100000092a2000092a20
                 +      00093a200006554000006c000000540000012a00000245000004284000004400
                .bulk   000f000000050f0000050a0000055a0000012800000020000012544000125440
                 +      00127440000d2b0000015800000128000002540000050a000008510000010800
                .bulk   001e0000000a1e00000a1400000b340000025000000040000025290000252900
                 +      00256900001a5600000330000002500000052800000a14000011220000021000
                .junk   64

                .bulk   0000003c00003c280000142800001668000005200000410200004a5200006a56
                 +      00001b5800000520000006600000052000001250000014440000252800000a24
                .bulk   00000078000078500000285000002d5000000a4000010204000115240001552c
                 +      0000373000000a4000000d4000000a40000025200000290800004a5000001448
                .bulk   00000170000171200000512000005b20000015000002040800022a4800032a58
                 +      00006e600000150000001b000000150000004a40000052100001152000002910
                .bulk   0000036000036240000122400001364000002a00000408100004551000065530
                 +      00015d4000002a000000360000002a00000115000001242000022a4000005220
                .bulk   00000740000745000002450000026d00000054000008102000092a20000d2a60
                 +      00033b000000540000006c000000540000022a00000248400004550000012440
                .bulk   00000f00000f0a0000050a0000055a00000128000010204000125440001a5540
                 +      00067600000128000001580000012800000454000005110000092a0000024900
                .bulk   00001e00001e1400000a1400000b340000025000002041000025290000352b00
                 +      000d6c0000025000000330000002500000092800000a22000012540000051200
                .junk   64

                .bulk   00000f000000073c000005380000052800000528000005280000065800000658
                 +      00000e5c00003f3f000031630000021000000778000006580000077800000250
                .bulk   00001e0000000e7800000a7000000a5000000a5000000a5000000d3000000d30
                 +      00001d3800007e7e000063460000042000000f7000000d3000000f7000000520
                .bulk   00003c0000001d700000156000001520000015200000152000001a6000001a60
                 +      00003a7000017d7c0001470c0000084000001f6000001a6000001f6000000a40
                .bulk   0000780000003b6000002b4000002a4000002a4000002a400000354000003540
                 +      0000756000037b7800030e180000110000003f400000354000003f4000001500
                .bulk   00017000000077400000570000005500000055000000550000006b0000006b00
                 +      00016b400007777000061c300000220000007f0000006b0000007f0000002a00
                .bulk   0003600000016f0000012e0000012a0000012a0000012a000001560000015600
                 +      00035700000f6f60000c38600000440000017e000001560000017e0000005400
                .bulk   0007400000035e0000025c0000025400000254000002540000032c0000032c00
                 +      00072e00001f5f40001871400001080000037c0000032c0000037c0000012800
                .junk   64

                .bulk   0000003c00000f38000007280000052800000528000005280000065800000658
                 +      00000e5c00001f3e00001162000032130000377b000006580000077800000250
                .bulk   0000007800001e7000000e5000000a5000000a5000000a5000000d3000000d30
                 +      00001d3800003e7c000023440000642600006f7600000d3000000f7000000520
                .bulk   0000017000003d6000001d2000001520000015200000152000001a6000001a60
                 +      00003a7000007d78000047080001484c00015f6c00001a6000001f6000000a40
                .bulk   0000036000007b4000003a4000002a4000002a4000002a400000354000003540
                 +      0000756000017b7000010e100003111800033f580000354000003f4000001500
                .bulk   00000740000177000000750000005500000055000000550000006b0000006b00
                 +      00016b400003776000021c200006223000067f3000006b0000007f0000002a00
                .bulk   00000f0000036e0000016a0000012a0000012a0000012a000001560000015600
                 +      0003570000076f4000043840000c4460000d7e600001560000017e0000005400
                .bulk   00001e0000075c000003540000025400000254000002540000032c0000032c00
                 +      00072e00000f5f000008710000190940001b7d4000032c0000037c0000012800
                .junk   64

                .bulk   0000014000000140000001400000014000000360000002500000025000000370
                 +      0000025000000370000002500000025000003f7e00007f7f0000016000000000

                .bulk   0000030000000300000003000000030000000740000005200000052000000760
                 +      0000052000000760000005200000052000007f7c00017f7e0000034000000000

                .bulk   0000060000000600000006000000060000000f0000000a4000000a4000000f40
                 +      00000a4000000f4000000a4000000a4000017f7800037f7c0000070000000000

                .bulk   00000c0000000c0000000c0000000c0000001e00000015000000150000001f00
                 +      0000150000001f00000015000000150000037f7000077f7800000e0000000000

                .bulk   0000180000001800000018000000180000003c0000002a0000002a0000003e00
                 +      00002a0000003e0000002a0000002a0000077f60000f7f7000001c0000000000

                .bulk   0000300000003000000030000000300000007800000054000000540000007c00
                 +      0000540000007c000000540000005400000f7f40001f7f600000380000000000

                .bulk   0000600000006000000060000000600000017000000128000001280000017800
                 +      00012800000178000001280000012800001f7f00003f7f400000700000000000
                .junk   64

                .bulk   0000014000000360000002500000025000000370000002500000037000000250
                 +      0000025000003f7e00007f7f0000016000000000000000000000000000000000

                .bulk   0000030000000740000005200000052000000760000005200000076000000520
                 +      0000052000007f7c00017f7e0000034000000000000000000000000000000000

                .bulk   0000060000000f0000000a4000000a4000000f4000000a4000000f4000000a40
                 +      00000a4000017f7800037f7c0000070000000000000000000000000000000000

                .bulk   00000c0000001e00000015000000150000001f000000150000001f0000001500
                 +      0000150000037f7000077f7800000e0000000000000000000000000000000000

                .bulk   0000180000003c0000002a0000002a0000003e0000002a0000003e0000002a00
                 +      00002a0000077f60000f7f7000001c0000000000000000000000000000000000

                .bulk   0000300000007800000054000000540000007c000000540000007c0000005400
                 +      00005400000f7f40001f7f600000380000000000000000000000000000000000

                .bulk   0000600000017000000128000001280000017800000128000001780000012800
                 +      00012800001f7f00003f7f400000700000000000000000000000000000000000
                .junk   64

s3boxBitmap     .bulk   00000f7f00003e5700007657000056570000577f00005d2b0000752c00007f70
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00001f7e00007d2e00016d2e00012d2e00012f7e00013a5600016a5800017f60
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00003f7c00017a5c00035a5c00025a5c00025f7c0002752c0003553000037f40
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00007f7800037538000735380005353800053f7800056a5800072a6000077f00
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00017f7000076a70000e6a70000a6a70000a7f70000b5530000e5540000f7e00
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00037f60000f5560001d55600015556000157f6000172a60001d2b00001f7c00
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00077f40001f2b40003b2b40002b2b40002b7f40002e5540003a5600003f7800
                 +      0000000000000000000000000000000000000000000000000000000000000000
                .junk   64

                .bulk   0000ffff0000ffff0000d5aa0000d5aa0000d5aa0000d5aa0000ffff0000ffff
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0081fffe0081fffe0081aad40081aad40081aad40081aad40081fffe0081fffe
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0083fffc0083fffc0082d5a80082d5a80082d5a80082d5a80083fffc0083fffc
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0087fff80087fff80085aad00085aad00085aad00085aad00087fff80087fff8
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   008ffff0008ffff0008ad5a0008ad5a0008ad5a0008ad5a0008ffff0008ffff0
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   009fffe0009fffe00095aac00095aac00095aac00095aac0009fffe0009fffe0
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00bfffc000bfffc000aad50000aad50000aad50000aad50000bfffc000bfffc0
                 +      0000000000000000000000000000000000000000000000000000000000000000
                .junk   64

                .bulk   000000040000001c0000033e00002f5400003a3e00002b6a00000d1e00000674
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00000008000000380000067c00005f280000747c0000575400001a3c00000d68
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   000000100000007000000d7800013e500001697800012f280000347800001b50
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   000000200000016000001b7000027d200003537000025e500000697000003720
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   00000040000003400000376000057a400007276000053d200001536000006e40
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   000001000000070000006f40000b7500000e4f40000a7a400003274000015d00
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0000020000000e0000015f0000176a00001d1f000015750000064f0000033a00
                 +      0000000000000000000000000000000000000000000000000000000000000000
                .junk   64

                .bulk   00002a5400007f7e00002a5400003f7c00001f78000002400000024000000240
                 +      0000024000000240000002400000024000000240000002400000024000000240

                .bulk   0000552800017f7c0000552800007f7800003f70000005000000050000000500
                 +      0000050000000500000005000000050000000500000005000000050000000500

                .bulk   00012a5000037f7800012a5000017f7000007f6000000a0000000a0000000a00
                 +      00000a0000000a0000000a0000000a0000000a0000000a0000000a0000000a00

                .bulk   0002552000077f700002552000037f6000017f40000014000000140000001400
                 +      0000140000001400000014000000140000001400000014000000140000001400

                .bulk   00052a40000f7f6000052a4000077f4000037f00000028000000280000002800
                 +      0000280000002800000028000000280000002800000028000000280000002800

                .bulk   000a5500001f7f40000a5500000f7f0000077e00000050000000500000005000
                 +      0000500000005000000050000000500000005000000050000000500000005000

                .bulk   00152a00003f7f0000152a00001f7e00000f7c00000120000001200000012000
                 +      0001200000012000000120000001200000012000000120000001200000012000
                .junk   64

                .bulk   0000003c00003c3c00001668000015280000066000000a5000007a5e00000520
                 +      00001f7800000f70000006600000000000000000000000000000000000000000

                .bulk   000000780000787800002d5000002a5000000d40000015200001753c00000a40
                 +      00003f7000001f6000000d400000000000000000000000000000000000000000

                .bulk   000001700001717000005b200000552000001b0000002a4000036a7800001500
                 +      00007f6000003f4000001b000000000000000000000000000000000000000000

                .bulk   00000360000363600001364000012a4000003600000055000007557000002a00
                 +      00017f4000007f00000036000000000000000000000000000000000000000000

                .bulk   000007400007474000026d000002550000006c0000012a00000f2b6000005400
                 +      00037f0000017e0000006c000000000000000000000000000000000000000000

                .bulk   00000f00000f0f0000055a0000052a000001580000025400001e574000012800
                 +      00077e0000037c00000158000000000000000000000000000000000000000000

                .bulk   00001e00001e1e00000b3400000a54000003300000052800003d2f0000025000
                 +      000f7c0000077800000330000000000000000000000000000000000000000000
                .junk   64

                .bulk   00003c3c000016680000066000003a5c0000052000001f780000066000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0000787800002d5000000d400000753800000a4000003f7000000d4000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0001717000005b2000001b0000016a700000150000007f6000001b0000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0003636000013640000036000003556000002a0000017f400000360000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   0007474000026d0000006c0000072b400000540000037f0000006c0000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   000f0f0000055a0000015800000e57000001280000077e000001580000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000

                .bulk   001e1e00000b340000033000001d2e0000025000000f7c000003300000000000
                 +      0000000000000000000000000000000000000000000000000000000000000000
                .junk   64
